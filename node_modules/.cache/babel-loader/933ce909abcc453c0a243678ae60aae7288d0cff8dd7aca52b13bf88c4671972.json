{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\TaxHistory\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Cookies from 'js-cookie';\n// import './index.css'; // Import TaxHistory specific CSS\n\n// const TaxHistory = () => {\n//     const [history, setHistory] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [message, setMessage] = useState('');\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n//     const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n\n//     // Helper function to safely format currency values\n//     const formatCurrency = (value) => {\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\n//             return 'N/A';\n//         }\n//         return parseFloat(value).toLocaleString('en-IN', {\n//             style: 'currency',\n//             currency: 'INR',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2,\n//         });\n//     };\n\n//     // Helper function to render extracted fields dynamically (duplicated from TaxUploader for self-containment)\n//     const renderExtractedFields = (fields) => {\n//         if (!fields) return null;\n\n//         const fieldOrder = [\n//             // Personal & Employer Info\n//             \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\",\n//             \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\n//             // Financial Years & Period\n//             \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\n//             // Income\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\n//             \"total_exempt_allowances\",\n//             \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\",\n//             \"gross_total_income_as_per_document\",\n//             // Deductions\n//             \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\n//             \"epf_contribution\", \"esi_contribution\",\n//             // Tax Paid\n//             \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\",\n//             \"advance_tax\", \"self_assessment_tax\",\n//             // Other Tax Info\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\",\n//             // Bank Statement Details\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\n//             \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"\n//         ];\n\n//         // Define display names for better readability\n//         const displayNames = {\n//             \"name_of_employee\": \"Name of Employee\",\n//             \"pan_of_employee\": \"PAN of Employee\",\n//             \"date_of_birth\": \"Date of Birth\",\n//             \"gender\": \"Gender\",\n//             \"residential_status\": \"Residential Status\",\n//             \"employer_name\": \"Employer Name\",\n//             \"employer_address\": \"Employer Address\",\n//             \"pan_of_deductor\": \"PAN of Deductor\",\n//             \"tan_of_deductor\": \"TAN of Deductor\",\n//             \"designation_of_employee\": \"Designation\",\n//             \"financial_year\": \"Financial Year\",\n//             \"assessment_year\": \"Assessment Year\",\n//             \"period_from\": \"Period From\",\n//             \"period_to\": \"Period To\",\n//             \"statement_start_date\": \"Statement Start Date\",\n//             \"statement_end_date\": \"Statement End Date\",\n//             \"gross_salary_total\": \"Gross Salary Total\",\n//             \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\n//             \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\n//             \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\n//             \"basic_salary\": \"Basic Salary\",\n//             \"hra_received\": \"HRA Received\",\n//             \"conveyance_allowance\": \"Conveyance Allowance\",\n//             \"transport_allowance\": \"Transport Allowance\",\n//             \"overtime_pay\": \"Overtime Pay\",\n//             \"total_exempt_allowances\": \"Total Exempt Allowances\",\n//             \"income_from_house_property\": \"Income from House Property\",\n//             \"income_from_other_sources\": \"Income from Other Sources\",\n//             \"capital_gains_long_term\": \"Long Term Capital Gains\",\n//             \"capital_gains_short_term\": \"Short Term Capital Gains\",\n//             \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\n//             \"professional_tax\": \"Professional Tax\",\n//             \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\n//             \"deduction_80c\": \"Deduction 80C\",\n//             \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\n//             \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\n//             \"deduction_80ccc\": \"Deduction 80CCC\",\n//             \"deduction_80ccd\": \"Deduction 80CCD\",\n//             \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\n//             \"deduction_80d\": \"Deduction 80D\",\n//             \"deduction_80g\": \"Deduction 80G\",\n//             \"deduction_80tta\": \"Deduction 80TTA\",\n//             \"deduction_80ttb\": \"Deduction 80TTB\",\n//             \"deduction_80e\": \"Deduction 80E\",\n//             \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\n//             \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\n//             \"epf_contribution\": \"EPF Contribution\",\n//             \"esi_contribution\": \"ESI Contribution\",\n//             \"total_tds\": \"Total TDS\",\n//             \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\n//             \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\n//             \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\n//             \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\n//             \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\n//             \"advance_tax\": \"Advance Tax\",\n//             \"self_assessment_tax\": \"Self-Assessment Tax\",\n//             \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\n//             \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\n//             \"refund_status_as_per_document\": \"Refund Status (Doc)\",\n//             \"tax_regime_chosen\": \"Tax Regime Chosen\",\n//             \"net_amount_payable\": \"Net Amount Payable\",\n//             \"days_present\": \"Days Present\",\n//             \"overtime_hours\": \"Overtime Hours\",\n//             \"account_holder_name\": \"Account Holder Name\",\n//             \"account_number\": \"Account Number\",\n//             \"ifsc_code\": \"IFSC Code\",\n//             \"bank_name\": \"Bank Name\",\n//             \"branch_address\": \"Branch Address\",\n//             \"opening_balance\": \"Opening Balance\",\n//             \"closing_balance\": \"Closing Balance\",\n//             \"total_deposits\": \"Total Deposits\",\n//             \"total_withdrawals\": \"Total Withdrawals\"\n//         };\n\n//         return (\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\n//                 {fieldOrder.map(key => {\n//                     let value = fields[key];\n//                     // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\n//                     // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\n//                     if (value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null')) {\n//                         return null;\n//                     }\n\n//                     // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\n//                     if (typeof value === 'number') {\n//                         if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || \n//                             key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') ||\n//                             key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') ||\n//                             key.includes('overtime_pay') || key.includes('net_amount_payable')) {\n//                             // Display 0.0 for actual zero financial values, otherwise format currency\n//                             value = formatCurrency(value);\n//                         } else {\n//                             // For other numeric fields, just display the number directly\n//                             value = value.toString();\n//                         }\n//                     }\n\n//                     // Special handling for transaction_summary if it's an array and not empty\n//                     if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\n//                         return (\n//                             <li key={key}>\n//                                 <strong>{displayNames[key] || key}:</strong>\n//                                 <pre className=\"extracted-fields-preview mt-2\">\n//                                     {JSON.stringify(value.map(tx => ({\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\", // Format date\n//                                         description: tx.description,\n//                                         amount: formatCurrency(tx.amount)\n//                                     })), null, 2)}\n//                                 </pre>\n//                             </li>\n//                         );\n//                     }\n\n//                     // Filter out empty arrays as well\n//                     if (Array.isArray(value) && value.length === 0) {\n//                         return null;\n//                     }\n\n//                     // Render other fields if their value is not \"null\" (string) or empty string\n//                     if (typeof value === 'string' && value.trim() === '') {\n//                         return null;\n//                     }\n\n//                     return (\n//                         <li key={key}>\n//                             <strong>{displayNames[key] || key}:</strong> {value}\n//                         </li>\n//                     );\n//                 })}\n//             </ul>\n//         );\n//     };\n\n//     useEffect(() => {\n//         const fetchHistory = async () => {\n//             setLoading(true);\n//             setMessage('Fetching your tax history...');\n//             setMessageType('info');\n//             const jwt_token = Cookies.get('jwt_token');\n\n//             try {\n//                 const config = {\n//                     headers: {\n//                         'Authorization': `Bearer ${jwt_token}`,\n//                     }\n//                 };\n//                 // Fetch aggregated tax records for the user, organized by financial year\n//                 const response = await axios.get('http://127.0.0.1:5000/api/tax-records', config);\n\n//                 if (response.data.status === 'success') {\n//                     if (Array.isArray(response.data.history)) {\n//                         setHistory(response.data.history);\n//                         setMessage('Tax history loaded successfully.');\n//                         setMessageType('success');\n//                     } else {\n//                         console.error('API returned non-array data for history property:', response.data.history);\n//                         setHistory([]);\n//                         setMessage('Failed to load tax history: Unexpected data format.');\n//                         setMessageType('error');\n//                     }\n//                 } else {\n//                     setMessage(response.data.message || 'Failed to fetch tax history.');\n//                     setMessageType('error');\n//                     setHistory([]);\n//                 }\n//             } catch (error) {\n//                 console.error('Fetch history error:', error);\n//                 if (error.response) {\n//                     if (error.response.status === 401) {\n//                         setMessage('Authentication required. Please log in.');\n//                         Cookies.remove('jwt_token');\n//                         window.location.href = '/login';\n//                     } else if (error.response.data && error.response.data.message) {\n//                         setMessage(`Error: ${error.response.data.message}`);\n//                     } else {\n//                         setMessage(`Server responded with status ${error.response.status}`);\n//                     }\n//                 } else {\n//                     setMessage('An error occurred while fetching tax history. Check network connection and backend server.');\n//                 }\n//                 setMessageType('error');\n//                 setHistory([]);\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchHistory();\n//     }, []); // Empty dependency array means this runs once on mount\n\n//     const handleViewDetails = (record) => {\n//         setSelectedRecord(record);\n//     };\n\n//     const handleCloseDetails = () => {\n//         setSelectedRecord(null);\n//     };\n\n//     const handleGenerateITRForm = async (recordId) => {\n//         setIsGeneratingITR(true);\n//         setMessage('Generating ITR form...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 },\n//                 responseType: 'blob', // Important for receiving a file\n//             };\n\n//             // The backend route for generating ITR should use the record ID to fetch the aggregated data\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${recordId}`, config);\n\n//             if (response.status === 200) {\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\n//                 const downloadUrl = window.URL.createObjectURL(blob);\n//                 const contentDisposition = response.headers['content-disposition'];\n//                 let filename = `ITR_Form_${recordId}.pdf`; // Default filename\n\n//                 if (contentDisposition) {\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n//                     if (filenameMatch && filenameMatch[1]) {\n//                         filename = filenameMatch[1];\n//                     }\n//                 }\n\n//                 const link = document.createElement('a');\n//                 link.href = downloadUrl;\n//                 link.setAttribute('download', filename);\n//                 document.body.appendChild(link);\n//                 link.click();\n//                 link.remove();\n//                 window.URL.revokeObjectURL(downloadUrl);\n\n//                 setMessage('ITR form generated and downloaded successfully!');\n//                 setMessageType('success');\n//             } else {\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('ITR generation error:', error);\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\n//                 const reader = new FileReader();\n//                 reader.onload = () => {\n//                     try {\n//                         const errorJson = JSON.parse(reader.result);\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\n//                     } catch (e) {\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\n//                     }\n//                 };\n//                 reader.readAsText(error.response.data);\n//             } else {\n//                 setMessage('Network error or server unavailable during ITR form generation.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingITR(false);\n//         }\n//     };\n\n//     return (\n//         <div className=\"tax-history-container section-box\">\n//             {/* Inlined CSS for styling the component */}\n//             <style>{`\n//                 /* General Body Styling */\n//                 body {\n//                     font-family: 'Inter', sans-serif;\n//                     background-color: #f0f2f5;\n//                     margin: 0;\n//                     padding: 20px;\n//                     color: #333;\n//                     line-height: 1.6;\n//                 }\n\n//                 /* Section Box Styling */\n//                 .section-box {\n//                     background-color: #ffffff;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n//                     margin-bottom: 25px;\n//                     border: 1px solid #e0e0e0;\n//                 }\n\n//                 /* Tax History Container */\n//                 .tax-history-container {\n//                     max-width: 900px;\n//                     margin: 30px auto;\n//                     padding: 30px;\n//                     background-color: #fff;\n//                     border-radius: 15px;\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n//                     border: 1px solid #d0d0d0;\n//                 }\n\n//                 .tax-history-title {\n//                     text-align: center;\n//                     color: #2c3e50;\n//                     margin-bottom: 30px;\n//                     font-size: 2.2em;\n//                     font-weight: 700;\n//                     letter-spacing: -0.5px;\n//                 }\n\n//                 /* Loading Spinner */\n//                 .tax-history-loading {\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                     margin-top: 25px;\n//                     font-size: 1.1em;\n//                     color: #007bff;\n//                     font-weight: 500;\n//                 }\n\n//                 .tax-history-spinner {\n//                     border: 4px solid #f3f3f3;\n//                     border-top: 4px solid #007bff;\n//                     border-radius: 50%;\n//                     width: 24px;\n//                     height: 24px;\n//                     animation: spin 1s linear infinite;\n//                     margin-right: 10px;\n//                 }\n\n//                 @keyframes spin {\n//                     0% { transform: rotate(0deg); }\n//                     100% { transform: rotate(360deg); }\n//                 }\n\n//                 /* Messages */\n//                 .tax-history-message {\n//                     padding: 15px;\n//                     margin-top: 25px;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     font-weight: 500;\n//                     text-align: center;\n//                 }\n\n//                 .tax-history-message.info {\n//                     background-color: #e7f3ff;\n//                     color: #0056b3;\n//                     border: 1px solid #b3d7ff;\n//                 }\n\n//                 .tax-history-message.success {\n//                     background-color: #d4edda;\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                 }\n\n//                 .tax-history-message.error {\n//                     background-color: #f8d7da;\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                 }\n\n//                 /* No Records Message */\n//                 .no-records-message {\n//                     text-align: center;\n//                     font-size: 1.1em;\n//                     color: #6c757d;\n//                     margin-top: 30px;\n//                     padding: 20px;\n//                     border: 1px dashed #ced4da;\n//                     border-radius: 8px;\n//                     background-color: #f8f9fa;\n//                 }\n\n//                 /* History List and Item */\n//                 .history-list {\n//                     margin-top: 30px;\n//                 }\n\n//                 .history-item {\n//                     background-color: #ffffff;\n//                     padding: 20px;\n//                     margin-bottom: 20px;\n//                     border-radius: 10px;\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n//                     border: 1px solid #e9ecef;\n//                     transition: transform 0.2s ease, box-shadow 0.2s ease;\n//                 }\n\n//                 .history-item:hover {\n//                     transform: translateY(-3px);\n//                     box-shadow: 0 6px 15px rgba(0, 0, 0, 0.12);\n//                 }\n\n//                 .history-item-header {\n//                     display: flex;\n//                     justify-content: space-between;\n//                     align-items: center;\n//                     margin-bottom: 15px;\n//                     padding-bottom: 10px;\n//                     border-bottom: 1px solid #f0f2f5;\n//                 }\n\n//                 .history-item-header h3 {\n//                     color: #007bff;\n//                     font-size: 1.4em;\n//                     margin: 0;\n//                 }\n\n//                 .history-item-header .timestamp {\n//                     font-size: 0.9em;\n//                     color: #777;\n//                 }\n\n//                 .history-item-details p {\n//                     margin: 8px 0;\n//                     font-size: 0.95em;\n//                     color: #333;\n//                 }\n\n//                 .history-item-actions {\n//                     margin-top: 20px;\n//                     display: flex;\n//                     gap: 10px;\n//                     justify-content: flex-end;\n//                 }\n\n//                 .history-item-actions button {\n//                     padding: 10px 18px;\n//                     border: none;\n//                     border-radius: 8px;\n//                     font-size: 0.95em;\n//                     font-weight: 600;\n//                     cursor: pointer;\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\n//                 }\n\n//                 .view-details-button {\n//                     background-color: #007bff;\n//                     color: white;\n//                     box-shadow: 0 3px 8px rgba(0, 123, 255, 0.2);\n//                 }\n\n//                 .view-details-button:hover {\n//                     background-color: #0056b3;\n//                     transform: translateY(-1px);\n//                 }\n\n//                 .generate-itr-button {\n//                     background-color: #28a745;\n//                     color: white;\n//                     box-shadow: 0 3px 8px rgba(40, 167, 69, 0.2);\n//                 }\n\n//                 .generate-itr-button:hover {\n//                     background-color: #218838;\n//                     transform: translateY(-1px);\n//                 }\n\n//                 .generate-itr-button:disabled {\n//                     background-color: #a0c9f1;\n//                     cursor: not-allowed;\n//                     box-shadow: none;\n//                     transform: none;\n//                 }\n\n//                 /* Selected Record Details View */\n//                 .selected-record-details {\n//                     margin-top: 30px;\n//                     background-color: #f9f9f9;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\n//                     border: 1px solid #eee;\n//                 }\n\n//                 .selected-record-details .back-button {\n//                     background-color: #6c757d;\n//                     color: white;\n//                     padding: 10px 15px;\n//                     border-radius: 8px;\n//                     border: none;\n//                     cursor: pointer;\n//                     margin-bottom: 25px;\n//                     display: inline-flex;\n//                     align-items: center;\n//                     gap: 5px;\n//                     transition: background-color 0.3s ease;\n//                 }\n\n//                 .selected-record-details .back-button:hover {\n//                     background-color: #5a6268;\n//                 }\n\n//                 .selected-record-title {\n//                     text-align: center;\n//                     color: #2c3e50;\n//                     margin-bottom: 30px;\n//                     font-size: 2em;\n//                     font-weight: 700;\n//                 }\n\n//                 .document-processing-summary-section,\n//                 .aggregated-financial-data-section,\n//                 .final-tax-computation-section,\n//                 .suggestions-output {\n//                     margin-top: 20px;\n//                     padding: 20px;\n//                     background-color: #ffffff;\n//                     border-radius: 10px;\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n//                     border: 1px solid #e9ecef;\n//                 }\n\n//                 .document-processing-summary-section h4,\n//                 .aggregated-financial-data-section h4,\n//                 .final-tax-computation-section h4,\n//                 .suggestions-output h4 {\n//                     color: #34495e;\n//                     font-size: 1.6em;\n//                     margin-bottom: 20px;\n//                     border-bottom: 2px solid #f0f2f5;\n//                     padding-bottom: 10px;\n//                     text-align: center;\n//                 }\n\n//                 .income-details-section,\n//                 .deductions-section,\n//                 .taxation-summary-section {\n//                     margin-bottom: 25px;\n//                     padding: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     border-radius: 8px;\n//                     background-color: #fdfdfd;\n//                 }\n\n//                 .income-details-section h5,\n//                 .deductions-section h5,\n//                 .taxation-summary-section h5 {\n//                     color: #007bff;\n//                     font-size: 1.3em;\n//                     margin-bottom: 15px;\n//                     border-bottom: 1px solid #e0e0e0;\n//                     padding-bottom: 8px;\n//                 }\n\n//                 .income-details-section p,\n//                 .deductions-section p,\n//                 .taxation-summary-section p {\n//                     margin: 8px 0;\n//                     font-size: 0.98em;\n//                     color: #333;\n//                 }\n\n//                 .computation-detail-item {\n//                     margin-bottom: 5px;\n//                     font-size: 0.95em;\n//                 }\n\n//                 .final-amount-box {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\n//                     border: 1px solid #c3e6cb;\n//                     text-align: center;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                 }\n\n//                 .final-amount-box .tax-due-amount {\n//                     background-color: #f8d7da; /* Light red for tax due */\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .final-amount-box .refund-amount {\n//                     background-color: #d4edda; /* Light green for refund */\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .computation-notes {\n//                     margin-top: 20px;\n//                     padding: 10px;\n//                     background-color: #f0f8ff;\n//                     border: 1px solid #d1e7fd;\n//                     border-radius: 8px;\n//                     font-size: 0.9em;\n//                     color: #444;\n//                     font-style: italic;\n//                 }\n\n//                 .highlight-regime {\n//                     font-weight: bold;\n//                     color: #007bff;\n//                 }\n\n//                 .suggestions-list {\n//                     list-style-type: disc;\n//                     margin-left: 20px;\n//                     padding-left: 0;\n//                 }\n\n//                 .suggestions-list li {\n//                     margin-bottom: 8px;\n//                     color: #333;\n//                 }\n\n//                 .gemini-regime-analysis {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     background-color: #e6f7ff;\n//                     border: 1px solid #91d5ff;\n//                     border-radius: 8px;\n//                 }\n\n//                 .gemini-regime-analysis h5 {\n//                     color: #0056b3;\n//                     margin-bottom: 10px;\n//                 }\n\n//                 /* Responsive Adjustments */\n//                 @media (max-width: 768px) {\n//                     .tax-history-container {\n//                         margin: 20px 10px;\n//                         padding: 20px;\n//                     }\n\n//                     .tax-history-title {\n//                         font-size: 1.8em;\n//                     }\n\n//                     .history-item-header h3 {\n//                         font-size: 1.2em;\n//                     }\n\n//                     .history-item-actions button {\n//                         padding: 8px 12px;\n//                         font-size: 0.85em;\n//                     }\n\n//                     .selected-record-title {\n//                         font-size: 1.8em;\n//                     }\n\n//                     .document-processing-summary-section h4,\n//                     .aggregated-financial-data-section h4,\n//                     .final-tax-computation-section h4,\n//                     .suggestions-output h4 {\n//                         font-size: 1.4em;\n//                     }\n\n//                     .income-details-section h5,\n//                     .deductions-section h5,\n//                     .taxation-summary-section h5,\n//                     .suggestions-output h5 {\n//                         font-size: 1.1em;\n//                     }\n//                 }\n\n//                 @media (max-width: 480px) {\n//                     body {\n//                         padding: 10px;\n//                     }\n\n//                     .tax-history-container {\n//                         margin: 10px;\n//                         padding: 15px;\n//                     }\n\n//                     .tax-history-title {\n//                         font-size: 1.5em;\n//                     }\n\n//                     .tax-history-message {\n//                         font-size: 0.9em;\n//                         padding: 10px;\n//                     }\n//                 }\n//             `}</style>\n//             <h2 className=\"tax-history-title\">Your Tax Filing History</h2>\n\n//             {loading && (\n//                 <div className=\"tax-history-loading\">\n//                     <div className=\"tax-history-spinner\"></div>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {message && !loading && (\n//                 <div className={`tax-history-message ${messageType}`}>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {history.length === 0 && !loading && messageType !== 'error' && (\n//                 <p className=\"no-records-message\">No tax records found. Upload documents to get started!</p>\n//             )}\n\n//             {/* Display history records (list view) */}\n//             {!selectedRecord && history.length > 0 && !loading && (\n//                 <div className=\"history-list\">\n//                     {history.map((record) => (\n//                         <div key={record._id} className=\"history-item section-box\">\n//                             <div className=\"history-item-header\">\n//                                 <h3>\n//                                     {record.aggregated_financial_data?.financial_year || 'N/A'} (PAN: {record.aggregated_financial_data?.pan_of_employee || 'N/A'})\n//                                 </h3>\n//                                 <span className=\"timestamp\">\n//                                     Last Updated: {new Date(record.timestamp).toLocaleString()}\n//                                 </span>\n//                             </div>\n//                             <div className=\"history-item-details\">\n//                                 <p><strong>Assessment Year:</strong> {record.aggregated_financial_data?.assessment_year || 'N/A'}</p>\n//                                 <p><strong>Name:</strong> {record.aggregated_financial_data?.name_of_employee || 'N/A'}</p>\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(record.final_tax_computation_summary?.estimated_tax_payable)}</p>\n//                                 {/* Display refund due or additional tax due from prediction summary */}\n//                                 {record.final_tax_computation_summary?.predicted_refund_due > 0 && (\n//                                     <p className=\"refund-amount\"><strong>Refund Due:</strong> {formatCurrency(record.final_tax_computation_summary?.predicted_refund_due)}</p>\n//                                 )}\n//                                 {record.final_tax_computation_summary?.predicted_additional_due > 0 && (\n//                                     <p className=\"tax-due-amount\"><strong>Additional Tax Due:</strong> {formatCurrency(record.final_tax_computation_summary?.predicted_additional_due)}</p>\n//                                 )}\n//                             </div>\n//                             <div className=\"history-item-actions\">\n//                                 <button onClick={() => handleViewDetails(record)} className=\"view-details-button\">\n//                                     View Details\n//                                 </button>\n//                                 <button\n//                                     onClick={() => handleGenerateITRForm(record._id)}\n//                                     className=\"generate-itr-button\"\n//                                     disabled={isGeneratingITR}\n//                                 >\n//                                     {isGeneratingITR ? 'Generating...' : 'Generate ITR Form'}\n//                                 </button>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             )}\n\n//             {/* Display selected record details */}\n//             {selectedRecord && (\n//                 <div className=\"selected-record-details\">\n//                     <button onClick={handleCloseDetails} className=\"back-button\">\n//                         &larr; Back to History\n//                     </button>\n//                     <h3 className=\"selected-record-title\">\n//                         Details for {selectedRecord.aggregated_financial_data?.financial_year || 'N/A'} (PAN: {selectedRecord.aggregated_financial_data?.pan_of_employee || 'N/A'})\n//                     </h3>\n\n//                     {/* Document Processing Summary */}\n//                     {selectedRecord.document_processing_summary && selectedRecord.document_processing_summary.length > 0 && (\n//                         <div className=\"document-processing-summary-section section-box\">\n//                             <h4>Documents Processed for this Year</h4>\n//                             {selectedRecord.document_processing_summary.map((doc, index) => {\n//                                 const statusClass = doc.status === 'success' ? 'status-success' :\n//                                                     doc.status === 'warning' ? 'status-warning' : 'status-error';\n//                                 return (\n//                                     <div key={index} className=\"document-status-item\">\n//                                         <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\n//                                         <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\n//                                         <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\n//                                         <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\n//                                         {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\n//                                             <p><strong>Extracted Fields:</strong>\n//                                                 <pre className=\"extracted-fields-preview\">\n//                                                     {renderExtractedFields(doc.extracted_fields)}\n//                                                 </pre>\n//                                             </p>\n//                                         )}\n//                                         {doc.extracted_raw_text && (\n//                                             <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\n//                                         )}\n//                                     </div>\n//                                 );\n//                             })}\n//                         </div>\n//                     )}\n\n//                     {/* Aggregated Financial Data */}\n//                     {selectedRecord.aggregated_financial_data && (\n//                         <div className=\"aggregated-financial-data-section section-box\">\n//                             <h4>Aggregated Financial Data Summary</h4>\n//                             <div className=\"income-details-section\">\n//                                 <h5>Income Details</h5>\n//                                 <p><strong>Financial Year:</strong> {selectedRecord.aggregated_financial_data.financial_year || 'N/A'}</p>\n//                                 <p><strong>Assessment Year:</strong> {selectedRecord.aggregated_financial_data.assessment_year || 'N/A'}</p>\n//                                 <p><strong>Name:</strong> {selectedRecord.aggregated_financial_data.name_of_employee || 'N/A'}</p>\n//                                 <p><strong>PAN:</strong> {selectedRecord.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\n//                                 <p><strong>Date of Birth:</strong> {selectedRecord.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? selectedRecord.aggregated_financial_data.date_of_birth : 'N/A'}</p>\n//                                 <p><strong>Age:</strong> {selectedRecord.aggregated_financial_data.Age || 'N/A'}</p>\n//                                 <p><strong>Gross Annual Salary:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.gross_salary_total)}</p>\n//                                 <p><strong>Exempt Allowances:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_exempt_allowances)}</p>\n//                                 <p><strong>Income from House Property:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_house_property)}</p>\n//                                 <p><strong>Income from Other Sources:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_other_sources)}</p>\n//                                 <p><strong>Long Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_long_term)}</p>\n//                                 <p><strong>Short Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_short_term)}</p>\n//                                 <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.calculated_gross_income)}</p>\n//                             </div>\n\n//                             <div className=\"deductions-section\">\n//                                 <h5>Deductions Claimed</h5>\n//                                 {selectedRecord.aggregated_financial_data.standard_deduction > 0 && \n//                                     <p><strong>Standard Deduction:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.standard_deduction)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.professional_tax > 0 &&\n//                                     <p><strong>Professional Tax:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.professional_tax)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\n//                                     <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80C > 0 &&\n//                                     <p><strong>Section 80C Investments:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80C)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80CCD1B > 0 &&\n//                                     <p><strong>Section 80CCD1B:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80CCD1B)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80D > 0 &&\n//                                     <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80D)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80G > 0 &&\n//                                     <p><strong>Section 80G:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80G)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80TTA > 0 &&\n//                                     <p><strong>Section 80TTA:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTA)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80TTB > 0 &&\n//                                     <p><strong>Section 80TTB:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTB)}</p>\n//                                 }\n//                                 {selectedRecord.aggregated_financial_data.deduction_80E > 0 &&\n//                                     <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80E)}</p>\n//                                 }\n//                                 <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deductions)}</p>\n//                             </div>\n\n//                             <div className=\"taxation-summary-section\">\n//                                 <h5>Tax Payments & Regime</h5>\n//                                 <p><strong>Total TDS Credit:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.total_tds_credit)}</p>\n//                                 <p><strong>Advance Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.advance_tax)}</p>\n//                                 <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.self_assessment_tax)}</p>\n//                                 <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{selectedRecord.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\n//                             </div>\n//                         </div>\n//                     )}\n\n//                     {/* Final Tax Computation Summary (Rule-Based) */}\n//                     {selectedRecord.final_tax_computation_summary && (\n//                         <div className=\"final-tax-computation-section section-box\">\n//                             <h4>Final Tax Computation Summary (Rule-Based)</h4>\n//                             {selectedRecord.final_tax_computation_summary.calculation_details && selectedRecord.final_tax_computation_summary.calculation_details.length > 0 && (\n//                                 <div className=\"computation-details-list\">\n//                                     <h5>Calculation Steps:</h5>\n//                                     <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\n//                                         {selectedRecord.final_tax_computation_summary.calculation_details.map((detail, idx) => (\n//                                             <li key={idx} className=\"computation-detail-item\">{detail}</li>\n//                                         ))}\n//                                     </ul>\n//                                 </div>\n//                             )}\n//                             <div className=\"final-amount-box\">\n//                                 <p><strong>Computed Taxable Income:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.computed_taxable_income)}</p>\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.estimated_tax_payable)}</p>\n//                                 <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{selectedRecord.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\n//                                 {selectedRecord.final_tax_computation_summary.predicted_refund_due > 0 && (\n//                                     <p className=\"refund-amount\">\n//                                         <strong>Refund Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_refund_due)}\n//                                     </p>\n//                                 )}\n//                                 {selectedRecord.final_tax_computation_summary.predicted_additional_due > 0 && (\n//                                     <p className=\"tax-due-amount\">\n//                                         <strong>Additional Tax Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_additional_due)}\n//                                     </p>\n//                                 )}\n//                             </div>\n//                             {selectedRecord.final_tax_computation_summary.notes && selectedRecord.final_tax_computation_summary.notes.length > 0 && (\n//                                 <p className=\"computation-notes\">\n//                                     <strong>Note:</strong> {Array.isArray(selectedRecord.final_tax_computation_summary.notes) ? selectedRecord.final_tax_computation_summary.notes.join(', ') : selectedRecord.final_tax_computation_summary.notes}\n//                                 </p>\n//                             )}\n//                         </div>\n//                     )}\n\n//                     {/* AI Recommendations & Predictions */}\n//                     {selectedRecord.ml_prediction_summary || selectedRecord.suggestions_from_gemini?.length > 0 || selectedRecord.gemini_regime_analysis ? (\n//                         <div className=\"suggestions-output section-box\">\n//                             <h4>AI Recommendations & Predictions</h4>\n//                             {selectedRecord.suggestions_from_gemini && selectedRecord.suggestions_from_gemini.length > 0 ? (\n//                                 <>\n//                                     <h5>Based on Gemini AI:</h5>\n//                                     <ul className=\"suggestions-list\">\n//                                         {selectedRecord.suggestions_from_gemini.map((suggestion, index) => (\n//                                             <li key={index}>{suggestion}</li>\n//                                         ))}\n//                                     </ul>\n//                                 </>\n//                             ) : (\n//                                 <p>Gemini did not provide specific tax-saving suggestions for this record.</p>\n//                             )}\n\n//                             {selectedRecord.gemini_regime_analysis && (\n//                                 <div className=\"gemini-regime-analysis\">\n//                                     <h5>Gemini's Regime Analysis:</h5>\n//                                     <p>{selectedRecord.gemini_regime_analysis}</p>\n//                                 </div>\n//                             )}\n\n//                             {selectedRecord.ml_prediction_summary && (\n//                                 <>\n//                                     <h5>ML Model Prediction:</h5>\n//                                     {selectedRecord.ml_prediction_summary.predicted_tax_regime && (\n//                                         <p><strong>Predicted Tax Regime:</strong> {selectedRecord.ml_prediction_summary.predicted_tax_regime}</p>\n//                                     )}\n//                                     <p><strong>Predicted Tax Liability:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)}</p>\n//                                     <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)}</p>\n//                                     <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)}</p>\n//                                     {selectedRecord.ml_prediction_summary.notes && (\n//                                         <p><strong>Notes:</strong> {selectedRecord.ml_prediction_summary.notes}</p>\n//                                     )}\n//                                 </>\n//                             )}\n//                         </div>\n//                     ) : (\n//                         <div className=\"section-box\">\n//                             <p>No AI recommendations or ML predictions available for this record yet. These are generated when you click \"Get AI Suggestions & ML Predictions\" after uploading documents.</p>\n//                         </div>\n//                     )}\n\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default TaxHistory;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import Cookies from 'js-cookie';\n\n// const TaxHistory = () => {\n//     const [history, setHistory] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [message, setMessage] = useState('');\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n//     const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false); // Added for history re-generation\n\n//     // Helper function to safely format currency values\n//     const formatCurrency = (value) => {\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\n//             return 'N/A';\n//         }\n//         return parseFloat(value).toLocaleString('en-IN', {\n//             style: 'currency',\n//             currency: 'INR',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2,\n//         });\n//     };\n\n//     // Helper function to render extracted fields dynamically, similar to TaxUploader\n//     const renderExtractedFields = (fields, identifiedType) => {\n//         if (!fields) return null;\n\n//         // Define a comprehensive list of all possible fields and their display names\n//         const fieldDefinitions = {\n//             // Personal & Employer Info\n//             \"name_of_employee\": { label: \"Name of Employee\", type: \"text\" },\n//             \"pan_of_employee\": { label: \"PAN of Employee\", type: \"text\" },\n//             \"date_of_birth\": { label: \"Date of Birth\", type: \"date\" },\n//             \"gender\": { label: \"Gender\", type: \"text\" },\n//             \"residential_status\": { label: \"Residential Status\", type: \"text\" },\n//             \"employer_name\": { label: \"Employer Name\", type: \"text\" },\n//             \"employer_address\": { label: \"Employer Address\", type: \"text\" },\n//             \"pan_of_deductor\": { label: \"PAN of Deductor\", type: \"text\" },\n//             \"tan_of_deductor\": { label: \"TAN of Deductor\", type: \"text\" },\n//             \"designation_of_employee\": { label: \"Designation\", type: \"text\" },\n//             // Financial Years & Period\n//             \"financial_year\": { label: \"Financial Year\", type: \"text\" },\n//             \"assessment_year\": { label: \"Assessment Year\", type: \"text\" },\n//             \"period_from\": { label: \"Period From\", type: \"date\" },\n//             \"period_to\": { label: \"Period To\", type: \"date\" },\n//             \"statement_start_date\": { label: \"Statement Start Date\", type: \"date\" },\n//             \"statement_end_date\": { label: \"Statement End Date\", type: \"date\" },\n//             // Income\n//             \"gross_salary_total\": { label: \"Gross Salary Total\", type: \"currency\" },\n//             \"salary_as_per_sec_17_1\": { label: \"Salary U/S 17(1)\", type: \"currency\" },\n//             \"value_of_perquisites_u_s_17_2\": { label: \"Perquisites U/S 17(2)\", type: \"currency\" },\n//             \"profits_in_lieu_of_salary_u_s_17_3\": { label: \"Profits in Lieu of Salary U/S 17(3)\", type: \"currency\" },\n//             \"basic_salary\": { label: \"Basic Salary\", type: \"currency\" },\n//             \"hra_received\": { label: \"HRA Received\", type: \"currency\" },\n//             \"conveyance_allowance\": { label: \"Conveyance Allowance\", type: \"currency\" },\n//             \"transport_allowance\": { label: \"Transport Allowance\", type: \"currency\" },\n//             \"overtime_pay\": { label: \"Overtime Pay\", type: \"currency\" },\n//             \"total_exempt_allowances\": { label: \"Total Exempt Allowances\", type: \"currency\" },\n//             \"income_from_house_property\": { label: \"Income from House Property\", type: \"currency\" },\n//             \"income_from_other_sources\": { label: \"Income from Other Sources\", type: \"currency\" },\n//             \"capital_gains_long_term\": { label: \"Long Term Capital Gains\", type: \"currency\" },\n//             \"capital_gains_short_term\": { label: \"Short Term Capital Gains\", type: \"currency\" },\n//             \"gross_total_income_as_per_document\": { label: \"Gross Total Income (Doc)\", type: \"currency\" },\n//             // Deductions\n//             \"professional_tax\": { label: \"Professional Tax\", type: \"currency\" },\n//             \"interest_on_housing_loan_self_occupied\": { label: \"Interest on Home Loan (Self Occupied)\", type: \"currency\" },\n//             \"deduction_80c\": { label: \"Deduction 80C\", type: \"currency\" },\n//             \"deduction_80c_epf\": { label: \"Deduction 80C (EPF)\", type: \"currency\" },\n//             \"deduction_80c_insurance_premium\": { label: \"Deduction 80C (Insurance Premium)\", type: \"currency\" },\n//             \"deduction_80ccc\": { label: \"Deduction 80CCC\", type: \"currency\" },\n//             \"deduction_80ccd\": { label: \"Deduction 80CCD\", type: \"currency\" },\n//             \"deduction_80ccd1b\": { label: \"Deduction 80CCD(1B)\", type: \"currency\" },\n//             \"deduction_80d\": { label: \"Deduction 80D\", type: \"currency\" },\n//             \"deduction_80g\": { label: \"Deduction 80G\", type: \"currency\" },\n//             \"deduction_80tta\": { label: \"Deduction 80TTA\", type: \"currency\" },\n//             \"deduction_80ttb\": { label: \"Deduction 80TTB\", type: \"currency\" },\n//             \"deduction_80e\": { label: \"Deduction 80E\", type: \"currency\" },\n//             \"total_deductions_chapter_via\": { label: \"Total Chapter VI-A Deductions\", type: \"currency\" },\n//             \"aggregate_of_deductions_from_salary\": { label: \"Aggregate Deductions from Salary\", type: \"currency\" },\n//             \"epf_contribution\": { label: \"EPF Contribution\", type: \"currency\" },\n//             \"esi_contribution\": { label: \"ESI Contribution\", type: \"currency\" },\n//             // Tax Paid\n//             \"total_tds\": { label: \"Total TDS\", type: \"currency\" },\n//             \"total_tds_deducted_summary\": { label: \"Total TDS Deducted (Summary)\", type: \"currency\" },\n//             \"total_tds_deposited_summary\": { label: \"Total TDS Deposited (Summary)\", type: \"currency\" },\n//             \"quarter_1_receipt_number\": { label: \"Q1 Receipt Number\", type: \"text\" },\n//             \"quarter_1_tds_deducted\": { label: \"Q1 TDS Deducted\", type: \"currency\" },\n//             \"quarter_1_tds_deposited\": { label: \"Q1 TDS Deposited\", type: \"currency\" },\n//             \"advance_tax\": { label: \"Advance Tax\", type: \"currency\" },\n//             \"self_assessment_tax\": { label: \"Self-Assessment Tax\", type: \"currency\" },\n//             // Other Tax Info\n//             \"taxable_income_as_per_document\": { label: \"Taxable Income (Doc)\", type: \"currency\" },\n//             \"tax_payable_as_per_document\": { label: \"Tax Payable (Doc)\", type: \"currency\" },\n//             \"refund_status_as_per_document\": { label: \"Refund Status (Doc)\", type: \"text\" },\n//             \"tax_regime_chosen\": { label: \"Tax Regime Chosen\", type: \"text\" },\n//             \"net_amount_payable\": { label: \"Net Amount Payable\", type: \"currency\" },\n//             \"days_present\": { label: \"Days Present\", type: \"number\" },\n//             \"overtime_hours\": { label: \"Overtime Hours\", type: \"number\" },\n//             // Bank Statement Details\n//             \"account_holder_name\": { label: \"Account Holder Name\", type: \"text\" },\n//             \"account_number\": { label: \"Account Number\", type: \"text\" },\n//             \"ifsc_code\": { label: \"IFSC Code\", type: \"text\" },\n//             \"bank_name\": { label: \"Bank Name\", type: \"text\" },\n//             \"branch_address\": { label: \"Branch Address\", type: \"text\" },\n//             \"opening_balance\": { label: \"Opening Balance\", type: \"currency\" },\n//             \"closing_balance\": { label: \"Closing Balance\", type: \"currency\" },\n//             \"total_deposits\": { label: \"Total Deposits\", type: \"currency\" },\n//             \"total_withdrawals\": { label: \"Total Withdrawals\", type: \"currency\" },\n//             \"transaction_summary\": { label: \"Transaction Summary\", type: \"array_of_objects\" }\n//         };\n\n//         const taxRelatedFields = [\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\n//             \"total_exempt_allowances\", \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\",\n//             \"capital_gains_short_term\", \"gross_total_income_as_per_document\", \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\n//             \"epf_contribution\", \"esi_contribution\", \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\", \"advance_tax\", \"self_assessment_tax\",\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\"\n//         ];\n\n//         const bankStatementFields = [\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\n//             \"statement_start_date\", \"statement_end_date\", \"opening_balance\", \"closing_balance\",\n//             \"total_deposits\", \"total_withdrawals\", \"transaction_summary\"\n//         ];\n\n//         let fieldsToRender = [];\n//         if (identifiedType === 'Bank Statement') {\n//             fieldsToRender = bankStatementFields.filter(key => fields[key] !== undefined);\n//         } else {\n//             // For other document types, primarily show tax-related fields plus common ones\n//             fieldsToRender = Object.keys(fields).filter(key => \n//                 taxRelatedFields.includes(key) ||\n//                 [\"name_of_employee\", \"pan_of_employee\", \"financial_year\", \"assessment_year\", \"date_of_birth\"].includes(key)\n//             );\n//         }\n\n//         // Sort fields to render according to the predefined order for consistency\n//         fieldsToRender.sort((a, b) => {\n//             const indexA = Object.keys(fieldDefinitions).indexOf(a);\n//             const indexB = Object.keys(fieldDefinitions).indexOf(b);\n//             return indexA - indexB;\n//         });\n\n//         return (\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\n//                 {fieldsToRender.map(key => {\n//                     const fieldDef = fieldDefinitions[key];\n//                     let value = fields[key];\n\n//                     if (!fieldDef || value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null') || (typeof value === 'string' && value.trim() === '')) {\n//                         return null; // Skip if no definition, null, undefined, \"null\", or empty string\n//                     }\n\n//                     // Handle date fields that might come as \"0000-01-01\"\n//                     if (fieldDef.type === \"date\" && value === \"0000-01-01\") {\n//                         value = \"N/A\";\n//                     } else if (fieldDef.type === \"currency\" && typeof value === 'number') {\n//                         value = formatCurrency(value);\n//                     } else if (Array.isArray(value) && value.length === 0) {\n//                         return null; // Skip empty arrays\n//                     }\n\n//                     // Special handling for transaction_summary\n//                     if (key === \"transaction_summary\" && Array.isArray(value)) {\n//                         return (\n//                             <li key={key}>\n//                                 <strong>{fieldDef.label}:</strong>\n//                                 <pre className=\"extracted-fields-preview mt-2\">\n//                                     {value.length > 0 ? JSON.stringify(value.map(tx => ({\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\",\n//                                         description: tx.description,\n//                                         amount: formatCurrency(tx.amount)\n//                                     })), null, 2) : 'No transactions found.'}\n//                                 </pre>\n//                             </li>\n//                         );\n//                     }\n\n//                     return (\n//                         <li key={key}>\n//                             <strong>{fieldDef.label}:</strong> {value.toString()}\n//                         </li>\n//                     );\n//                 })}\n//             </ul>\n//         );\n//     };\n\n//     useEffect(() => {\n//         const fetchHistory = async () => {\n//             setLoading(true);\n//             setMessage('Fetching your tax history...');\n//             setMessageType('info');\n//             const jwt_token = Cookies.get('jwt_token');\n\n//             try {\n//                 const response = await axios.get('http://127.0.0.1:5000/api/tax-records', {\n//                     headers: {\n//                         'Authorization': `Bearer ${jwt_token}`\n//                     },\n//                     withCredentials: true,\n//                 });\n\n//                 if (response.data.status === 'success') {\n//                     setHistory(response.data.history);\n//                     setMessage('Tax history loaded successfully.');\n//                     setMessageType('success');\n//                 } else {\n//                     setMessage(response.data.message || 'Failed to fetch tax history.');\n//                     setMessageType('error');\n//                 }\n//             } catch (error) {\n//                 console.error('Error fetching tax history:', error);\n//                 setMessage(error.response?.data?.message || 'An error occurred while fetching history.');\n//                 setMessageType('error');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n\n//         fetchHistory();\n//     }, []);\n\n//     const handleViewDetails = (record) => {\n//         setSelectedRecord(record);\n//         window.scrollTo({ top: 0, behavior: 'smooth' }); // Scroll to top to view details\n//     };\n\n//     const handleBackToList = () => {\n//         setSelectedRecord(null);\n//         // setSuggestionsResult(null); // No need to clear global suggestions state in TaxHistory as it's part of selectedRecord now\n//     };\n\n//     const handleGetSuggestionsFromHistory = async (record) => {\n//         setIsGeneratingSuggestions(true);\n//         setMessage('Generating AI suggestions and ML predictions for this record...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', \n//                 { record_id: record._id }, \n//                 {\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                         'Authorization': `Bearer ${jwt_token}`\n//                     },\n//                     withCredentials: true,\n//                 }\n//             );\n\n//             if (response.data.status === 'success') {\n//                 setMessage('Suggestions and predictions generated!');\n//                 setMessageType('success');\n//                 // Update the selected record with new suggestions directly\n//                 setSelectedRecord(prev => ({\n//                     ...prev,\n//                     suggestions_from_gemini: response.data.suggestions_from_gemini,\n//                     gemini_regime_analysis: response.data.gemini_regime_analysis,\n//                     ml_prediction_summary: response.data.ml_prediction_summary,\n//                 }));\n//             } else {\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Error getting suggestions from history:', error);\n//             setMessage(error.response?.data?.message || 'An error occurred while fetching suggestions.');\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingSuggestions(false);\n//         }\n//     };\n\n//     const handleGenerateITRFromHistory = async (record) => {\n//         setIsGeneratingITR(true);\n//         setMessage('Generating ITR form...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${record._id}`, {\n//                 headers: {\n//                     'Authorization': `Bearer ${jwt_token}`\n//                 },\n//                 responseType: 'blob', // Important: receive the response as a Blob\n//                 withCredentials: true,\n//             });\n\n//             if (response.status === 200) {\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\n//                 const url = window.URL.createObjectURL(blob);\n//                 const contentDisposition = response.headers['content-disposition'];\n//                 let filename = 'ITR_Form.pdf';\n//                 if (contentDisposition) {\n//                     const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\n//                     if (filenameMatch && filenameMatch[1]) {\n//                         filename = filenameMatch[1];\n//                     }\n//                 }\n//                 const link = document.createElement('a');\n//                 link.href = url;\n//                 link.setAttribute('download', filename);\n//                 document.body.appendChild(link);\n//                 link.click();\n//                 link.parentNode.removeChild(link);\n//                 window.URL.revokeObjectURL(url);\n\n//                 setMessage('ITR form generated and downloaded!');\n//                 setMessageType('success');\n//             } else {\n//                  // Try to read error message from non-PDF response\n//                 const errorData = await new Response(response.data).text();\n//                 setMessage(errorData || 'Failed to generate ITR form.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Error generating ITR from history:', error);\n//             let errorMessage = 'An error occurred while generating ITR.';\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\n//                 const reader = new FileReader();\n//                 reader.onload = function() {\n//                     try {\n//                         const errorJson = JSON.parse(reader.result);\n//                         errorMessage = errorJson.message || errorMessage;\n//                     } catch (e) {\n//                         // Not a JSON error, use generic message\n//                         errorMessage = reader.result || error.response.statusText;\n//                     } finally {\n//                         setMessage(errorMessage);\n//                         setMessageType('error');\n//                     }\n//                 };\n//                 reader.readAsText(error.response.data);\n//             } else {\n//                 setMessage(errorMessage);\n//                 setMessageType('error');\n//             }\n//         } finally {\n//             setIsGeneratingITR(false);\n//         }\n//     };\n\n//     return (\n//         <div className=\"p-6 max-w-7xl mx-auto bg-gray-100 min-h-screen font-sans\">\n//             <h2 className=\"text-3xl font-bold text-gray-800 mb-6 text-center\">Your Tax History</h2>\n\n//             {message && (\n//                 <div className={`message ${messageType}`}>\n//                     {messageType === 'info' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n//                     {messageType === 'success' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n//                     {messageType === 'error' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n//                     {message}\n//                 </div>\n//             )}\n\n//             {selectedRecord ? (\n//                 // Detailed View of a Single Record\n//                 <div className=\"container-card\">\n//                     <button onClick={handleBackToList} className=\"btn-secondary mb-4 flex items-center\">\n//                         <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path></svg>\n//                         Back to History List\n//                     </button>\n//                     <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Details for Record: {selectedRecord._id}</h3>\n\n//                     {selectedRecord.document_processing_summary && selectedRecord.document_processing_summary.length > 0 && (\n//                         <div className=\"section-box\">\n//                             <h4 className=\"text-lg font-medium text-gray-700 mb-2\">Processed Documents Summary:</h4>\n//                             {selectedRecord.document_processing_summary.map((doc, index) => (\n//                                 <div key={index} className={`mb-4 p-3 rounded-md ${doc.status === 'success' ? 'bg-green-50 text-green-800' : doc.status === 'warning' ? 'bg-yellow-50 text-yellow-800' : 'bg-red-50 text-red-800'}`}>\n//                                     <p><strong>File:</strong> {doc.filename} {doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">(View Stored Document)</a>}</p>\n//                                     <p><strong>Status:</strong> <span className=\"uppercase\">{doc.status}</span></p>\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type}</p>\n//                                     <p><strong>Message:</strong> {doc.message}</p>\n//                                     {/* Extracted fields for each document, using the improved renderExtractedFields */}\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\n//                                         <p><strong>Extracted Fields:</strong>\n//                                             <pre className=\"extracted-fields-preview\">\n//                                             {renderExtractedFields(doc.extracted_fields, doc.identified_type)}\n//                                             </pre>\n//                                         </p>\n//                                     )}\n//                                 </div>\n//                             ))}\n//                         </div>\n//                     )}\n\n//                     {selectedRecord.aggregated_financial_data && (\n//                         <div className=\"section-box\">\n//                             <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Aggregated Financial Data Summary</h3>\n\n//                             {/* Conditional rendering for Bank Statement vs. Tax Data in aggregated summary */}\n//                             {selectedRecord.aggregated_financial_data.identified_type === 'Bank Statement' || \n//                              (selectedRecord.aggregated_financial_data.account_number && selectedRecord.aggregated_financial_data.account_number !== 'null') ? (\n//                                 <div className=\"income-details-section\"> {/* Re-using for consistent styling */}\n//                                     <h5>Bank Account Details</h5>\n//                                     <p><strong>Account Holder Name:</strong> {selectedRecord.aggregated_financial_data.account_holder_name || 'N/A'}</p>\n//                                     <p><strong>Account Number:</strong> {selectedRecord.aggregated_financial_data.account_number || 'N/A'}</p>\n//                                     <p><strong>Bank Name:</strong> {selectedRecord.aggregated_financial_data.bank_name || 'N/A'}</p>\n//                                     <p><strong>Branch Address:</strong> {selectedRecord.aggregated_financial_data.branch_address || 'N/A'}</p>\n//                                     <p><strong>Statement Period:</strong> {selectedRecord.aggregated_financial_data.statement_start_date || 'N/A'} to {selectedRecord.aggregated_financial_data.statement_end_date || 'N/A'}</p>\n//                                     <p><strong>Opening Balance:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.opening_balance)}</p>\n//                                     <p><strong>Closing Balance:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.closing_balance)}</p>\n//                                     <p><strong>Total Deposits:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deposits)}</p>\n//                                     <p><strong>Total Withdrawals:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_withdrawals)}</p>\n//                                     {selectedRecord.aggregated_financial_data.transaction_summary && selectedRecord.aggregated_financial_data.transaction_summary.length > 0 && (\n//                                         <p>\n//                                             <strong>Key Transactions:</strong> \n//                                             <pre className=\"extracted-fields-preview mt-2\">\n//                                                 {JSON.stringify(selectedRecord.aggregated_financial_data.transaction_summary.slice(0, 5).map(tx => ({ // Show first 5 transactions\n//                                                     date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\",\n//                                                     description: tx.description,\n//                                                     amount: formatCurrency(tx.amount)\n//                                                 })), null, 2)}\n//                                                 {selectedRecord.aggregated_financial_data.transaction_summary.length > 5 ? '\\n...' : ''}\n//                                             </pre>\n//                                         </p>\n//                                     )}\n//                                 </div>\n//                             ) : (\n//                                 <>\n//                                     <div className=\"income-details-section\">\n//                                         <h5>Income Details</h5>\n//                                         <p><strong>Financial Year:</strong> {selectedRecord.aggregated_financial_data.financial_year || 'N/A'}</p>\n//                                         <p><strong>Assessment Year:</strong> {selectedRecord.aggregated_financial_data.assessment_year || 'N/A'}</p>\n//                                         <p><strong>Name:</strong> {selectedRecord.aggregated_financial_data.name_of_employee || 'N/A'}</p>\n//                                         <p><strong>PAN:</strong> {selectedRecord.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\n//                                         <p><strong>Date of Birth:</strong> {selectedRecord.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? selectedRecord.aggregated_financial_data.date_of_birth : 'N/A'}</p>\n//                                         <p><strong>Age:</strong> {selectedRecord.aggregated_financial_data.Age || 'N/A'}</p>\n//                                         <p><strong>Gross Annual Salary:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.gross_salary_total)}</p>\n//                                         <p><strong>Exempt Allowances:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_exempt_allowances)}</p>\n//                                         <p><strong>Income from House Property:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_house_property)}</p>\n//                                         <p><strong>Income from Other Sources:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_other_sources)}</p>\n//                                         <p><strong>Long Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_long_term)}</p>\n//                                         <p><strong>Short Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_short_term)}</p>\n//                                         <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.calculated_gross_income)}</p>\n//                                     </div>\n//                                     <div className=\"deductions-section\">\n//                                         <h5>Deductions Claimed</h5>\n//                                         {selectedRecord.aggregated_financial_data.standard_deduction > 0 && \n//                                             <p><strong>Standard Deduction:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.standard_deduction)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.professional_tax > 0 &&\n//                                             <p><strong>Professional Tax:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.professional_tax)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\n//                                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80C > 0 &&\n//                                             <p><strong>Section 80C Investments:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80C)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80CCD1B > 0 &&\n//                                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80CCD1B)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80D > 0 &&\n//                                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80D)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80G > 0 &&\n//                                             <p><strong>Section 80G:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80G)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80TTA > 0 &&\n//                                             <p><strong>Section 80TTA:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTA)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80TTB > 0 &&\n//                                             <p><strong>Section 80TTB:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTB)}</p>\n//                                         }\n//                                         {selectedRecord.aggregated_financial_data.deduction_80E > 0 &&\n//                                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80E)}</p>\n//                                         }\n//                                         <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deductions)}</p>\n//                                     </div>\n//                                     <div className=\"taxation-summary-section\">\n//                                         <h5>Tax Payments & Regime</h5>\n//                                         <p><strong>Total TDS Credit:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.total_tds_credit)}</p>\n//                                         <p><strong>Advance Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.advance_tax)}</p>\n//                                         <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.self_assessment_tax)}</p>\n//                                         <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{selectedRecord.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\n//                                     </div>\n//                                 </>\n//                             )}\n//                         </div>\n//                         <div className=\"final-tax-computation-section section-box\">\n//                             <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\n//                             {selectedRecord.final_tax_computation_summary.calculation_details && selectedRecord.final_tax_computation_summary.calculation_details.length > 0 && (\n//                                 <div className=\"computation-details-list\">\n//                                     <h5>Calculation Steps:</h5>\n//                                     <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\n//                                         {selectedRecord.final_tax_computation_summary.calculation_details.map((detail, idx) => (\n//                                             <li key={idx} className=\"computation-detail-item\">{detail}</li>\n//                                         ))}\n//                                     </ul>\n//                                 </div>\n//                             )}\n//                             <div className=\"final-amount-box\">\n//                                 <p><strong>Computed Taxable Income:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.computed_taxable_income)}</p>\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.estimated_tax_payable)}</p>\n//                                 <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{selectedRecord.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\n//                                 {selectedRecord.final_tax_computation_summary.predicted_refund_due > 0 && (\n//                                     <p className=\"refund-amount\">\n//                                         <strong>Refund Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_refund_due)}\n//                                     </p>\n//                                 )}\n//                                 {selectedRecord.final_tax_computation_summary.predicted_additional_due > 0 && (\n//                                     <p className=\"tax-due-amount\">\n//                                         <strong>Additional Tax Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_additional_due)}\n//                                     </p>\n//                                 )}\n//                             </div>\n//                             {selectedRecord.final_tax_computation_summary.notes && selectedRecord.final_tax_computation_summary.notes.length > 0 && (\n//                                 <p className=\"computation-notes\">\n//                                     <strong>Note:</strong> {Array.isArray(selectedRecord.final_tax_computation_summary.notes) ? selectedRecord.final_tax_computation_summary.notes.join(', ') : selectedRecord.final_tax_computation_summary.notes}\n//                                 </p>\n//                             )}\n//                         </div>\n//                     )}\n\n//                     <div className=\"action-buttons-container\" style={{ justifyContent: 'center' }}>\n//                         <button\n//                             onClick={() => handleGetSuggestionsFromHistory(selectedRecord)}\n//                             disabled={isGeneratingSuggestions}\n//                             className={`tax-uploader-button get-suggestions-button ${isGeneratingSuggestions ? 'opacity-75 cursor-not-allowed' : ''}`}\n//                         >\n//                             {isGeneratingSuggestions ? (\n//                                 <>\n//                                     <div className=\"tax-uploader-spinner\"></div>\n//                                     Generating AI Suggestions...\n//                                 </>\n//                             ) : (\n//                                 'Re-Generate AI Suggestions & ML Predictions'\n//                             )}\n//                         </button>\n//                         <button\n//                             onClick={() => handleGenerateITRFromHistory(selectedRecord)}\n//                             disabled={isGeneratingITR}\n//                             className={`tax-uploader-button generate-itr-button ${isGeneratingITR ? 'opacity-75 cursor-not-allowed' : ''}`}\n//                         >\n//                             {isGeneratingITR ? (\n//                                 <>\n//                                     <div className=\"tax-uploader-spinner\"></div>\n//                                     Generating ITR Form...\n//                                 </>\n//                             ) : (\n//                                 'Generate Dummy ITR Form (PDF)'\n//                             )}\n//                         </button>\n//                     </div>\n\n//                     {/* Display Suggestions from Gemini and ML Predictions */}\n//                     {(selectedRecord.suggestions_from_gemini || selectedRecord.gemini_regime_analysis || selectedRecord.ml_prediction_summary) && (\n//                         <div className=\"suggestions-output tax-summary-output\">\n//                             <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\n//                             <div className=\"section-box\">\n//                                 {selectedRecord.suggestions_from_gemini && selectedRecord.suggestions_from_gemini.length > 0 ? (\n//                                     <>\n//                                         <h4>Based on Gemini AI:</h4>\n//                                         <ul className=\"suggestions-list\">\n//                                             {selectedRecord.suggestions_from_gemini.map((suggestion, index) => (\n//                                                 <li key={index}>{suggestion}</li>\n//                                             ))}\n//                                         </ul>\n//                                     </>\n//                                 ) : (\n//                                     <p>Gemini did not provide specific tax-saving suggestions for this record, but your tax situation seems optimized.</p>\n//                                 )}\n//                                 {selectedRecord.gemini_regime_analysis && (\n//                                     <div className=\"gemini-regime-analysis\">\n//                                         <h4>Gemini's Regime Analysis:</h4>\n//                                         <p>{selectedRecord.gemini_regime_analysis}</p>\n//                                     </div>\n//                                 )}\n//                                 {selectedRecord.ml_prediction_summary && (\n//                                     <>\n//                                         <h4>ML Model Prediction:</h4>\n//                                         {selectedRecord.ml_prediction_summary.predicted_tax_regime && (\n//                                             <p><strong>Predicted Tax Regime:</strong> {selectedRecord.ml_prediction_summary.predicted_tax_regime}</p>\n//                                         )}\n//                                         <p><strong>Predicted Tax Liability:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)}</p>\n//                                         <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)}</p>\n//                                         <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)}</p>\n//                                         {selectedRecord.ml_prediction_summary.notes && (\n//                                             <p><strong>Notes:</strong> {selectedRecord.ml_prediction_summary.notes}</p>\n//                                         )}\n//                                     </>\n//                                 )}\n//                             </div>\n//                         </div>\n//                     )}\n\n//                 </div>\n//             ) : (\n//                 // List View of Records\n//                 <div className=\"container-card\">\n//                     <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Your Processed Tax Records</h3>\n//                     {loading ? (\n//                         <p className=\"text-center text-gray-600 flex items-center justify-center\">\n//                             <span className=\"loading-spinner mr-2 border-indigo-500 border-t-indigo-500\"></span>\n//                             Loading tax records...\n//                         </p>\n//                     ) : history.length === 0 ? (\n//                         <p className=\"text-center text-gray-600\">No tax records found. Upload documents to get started!</p>\n//                     ) : (\n//                         <div className=\"overflow-x-auto\">\n//                             <table className=\"min-w-full bg-white rounded-lg shadow overflow-hidden history-table\">\n//                                 <thead className=\"bg-gray-200\">\n//                                     <tr>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Record ID</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Document Type</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Financial Year</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Last Processed</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Aggregated Gross Income</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Estimated Tax Payable</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Refund / Due</th>\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Actions</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody className=\"divide-y divide-gray-200\">\n//                                     {history.map((record) => (\n//                                         <tr key={record._id} className=\"hover:bg-gray-50\">\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record._id.substring(0, 8)}...</td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record.document_processing_summary?.[0]?.identified_type || 'N/A'}</td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record.aggregated_financial_data.financial_year || 'N/A'}</td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{new Date(record.timestamp).toLocaleString()}</td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : formatCurrency(record.aggregated_financial_data.total_gross_income)}\n//                                             </td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : formatCurrency(record.final_tax_computation_summary.estimated_tax_payable)}\n//                                             </td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm\">\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : (\n//                                                     record.final_tax_computation_summary.predicted_refund_due > 0 ? (\n//                                                         <span className=\"refund-amount\">{formatCurrency(record.final_tax_computation_summary.predicted_refund_due)} Refund</span>\n//                                                     ) : record.final_tax_computation_summary.predicted_additional_due > 0 ? (\n//                                                         <span className=\"tax-due-amount\">{formatCurrency(record.final_tax_computation_summary.predicted_additional_due)} Due</span>\n//                                                     ) : (\n//                                                         'N/A'\n//                                                     )\n//                                                 )}\n//                                             </td>\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm\">\n//                                                 <button\n//                                                     onClick={() => handleViewDetails(record)}\n//                                                     className=\"view-details-btn\"\n//                                                 >\n//                                                     View Details\n//                                                 </button>\n//                                             </td>\n//                                         </tr>\n//                                     ))}\n//                                 </tbody>\n//                             </table>\n//                         </div>\n//                     )}\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default TaxHistory;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport './index.css'; // Import TaxHistory specific CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaxHistory = () => {\n  _s();\n  const [history, setHistory] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n  const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\n  const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n\n  // Helper function to safely format currency values\n  const formatCurrency = value => {\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\n      return 'N/A';\n    }\n    return parseFloat(value).toLocaleString('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  useEffect(() => {\n    const fetchHistory = async () => {\n      setLoading(true);\n      setMessage('Fetching your tax history...');\n      setMessageType('info');\n      const jwt_token = Cookies.get('jwt_token');\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/tax-records', config);\n        if (response.data && Array.isArray(response.data.history)) {\n          setTaxHistory(response.data.history);\n          setMessage('Tax history fetched successfully.');\n          setMessageType('success');\n        } else {\n          setMessage('Failed to fetch tax history.');\n          setMessageType('error');\n        }\n      } catch (error) {\n        console.error('Error fetching tax history:', error);\n        setMessage('Error fetching tax history. Please try again later.');\n        setMessageType('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHistory();\n  }, []);\n  const handleViewDetails = record => {\n    setSelectedRecord(record);\n  };\n  const handleBackToList = () => {\n    setSelectedRecord(null);\n  };\n  const handleGenerateITR = async recordId => {\n    setIsGeneratingITR(true);\n    setMessage('Generating ITR for the selected record...');\n    setMessageType('info');\n    const jwt_token = Cookies.get('jwt_token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/generate_itr', {\n        record_id: recordId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${jwt_token}`\n        },\n        responseType: 'blob' // Important for handling file downloads\n      });\n\n      // Create a blob from the response data\n      const file = new Blob([response.data], {\n        type: 'application/pdf'\n      });\n      // Create a link element\n      const fileURL = URL.createObjectURL(file);\n      const link = document.createElement('a');\n      link.href = fileURL;\n      link.setAttribute('download', `ITR_Report_${recordId}.pdf`); // Set the download file name\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      URL.revokeObjectURL(fileURL); // Clean up the URL object\n\n      setMessage('ITR generated and downloaded successfully!');\n      setMessageType('success');\n    } catch (error) {\n      console.error('Error generating ITR:', error);\n      setMessage('Error generating ITR. Please try again later.');\n      setMessageType('error');\n    } finally {\n      setIsGeneratingITR(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tax-history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Tax History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1804,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1805,\n      columnNumber: 25\n    }, this), !loading && message && messageType && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: `message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1807,\n      columnNumber: 17\n    }, this), selectedRecord === null ?\n    /*#__PURE__*/\n    // Display list of history records\n    _jsxDEV(\"div\", {\n      className: \"history-list-section\",\n      children: history.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"history-list\",\n        children: history.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"history-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Upload Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1818,\n                columnNumber: 44\n              }, this), \" \", new Date(record.upload_date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1818,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Document Summary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1819,\n                columnNumber: 44\n              }, this), \" \", record.document_summary || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1819,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1820,\n                columnNumber: 44\n              }, this), \" \", record.status || 'Processed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1820,\n              columnNumber: 41\n            }, this), record.ml_prediction_summary && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Predicted Tax Liability:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1822,\n                columnNumber: 48\n              }, this), \" \", formatCurrency(record.ml_prediction_summary.predicted_tax_liability)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1822,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1817,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"record-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewDetails(record),\n              className: \"view-details-button\",\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1826,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleGenerateITR(record._id),\n              className: \"generate-itr-button\",\n              disabled: isGeneratingITR,\n              children: isGeneratingITR ? 'Generating...' : 'Generate ITR'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1827,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1825,\n            columnNumber: 37\n          }, this)]\n        }, record._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1816,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1814,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tax history records found. Upload documents to get started!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1839,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1812,\n      columnNumber: 17\n    }, this) :\n    /*#__PURE__*/\n    // Display details of selected record\n    _jsxDEV(\"div\", {\n      className: \"record-details-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBackToList,\n        className: \"back-button\",\n        children: \"\\u2190 Back to History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1845,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Details for Record: \", new Date(selectedRecord.upload_date).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Document Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1849,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedRecord.document_summary || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1850,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1848,\n        columnNumber: 21\n      }, this), selectedRecord.aggregated_data && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Aggregated Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1855,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(selectedRecord.aggregated_data, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1856,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1854,\n        columnNumber: 25\n      }, this), selectedRecord.computation_summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Tax Computation Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1862,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Gross Total Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1863,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.gross_total_income)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Deductions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1864,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.total_deductions)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1864,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Taxable Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1865,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.taxable_income)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1865,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tax Payable:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1866,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.tax_payable)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1866,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"TDS:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1867,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.total_tds)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1867,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Advance Tax:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1868,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.total_advance_tax)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1868,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Self-Assessment Tax:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1869,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.total_self_assessment_tax)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1869,\n          columnNumber: 29\n        }, this), selectedRecord.computation_summary.final_tax_liability && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Final Tax Liability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 36\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.final_tax_liability)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1871,\n          columnNumber: 33\n        }, this), selectedRecord.computation_summary.refund_due && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"refund-amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Refund Due:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1874,\n            columnNumber: 62\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.refund_due)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1874,\n          columnNumber: 33\n        }, this), selectedRecord.computation_summary.additional_tax_due && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tax-due-amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Additional Tax Due:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1877,\n            columnNumber: 63\n          }, this), \" \", formatCurrency(selectedRecord.computation_summary.additional_tax_due)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1877,\n          columnNumber: 33\n        }, this), selectedRecord.computation_summary.tax_regime_analysis && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tax Regime Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1880,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.computation_summary.tax_regime_analysis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1880,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1861,\n        columnNumber: 25\n      }, this), selectedRecord.suggestions_summary && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"AI Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1887,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedRecord.suggestions_summary.recommendations || 'N/A'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1888,\n          columnNumber: 29\n        }, this), selectedRecord.suggestions_summary.missing_documents_info && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Missing Documents:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1890,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.suggestions_summary.missing_documents_info]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1890,\n          columnNumber: 33\n        }, this), selectedRecord.suggestions_summary.compliance_alerts && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Compliance Alerts:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1893,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.suggestions_summary.compliance_alerts]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 33\n        }, this), selectedRecord.suggestions_summary.tax_saving_opportunities && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tax Saving Opportunities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1896,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.suggestions_summary.tax_saving_opportunities]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 33\n        }, this), selectedRecord.suggestions_summary.tax_regime_analysis && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Tax Regime Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1899,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.suggestions_summary.tax_regime_analysis]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1899,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1886,\n        columnNumber: 25\n      }, this), selectedRecord.ml_prediction_summary ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"ML Model Prediction:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1906,\n          columnNumber: 29\n        }, this), selectedRecord.ml_prediction_summary.predicted_tax_regime && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Tax Regime:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1908,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.ml_prediction_summary.predicted_tax_regime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1908,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Tax Liability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1910,\n            columnNumber: 32\n          }, this), \" \", formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1910,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"refund-amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Refund Due:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1911,\n            columnNumber: 58\n          }, this), \" \", formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1911,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"tax-due-amount\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Additional Tax Due:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1912,\n            columnNumber: 59\n          }, this), \" \", formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1912,\n          columnNumber: 29\n        }, this), selectedRecord.ml_prediction_summary.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Notes:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1914,\n            columnNumber: 36\n          }, this), \" \", selectedRecord.ml_prediction_summary.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1905,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No AI recommendations or ML predictions available for this record yet. These are generated when you click \\\"Get AI Suggestions & ML Predictions\\\" after uploading documents.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1919,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1918,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1844,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1803,\n    columnNumber: 9\n  }, this);\n};\n_s(TaxHistory, \"INSV3Qt1TL3OTAKOJg5gxBMuTVw=\");\n_c = TaxHistory;\nexport default TaxHistory;\nvar _c;\n$RefreshReg$(_c, \"TaxHistory\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","jsxDEV","_jsxDEV","TaxHistory","_s","history","setHistory","loading","setLoading","message","setMessage","messageType","setMessageType","selectedRecord","setSelectedRecord","isGeneratingITR","setIsGeneratingITR","formatCurrency","value","undefined","isNaN","parseFloat","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","fetchHistory","jwt_token","get","response","config","data","Array","isArray","setTaxHistory","error","console","handleViewDetails","record","handleBackToList","handleGenerateITR","recordId","post","record_id","headers","responseType","file","Blob","type","fileURL","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","remove","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","Date","upload_date","toLocaleDateString","document_summary","status","ml_prediction_summary","predicted_tax_liability","onClick","_id","disabled","aggregated_data","JSON","stringify","computation_summary","gross_total_income","total_deductions","taxable_income","tax_payable","total_tds","total_advance_tax","total_self_assessment_tax","final_tax_liability","refund_due","additional_tax_due","tax_regime_analysis","suggestions_summary","recommendations","missing_documents_info","compliance_alerts","tax_saving_opportunities","predicted_tax_regime","predicted_refund_due","predicted_additional_due","notes","_c","$RefreshReg$"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/TaxHistory/index.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n// import './index.css'; // Import TaxHistory specific CSS\r\n\r\n// const TaxHistory = () => {\r\n//     const [history, setHistory] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [message, setMessage] = useState('');\r\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n//     const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\r\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n\r\n//     // Helper function to safely format currency values\r\n//     const formatCurrency = (value) => {\r\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n//             return 'N/A';\r\n//         }\r\n//         return parseFloat(value).toLocaleString('en-IN', {\r\n//             style: 'currency',\r\n//             currency: 'INR',\r\n//             minimumFractionDigits: 2,\r\n//             maximumFractionDigits: 2,\r\n//         });\r\n//     };\r\n\r\n//     // Helper function to render extracted fields dynamically (duplicated from TaxUploader for self-containment)\r\n//     const renderExtractedFields = (fields) => {\r\n//         if (!fields) return null;\r\n\r\n//         const fieldOrder = [\r\n//             // Personal & Employer Info\r\n//             \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\",\r\n//             \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\r\n//             // Financial Years & Period\r\n//             \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\r\n//             // Income\r\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\r\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\r\n//             \"total_exempt_allowances\",\r\n//             \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\",\r\n//             \"gross_total_income_as_per_document\",\r\n//             // Deductions\r\n//             \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\r\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\r\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\r\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\r\n//             \"epf_contribution\", \"esi_contribution\",\r\n//             // Tax Paid\r\n//             \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\r\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\",\r\n//             \"advance_tax\", \"self_assessment_tax\",\r\n//             // Other Tax Info\r\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\r\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\",\r\n//             // Bank Statement Details\r\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\r\n//             \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"\r\n//         ];\r\n        \r\n//         // Define display names for better readability\r\n//         const displayNames = {\r\n//             \"name_of_employee\": \"Name of Employee\",\r\n//             \"pan_of_employee\": \"PAN of Employee\",\r\n//             \"date_of_birth\": \"Date of Birth\",\r\n//             \"gender\": \"Gender\",\r\n//             \"residential_status\": \"Residential Status\",\r\n//             \"employer_name\": \"Employer Name\",\r\n//             \"employer_address\": \"Employer Address\",\r\n//             \"pan_of_deductor\": \"PAN of Deductor\",\r\n//             \"tan_of_deductor\": \"TAN of Deductor\",\r\n//             \"designation_of_employee\": \"Designation\",\r\n//             \"financial_year\": \"Financial Year\",\r\n//             \"assessment_year\": \"Assessment Year\",\r\n//             \"period_from\": \"Period From\",\r\n//             \"period_to\": \"Period To\",\r\n//             \"statement_start_date\": \"Statement Start Date\",\r\n//             \"statement_end_date\": \"Statement End Date\",\r\n//             \"gross_salary_total\": \"Gross Salary Total\",\r\n//             \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\r\n//             \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\r\n//             \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\r\n//             \"basic_salary\": \"Basic Salary\",\r\n//             \"hra_received\": \"HRA Received\",\r\n//             \"conveyance_allowance\": \"Conveyance Allowance\",\r\n//             \"transport_allowance\": \"Transport Allowance\",\r\n//             \"overtime_pay\": \"Overtime Pay\",\r\n//             \"total_exempt_allowances\": \"Total Exempt Allowances\",\r\n//             \"income_from_house_property\": \"Income from House Property\",\r\n//             \"income_from_other_sources\": \"Income from Other Sources\",\r\n//             \"capital_gains_long_term\": \"Long Term Capital Gains\",\r\n//             \"capital_gains_short_term\": \"Short Term Capital Gains\",\r\n//             \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\r\n//             \"professional_tax\": \"Professional Tax\",\r\n//             \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\r\n//             \"deduction_80c\": \"Deduction 80C\",\r\n//             \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\r\n//             \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\r\n//             \"deduction_80ccc\": \"Deduction 80CCC\",\r\n//             \"deduction_80ccd\": \"Deduction 80CCD\",\r\n//             \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\r\n//             \"deduction_80d\": \"Deduction 80D\",\r\n//             \"deduction_80g\": \"Deduction 80G\",\r\n//             \"deduction_80tta\": \"Deduction 80TTA\",\r\n//             \"deduction_80ttb\": \"Deduction 80TTB\",\r\n//             \"deduction_80e\": \"Deduction 80E\",\r\n//             \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\r\n//             \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\r\n//             \"epf_contribution\": \"EPF Contribution\",\r\n//             \"esi_contribution\": \"ESI Contribution\",\r\n//             \"total_tds\": \"Total TDS\",\r\n//             \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\r\n//             \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\r\n//             \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\r\n//             \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\r\n//             \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\r\n//             \"advance_tax\": \"Advance Tax\",\r\n//             \"self_assessment_tax\": \"Self-Assessment Tax\",\r\n//             \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\r\n//             \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\r\n//             \"refund_status_as_per_document\": \"Refund Status (Doc)\",\r\n//             \"tax_regime_chosen\": \"Tax Regime Chosen\",\r\n//             \"net_amount_payable\": \"Net Amount Payable\",\r\n//             \"days_present\": \"Days Present\",\r\n//             \"overtime_hours\": \"Overtime Hours\",\r\n//             \"account_holder_name\": \"Account Holder Name\",\r\n//             \"account_number\": \"Account Number\",\r\n//             \"ifsc_code\": \"IFSC Code\",\r\n//             \"bank_name\": \"Bank Name\",\r\n//             \"branch_address\": \"Branch Address\",\r\n//             \"opening_balance\": \"Opening Balance\",\r\n//             \"closing_balance\": \"Closing Balance\",\r\n//             \"total_deposits\": \"Total Deposits\",\r\n//             \"total_withdrawals\": \"Total Withdrawals\"\r\n//         };\r\n        \r\n//         return (\r\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//                 {fieldOrder.map(key => {\r\n//                     let value = fields[key];\r\n//                     // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\r\n//                     // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\r\n//                     if (value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null')) {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\r\n//                     if (typeof value === 'number') {\r\n//                         if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || \r\n//                             key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') ||\r\n//                             key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') ||\r\n//                             key.includes('overtime_pay') || key.includes('net_amount_payable')) {\r\n//                             // Display 0.0 for actual zero financial values, otherwise format currency\r\n//                             value = formatCurrency(value);\r\n//                         } else {\r\n//                             // For other numeric fields, just display the number directly\r\n//                             value = value.toString();\r\n//                         }\r\n//                     }\r\n\r\n//                     // Special handling for transaction_summary if it's an array and not empty\r\n//                     if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\r\n//                         return (\r\n//                             <li key={key}>\r\n//                                 <strong>{displayNames[key] || key}:</strong>\r\n//                                 <pre className=\"extracted-fields-preview mt-2\">\r\n//                                     {JSON.stringify(value.map(tx => ({\r\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\", // Format date\r\n//                                         description: tx.description,\r\n//                                         amount: formatCurrency(tx.amount)\r\n//                                     })), null, 2)}\r\n//                                 </pre>\r\n//                             </li>\r\n//                         );\r\n//                     }\r\n                    \r\n//                     // Filter out empty arrays as well\r\n//                     if (Array.isArray(value) && value.length === 0) {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     // Render other fields if their value is not \"null\" (string) or empty string\r\n//                     if (typeof value === 'string' && value.trim() === '') {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     return (\r\n//                         <li key={key}>\r\n//                             <strong>{displayNames[key] || key}:</strong> {value}\r\n//                         </li>\r\n//                     );\r\n//                 })}\r\n//             </ul>\r\n//         );\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const fetchHistory = async () => {\r\n//             setLoading(true);\r\n//             setMessage('Fetching your tax history...');\r\n//             setMessageType('info');\r\n//             const jwt_token = Cookies.get('jwt_token');\r\n\r\n//             try {\r\n//                 const config = {\r\n//                     headers: {\r\n//                         'Authorization': `Bearer ${jwt_token}`,\r\n//                     }\r\n//                 };\r\n//                 // Fetch aggregated tax records for the user, organized by financial year\r\n//                 const response = await axios.get('http://127.0.0.1:5000/api/tax-records', config);\r\n\r\n//                 if (response.data.status === 'success') {\r\n//                     if (Array.isArray(response.data.history)) {\r\n//                         setHistory(response.data.history);\r\n//                         setMessage('Tax history loaded successfully.');\r\n//                         setMessageType('success');\r\n//                     } else {\r\n//                         console.error('API returned non-array data for history property:', response.data.history);\r\n//                         setHistory([]);\r\n//                         setMessage('Failed to load tax history: Unexpected data format.');\r\n//                         setMessageType('error');\r\n//                     }\r\n//                 } else {\r\n//                     setMessage(response.data.message || 'Failed to fetch tax history.');\r\n//                     setMessageType('error');\r\n//                     setHistory([]);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Fetch history error:', error);\r\n//                 if (error.response) {\r\n//                     if (error.response.status === 401) {\r\n//                         setMessage('Authentication required. Please log in.');\r\n//                         Cookies.remove('jwt_token');\r\n//                         window.location.href = '/login';\r\n//                     } else if (error.response.data && error.response.data.message) {\r\n//                         setMessage(`Error: ${error.response.data.message}`);\r\n//                     } else {\r\n//                         setMessage(`Server responded with status ${error.response.status}`);\r\n//                     }\r\n//                 } else {\r\n//                     setMessage('An error occurred while fetching tax history. Check network connection and backend server.');\r\n//                 }\r\n//                 setMessageType('error');\r\n//                 setHistory([]);\r\n//             } finally {\r\n//                 setLoading(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchHistory();\r\n//     }, []); // Empty dependency array means this runs once on mount\r\n\r\n//     const handleViewDetails = (record) => {\r\n//         setSelectedRecord(record);\r\n//     };\r\n\r\n//     const handleCloseDetails = () => {\r\n//         setSelectedRecord(null);\r\n//     };\r\n\r\n//     const handleGenerateITRForm = async (recordId) => {\r\n//         setIsGeneratingITR(true);\r\n//         setMessage('Generating ITR form...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 },\r\n//                 responseType: 'blob', // Important for receiving a file\r\n//             };\r\n            \r\n//             // The backend route for generating ITR should use the record ID to fetch the aggregated data\r\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${recordId}`, config);\r\n\r\n//             if (response.status === 200) {\r\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\r\n//                 const downloadUrl = window.URL.createObjectURL(blob);\r\n//                 const contentDisposition = response.headers['content-disposition'];\r\n//                 let filename = `ITR_Form_${recordId}.pdf`; // Default filename\r\n\r\n//                 if (contentDisposition) {\r\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\r\n//                     if (filenameMatch && filenameMatch[1]) {\r\n//                         filename = filenameMatch[1];\r\n//                     }\r\n//                 }\r\n                \r\n//                 const link = document.createElement('a');\r\n//                 link.href = downloadUrl;\r\n//                 link.setAttribute('download', filename);\r\n//                 document.body.appendChild(link);\r\n//                 link.click();\r\n//                 link.remove();\r\n//                 window.URL.revokeObjectURL(downloadUrl);\r\n\r\n//                 setMessage('ITR form generated and downloaded successfully!');\r\n//                 setMessageType('success');\r\n//             } else {\r\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\r\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('ITR generation error:', error);\r\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n//                 const reader = new FileReader();\r\n//                 reader.onload = () => {\r\n//                     try {\r\n//                         const errorJson = JSON.parse(reader.result);\r\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\r\n//                     } catch (e) {\r\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\r\n//                     }\r\n//                 };\r\n//                 reader.readAsText(error.response.data);\r\n//             } else {\r\n//                 setMessage('Network error or server unavailable during ITR form generation.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingITR(false);\r\n//         }\r\n//     };\r\n\r\n\r\n//     return (\r\n//         <div className=\"tax-history-container section-box\">\r\n//             {/* Inlined CSS for styling the component */}\r\n//             <style>{`\r\n//                 /* General Body Styling */\r\n//                 body {\r\n//                     font-family: 'Inter', sans-serif;\r\n//                     background-color: #f0f2f5;\r\n//                     margin: 0;\r\n//                     padding: 20px;\r\n//                     color: #333;\r\n//                     line-height: 1.6;\r\n//                 }\r\n\r\n//                 /* Section Box Styling */\r\n//                 .section-box {\r\n//                     background-color: #ffffff;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n//                     margin-bottom: 25px;\r\n//                     border: 1px solid #e0e0e0;\r\n//                 }\r\n\r\n//                 /* Tax History Container */\r\n//                 .tax-history-container {\r\n//                     max-width: 900px;\r\n//                     margin: 30px auto;\r\n//                     padding: 30px;\r\n//                     background-color: #fff;\r\n//                     border-radius: 15px;\r\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n//                     border: 1px solid #d0d0d0;\r\n//                 }\r\n\r\n//                 .tax-history-title {\r\n//                     text-align: center;\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 30px;\r\n//                     font-size: 2.2em;\r\n//                     font-weight: 700;\r\n//                     letter-spacing: -0.5px;\r\n//                 }\r\n\r\n//                 /* Loading Spinner */\r\n//                 .tax-history-loading {\r\n//                     display: flex;\r\n//                     align-items: center;\r\n//                     justify-content: center;\r\n//                     margin-top: 25px;\r\n//                     font-size: 1.1em;\r\n//                     color: #007bff;\r\n//                     font-weight: 500;\r\n//                 }\r\n\r\n//                 .tax-history-spinner {\r\n//                     border: 4px solid #f3f3f3;\r\n//                     border-top: 4px solid #007bff;\r\n//                     border-radius: 50%;\r\n//                     width: 24px;\r\n//                     height: 24px;\r\n//                     animation: spin 1s linear infinite;\r\n//                     margin-right: 10px;\r\n//                 }\r\n\r\n//                 @keyframes spin {\r\n//                     0% { transform: rotate(0deg); }\r\n//                     100% { transform: rotate(360deg); }\r\n//                 }\r\n\r\n//                 /* Messages */\r\n//                 .tax-history-message {\r\n//                     padding: 15px;\r\n//                     margin-top: 25px;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     font-weight: 500;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .tax-history-message.info {\r\n//                     background-color: #e7f3ff;\r\n//                     color: #0056b3;\r\n//                     border: 1px solid #b3d7ff;\r\n//                 }\r\n\r\n//                 .tax-history-message.success {\r\n//                     background-color: #d4edda;\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                 }\r\n\r\n//                 .tax-history-message.error {\r\n//                     background-color: #f8d7da;\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                 }\r\n\r\n//                 /* No Records Message */\r\n//                 .no-records-message {\r\n//                     text-align: center;\r\n//                     font-size: 1.1em;\r\n//                     color: #6c757d;\r\n//                     margin-top: 30px;\r\n//                     padding: 20px;\r\n//                     border: 1px dashed #ced4da;\r\n//                     border-radius: 8px;\r\n//                     background-color: #f8f9fa;\r\n//                 }\r\n\r\n//                 /* History List and Item */\r\n//                 .history-list {\r\n//                     margin-top: 30px;\r\n//                 }\r\n\r\n//                 .history-item {\r\n//                     background-color: #ffffff;\r\n//                     padding: 20px;\r\n//                     margin-bottom: 20px;\r\n//                     border-radius: 10px;\r\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n//                     border: 1px solid #e9ecef;\r\n//                     transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n//                 }\r\n\r\n//                 .history-item:hover {\r\n//                     transform: translateY(-3px);\r\n//                     box-shadow: 0 6px 15px rgba(0, 0, 0, 0.12);\r\n//                 }\r\n\r\n//                 .history-item-header {\r\n//                     display: flex;\r\n//                     justify-content: space-between;\r\n//                     align-items: center;\r\n//                     margin-bottom: 15px;\r\n//                     padding-bottom: 10px;\r\n//                     border-bottom: 1px solid #f0f2f5;\r\n//                 }\r\n\r\n//                 .history-item-header h3 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.4em;\r\n//                     margin: 0;\r\n//                 }\r\n\r\n//                 .history-item-header .timestamp {\r\n//                     font-size: 0.9em;\r\n//                     color: #777;\r\n//                 }\r\n\r\n//                 .history-item-details p {\r\n//                     margin: 8px 0;\r\n//                     font-size: 0.95em;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .history-item-actions {\r\n//                     margin-top: 20px;\r\n//                     display: flex;\r\n//                     gap: 10px;\r\n//                     justify-content: flex-end;\r\n//                 }\r\n\r\n//                 .history-item-actions button {\r\n//                     padding: 10px 18px;\r\n//                     border: none;\r\n//                     border-radius: 8px;\r\n//                     font-size: 0.95em;\r\n//                     font-weight: 600;\r\n//                     cursor: pointer;\r\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\r\n//                 }\r\n\r\n//                 .view-details-button {\r\n//                     background-color: #007bff;\r\n//                     color: white;\r\n//                     box-shadow: 0 3px 8px rgba(0, 123, 255, 0.2);\r\n//                 }\r\n\r\n//                 .view-details-button:hover {\r\n//                     background-color: #0056b3;\r\n//                     transform: translateY(-1px);\r\n//                 }\r\n\r\n//                 .generate-itr-button {\r\n//                     background-color: #28a745;\r\n//                     color: white;\r\n//                     box-shadow: 0 3px 8px rgba(40, 167, 69, 0.2);\r\n//                 }\r\n\r\n//                 .generate-itr-button:hover {\r\n//                     background-color: #218838;\r\n//                     transform: translateY(-1px);\r\n//                 }\r\n\r\n//                 .generate-itr-button:disabled {\r\n//                     background-color: #a0c9f1;\r\n//                     cursor: not-allowed;\r\n//                     box-shadow: none;\r\n//                     transform: none;\r\n//                 }\r\n\r\n//                 /* Selected Record Details View */\r\n//                 .selected-record-details {\r\n//                     margin-top: 30px;\r\n//                     background-color: #f9f9f9;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\r\n//                     border: 1px solid #eee;\r\n//                 }\r\n\r\n//                 .selected-record-details .back-button {\r\n//                     background-color: #6c757d;\r\n//                     color: white;\r\n//                     padding: 10px 15px;\r\n//                     border-radius: 8px;\r\n//                     border: none;\r\n//                     cursor: pointer;\r\n//                     margin-bottom: 25px;\r\n//                     display: inline-flex;\r\n//                     align-items: center;\r\n//                     gap: 5px;\r\n//                     transition: background-color 0.3s ease;\r\n//                 }\r\n\r\n//                 .selected-record-details .back-button:hover {\r\n//                     background-color: #5a6268;\r\n//                 }\r\n\r\n//                 .selected-record-title {\r\n//                     text-align: center;\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 30px;\r\n//                     font-size: 2em;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .document-processing-summary-section,\r\n//                 .aggregated-financial-data-section,\r\n//                 .final-tax-computation-section,\r\n//                 .suggestions-output {\r\n//                     margin-top: 20px;\r\n//                     padding: 20px;\r\n//                     background-color: #ffffff;\r\n//                     border-radius: 10px;\r\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n//                     border: 1px solid #e9ecef;\r\n//                 }\r\n\r\n//                 .document-processing-summary-section h4,\r\n//                 .aggregated-financial-data-section h4,\r\n//                 .final-tax-computation-section h4,\r\n//                 .suggestions-output h4 {\r\n//                     color: #34495e;\r\n//                     font-size: 1.6em;\r\n//                     margin-bottom: 20px;\r\n//                     border-bottom: 2px solid #f0f2f5;\r\n//                     padding-bottom: 10px;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .income-details-section,\r\n//                 .deductions-section,\r\n//                 .taxation-summary-section {\r\n//                     margin-bottom: 25px;\r\n//                     padding: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     border-radius: 8px;\r\n//                     background-color: #fdfdfd;\r\n//                 }\r\n\r\n//                 .income-details-section h5,\r\n//                 .deductions-section h5,\r\n//                 .taxation-summary-section h5 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.3em;\r\n//                     margin-bottom: 15px;\r\n//                     border-bottom: 1px solid #e0e0e0;\r\n//                     padding-bottom: 8px;\r\n//                 }\r\n\r\n//                 .income-details-section p,\r\n//                 .deductions-section p,\r\n//                 .taxation-summary-section p {\r\n//                     margin: 8px 0;\r\n//                     font-size: 0.98em;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .computation-detail-item {\r\n//                     margin-bottom: 5px;\r\n//                     font-size: 0.95em;\r\n//                 }\r\n\r\n//                 .final-amount-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\r\n//                     border: 1px solid #c3e6cb;\r\n//                     text-align: center;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                 }\r\n\r\n//                 .final-amount-box .tax-due-amount {\r\n//                     background-color: #f8d7da; /* Light red for tax due */\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .final-amount-box .refund-amount {\r\n//                     background-color: #d4edda; /* Light green for refund */\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .computation-notes {\r\n//                     margin-top: 20px;\r\n//                     padding: 10px;\r\n//                     background-color: #f0f8ff;\r\n//                     border: 1px solid #d1e7fd;\r\n//                     border-radius: 8px;\r\n//                     font-size: 0.9em;\r\n//                     color: #444;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 .highlight-regime {\r\n//                     font-weight: bold;\r\n//                     color: #007bff;\r\n//                 }\r\n\r\n//                 .suggestions-list {\r\n//                     list-style-type: disc;\r\n//                     margin-left: 20px;\r\n//                     padding-left: 0;\r\n//                 }\r\n\r\n//                 .suggestions-list li {\r\n//                     margin-bottom: 8px;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     background-color: #e6f7ff;\r\n//                     border: 1px solid #91d5ff;\r\n//                     border-radius: 8px;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis h5 {\r\n//                     color: #0056b3;\r\n//                     margin-bottom: 10px;\r\n//                 }\r\n\r\n//                 /* Responsive Adjustments */\r\n//                 @media (max-width: 768px) {\r\n//                     .tax-history-container {\r\n//                         margin: 20px 10px;\r\n//                         padding: 20px;\r\n//                     }\r\n\r\n//                     .tax-history-title {\r\n//                         font-size: 1.8em;\r\n//                     }\r\n\r\n//                     .history-item-header h3 {\r\n//                         font-size: 1.2em;\r\n//                     }\r\n\r\n//                     .history-item-actions button {\r\n//                         padding: 8px 12px;\r\n//                         font-size: 0.85em;\r\n//                     }\r\n\r\n//                     .selected-record-title {\r\n//                         font-size: 1.8em;\r\n//                     }\r\n\r\n//                     .document-processing-summary-section h4,\r\n//                     .aggregated-financial-data-section h4,\r\n//                     .final-tax-computation-section h4,\r\n//                     .suggestions-output h4 {\r\n//                         font-size: 1.4em;\r\n//                     }\r\n\r\n//                     .income-details-section h5,\r\n//                     .deductions-section h5,\r\n//                     .taxation-summary-section h5,\r\n//                     .suggestions-output h5 {\r\n//                         font-size: 1.1em;\r\n//                     }\r\n//                 }\r\n\r\n//                 @media (max-width: 480px) {\r\n//                     body {\r\n//                         padding: 10px;\r\n//                     }\r\n\r\n//                     .tax-history-container {\r\n//                         margin: 10px;\r\n//                         padding: 15px;\r\n//                     }\r\n\r\n//                     .tax-history-title {\r\n//                         font-size: 1.5em;\r\n//                     }\r\n\r\n//                     .tax-history-message {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px;\r\n//                     }\r\n//                 }\r\n//             `}</style>\r\n//             <h2 className=\"tax-history-title\">Your Tax Filing History</h2>\r\n\r\n//             {loading && (\r\n//                 <div className=\"tax-history-loading\">\r\n//                     <div className=\"tax-history-spinner\"></div>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {message && !loading && (\r\n//                 <div className={`tax-history-message ${messageType}`}>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {history.length === 0 && !loading && messageType !== 'error' && (\r\n//                 <p className=\"no-records-message\">No tax records found. Upload documents to get started!</p>\r\n//             )}\r\n\r\n//             {/* Display history records (list view) */}\r\n//             {!selectedRecord && history.length > 0 && !loading && (\r\n//                 <div className=\"history-list\">\r\n//                     {history.map((record) => (\r\n//                         <div key={record._id} className=\"history-item section-box\">\r\n//                             <div className=\"history-item-header\">\r\n//                                 <h3>\r\n//                                     {record.aggregated_financial_data?.financial_year || 'N/A'} (PAN: {record.aggregated_financial_data?.pan_of_employee || 'N/A'})\r\n//                                 </h3>\r\n//                                 <span className=\"timestamp\">\r\n//                                     Last Updated: {new Date(record.timestamp).toLocaleString()}\r\n//                                 </span>\r\n//                             </div>\r\n//                             <div className=\"history-item-details\">\r\n//                                 <p><strong>Assessment Year:</strong> {record.aggregated_financial_data?.assessment_year || 'N/A'}</p>\r\n//                                 <p><strong>Name:</strong> {record.aggregated_financial_data?.name_of_employee || 'N/A'}</p>\r\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(record.final_tax_computation_summary?.estimated_tax_payable)}</p>\r\n//                                 {/* Display refund due or additional tax due from prediction summary */}\r\n//                                 {record.final_tax_computation_summary?.predicted_refund_due > 0 && (\r\n//                                     <p className=\"refund-amount\"><strong>Refund Due:</strong> {formatCurrency(record.final_tax_computation_summary?.predicted_refund_due)}</p>\r\n//                                 )}\r\n//                                 {record.final_tax_computation_summary?.predicted_additional_due > 0 && (\r\n//                                     <p className=\"tax-due-amount\"><strong>Additional Tax Due:</strong> {formatCurrency(record.final_tax_computation_summary?.predicted_additional_due)}</p>\r\n//                                 )}\r\n//                             </div>\r\n//                             <div className=\"history-item-actions\">\r\n//                                 <button onClick={() => handleViewDetails(record)} className=\"view-details-button\">\r\n//                                     View Details\r\n//                                 </button>\r\n//                                 <button\r\n//                                     onClick={() => handleGenerateITRForm(record._id)}\r\n//                                     className=\"generate-itr-button\"\r\n//                                     disabled={isGeneratingITR}\r\n//                                 >\r\n//                                     {isGeneratingITR ? 'Generating...' : 'Generate ITR Form'}\r\n//                                 </button>\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display selected record details */}\r\n//             {selectedRecord && (\r\n//                 <div className=\"selected-record-details\">\r\n//                     <button onClick={handleCloseDetails} className=\"back-button\">\r\n//                         &larr; Back to History\r\n//                     </button>\r\n//                     <h3 className=\"selected-record-title\">\r\n//                         Details for {selectedRecord.aggregated_financial_data?.financial_year || 'N/A'} (PAN: {selectedRecord.aggregated_financial_data?.pan_of_employee || 'N/A'})\r\n//                     </h3>\r\n\r\n//                     {/* Document Processing Summary */}\r\n//                     {selectedRecord.document_processing_summary && selectedRecord.document_processing_summary.length > 0 && (\r\n//                         <div className=\"document-processing-summary-section section-box\">\r\n//                             <h4>Documents Processed for this Year</h4>\r\n//                             {selectedRecord.document_processing_summary.map((doc, index) => {\r\n//                                 const statusClass = doc.status === 'success' ? 'status-success' :\r\n//                                                     doc.status === 'warning' ? 'status-warning' : 'status-error';\r\n//                                 return (\r\n//                                     <div key={index} className=\"document-status-item\">\r\n//                                         <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\r\n//                                         <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\r\n//                                         <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\r\n//                                         <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\r\n//                                         {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n//                                             <p><strong>Extracted Fields:</strong>\r\n//                                                 <pre className=\"extracted-fields-preview\">\r\n//                                                     {renderExtractedFields(doc.extracted_fields)}\r\n//                                                 </pre>\r\n//                                             </p>\r\n//                                         )}\r\n//                                         {doc.extracted_raw_text && (\r\n//                                             <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\r\n//                                         )}\r\n//                                     </div>\r\n//                                 );\r\n//                             })}\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     {/* Aggregated Financial Data */}\r\n//                     {selectedRecord.aggregated_financial_data && (\r\n//                         <div className=\"aggregated-financial-data-section section-box\">\r\n//                             <h4>Aggregated Financial Data Summary</h4>\r\n//                             <div className=\"income-details-section\">\r\n//                                 <h5>Income Details</h5>\r\n//                                 <p><strong>Financial Year:</strong> {selectedRecord.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n//                                 <p><strong>Assessment Year:</strong> {selectedRecord.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n//                                 <p><strong>Name:</strong> {selectedRecord.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n//                                 <p><strong>PAN:</strong> {selectedRecord.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n//                                 <p><strong>Date of Birth:</strong> {selectedRecord.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? selectedRecord.aggregated_financial_data.date_of_birth : 'N/A'}</p>\r\n//                                 <p><strong>Age:</strong> {selectedRecord.aggregated_financial_data.Age || 'N/A'}</p>\r\n//                                 <p><strong>Gross Annual Salary:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.gross_salary_total)}</p>\r\n//                                 <p><strong>Exempt Allowances:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_exempt_allowances)}</p>\r\n//                                 <p><strong>Income from House Property:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_house_property)}</p>\r\n//                                 <p><strong>Income from Other Sources:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_other_sources)}</p>\r\n//                                 <p><strong>Long Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_long_term)}</p>\r\n//                                 <p><strong>Short Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_short_term)}</p>\r\n//                                 <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.calculated_gross_income)}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"deductions-section\">\r\n//                                 <h5>Deductions Claimed</h5>\r\n//                                 {selectedRecord.aggregated_financial_data.standard_deduction > 0 && \r\n//                                     <p><strong>Standard Deduction:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.standard_deduction)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.professional_tax > 0 &&\r\n//                                     <p><strong>Professional Tax:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.professional_tax)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\r\n//                                     <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80C > 0 &&\r\n//                                     <p><strong>Section 80C Investments:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80C)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80CCD1B > 0 &&\r\n//                                     <p><strong>Section 80CCD1B:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80D > 0 &&\r\n//                                     <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80D)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80G > 0 &&\r\n//                                     <p><strong>Section 80G:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80G)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80TTA > 0 &&\r\n//                                     <p><strong>Section 80TTA:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTA)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80TTB > 0 &&\r\n//                                     <p><strong>Section 80TTB:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTB)}</p>\r\n//                                 }\r\n//                                 {selectedRecord.aggregated_financial_data.deduction_80E > 0 &&\r\n//                                     <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80E)}</p>\r\n//                                 }\r\n//                                 <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deductions)}</p>\r\n//                             </div>\r\n\r\n//                             <div className=\"taxation-summary-section\">\r\n//                                 <h5>Tax Payments & Regime</h5>\r\n//                                 <p><strong>Total TDS Credit:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.total_tds_credit)}</p>\r\n//                                 <p><strong>Advance Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.advance_tax)}</p>\r\n//                                 <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.self_assessment_tax)}</p>\r\n//                                 <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{selectedRecord.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n//                             </div>\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     {/* Final Tax Computation Summary (Rule-Based) */}\r\n//                     {selectedRecord.final_tax_computation_summary && (\r\n//                         <div className=\"final-tax-computation-section section-box\">\r\n//                             <h4>Final Tax Computation Summary (Rule-Based)</h4>\r\n//                             {selectedRecord.final_tax_computation_summary.calculation_details && selectedRecord.final_tax_computation_summary.calculation_details.length > 0 && (\r\n//                                 <div className=\"computation-details-list\">\r\n//                                     <h5>Calculation Steps:</h5>\r\n//                                     <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\r\n//                                         {selectedRecord.final_tax_computation_summary.calculation_details.map((detail, idx) => (\r\n//                                             <li key={idx} className=\"computation-detail-item\">{detail}</li>\r\n//                                         ))}\r\n//                                     </ul>\r\n//                                 </div>\r\n//                             )}\r\n//                             <div className=\"final-amount-box\">\r\n//                                 <p><strong>Computed Taxable Income:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.computed_taxable_income)}</p>\r\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n//                                 <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{selectedRecord.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\r\n//                                 {selectedRecord.final_tax_computation_summary.predicted_refund_due > 0 && (\r\n//                                     <p className=\"refund-amount\">\r\n//                                         <strong>Refund Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_refund_due)}\r\n//                                     </p>\r\n//                                 )}\r\n//                                 {selectedRecord.final_tax_computation_summary.predicted_additional_due > 0 && (\r\n//                                     <p className=\"tax-due-amount\">\r\n//                                         <strong>Additional Tax Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_additional_due)}\r\n//                                     </p>\r\n//                                 )}\r\n//                             </div>\r\n//                             {selectedRecord.final_tax_computation_summary.notes && selectedRecord.final_tax_computation_summary.notes.length > 0 && (\r\n//                                 <p className=\"computation-notes\">\r\n//                                     <strong>Note:</strong> {Array.isArray(selectedRecord.final_tax_computation_summary.notes) ? selectedRecord.final_tax_computation_summary.notes.join(', ') : selectedRecord.final_tax_computation_summary.notes}\r\n//                                 </p>\r\n//                             )}\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     {/* AI Recommendations & Predictions */}\r\n//                     {selectedRecord.ml_prediction_summary || selectedRecord.suggestions_from_gemini?.length > 0 || selectedRecord.gemini_regime_analysis ? (\r\n//                         <div className=\"suggestions-output section-box\">\r\n//                             <h4>AI Recommendations & Predictions</h4>\r\n//                             {selectedRecord.suggestions_from_gemini && selectedRecord.suggestions_from_gemini.length > 0 ? (\r\n//                                 <>\r\n//                                     <h5>Based on Gemini AI:</h5>\r\n//                                     <ul className=\"suggestions-list\">\r\n//                                         {selectedRecord.suggestions_from_gemini.map((suggestion, index) => (\r\n//                                             <li key={index}>{suggestion}</li>\r\n//                                         ))}\r\n//                                     </ul>\r\n//                                 </>\r\n//                             ) : (\r\n//                                 <p>Gemini did not provide specific tax-saving suggestions for this record.</p>\r\n//                             )}\r\n\r\n//                             {selectedRecord.gemini_regime_analysis && (\r\n//                                 <div className=\"gemini-regime-analysis\">\r\n//                                     <h5>Gemini's Regime Analysis:</h5>\r\n//                                     <p>{selectedRecord.gemini_regime_analysis}</p>\r\n//                                 </div>\r\n//                             )}\r\n\r\n//                             {selectedRecord.ml_prediction_summary && (\r\n//                                 <>\r\n//                                     <h5>ML Model Prediction:</h5>\r\n//                                     {selectedRecord.ml_prediction_summary.predicted_tax_regime && (\r\n//                                         <p><strong>Predicted Tax Regime:</strong> {selectedRecord.ml_prediction_summary.predicted_tax_regime}</p>\r\n//                                     )}\r\n//                                     <p><strong>Predicted Tax Liability:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)}</p>\r\n//                                     <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)}</p>\r\n//                                     <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)}</p>\r\n//                                     {selectedRecord.ml_prediction_summary.notes && (\r\n//                                         <p><strong>Notes:</strong> {selectedRecord.ml_prediction_summary.notes}</p>\r\n//                                     )}\r\n//                                 </>\r\n//                             )}\r\n//                         </div>\r\n//                     ) : (\r\n//                         <div className=\"section-box\">\r\n//                             <p>No AI recommendations or ML predictions available for this record yet. These are generated when you click \"Get AI Suggestions & ML Predictions\" after uploading documents.</p>\r\n//                         </div>\r\n//                     )}\r\n\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TaxHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n\r\n// const TaxHistory = () => {\r\n//     const [history, setHistory] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [message, setMessage] = useState('');\r\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n//     const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\r\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false); // Added for history re-generation\r\n\r\n//     // Helper function to safely format currency values\r\n//     const formatCurrency = (value) => {\r\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n//             return 'N/A';\r\n//         }\r\n//         return parseFloat(value).toLocaleString('en-IN', {\r\n//             style: 'currency',\r\n//             currency: 'INR',\r\n//             minimumFractionDigits: 2,\r\n//             maximumFractionDigits: 2,\r\n//         });\r\n//     };\r\n\r\n//     // Helper function to render extracted fields dynamically, similar to TaxUploader\r\n//     const renderExtractedFields = (fields, identifiedType) => {\r\n//         if (!fields) return null;\r\n\r\n//         // Define a comprehensive list of all possible fields and their display names\r\n//         const fieldDefinitions = {\r\n//             // Personal & Employer Info\r\n//             \"name_of_employee\": { label: \"Name of Employee\", type: \"text\" },\r\n//             \"pan_of_employee\": { label: \"PAN of Employee\", type: \"text\" },\r\n//             \"date_of_birth\": { label: \"Date of Birth\", type: \"date\" },\r\n//             \"gender\": { label: \"Gender\", type: \"text\" },\r\n//             \"residential_status\": { label: \"Residential Status\", type: \"text\" },\r\n//             \"employer_name\": { label: \"Employer Name\", type: \"text\" },\r\n//             \"employer_address\": { label: \"Employer Address\", type: \"text\" },\r\n//             \"pan_of_deductor\": { label: \"PAN of Deductor\", type: \"text\" },\r\n//             \"tan_of_deductor\": { label: \"TAN of Deductor\", type: \"text\" },\r\n//             \"designation_of_employee\": { label: \"Designation\", type: \"text\" },\r\n//             // Financial Years & Period\r\n//             \"financial_year\": { label: \"Financial Year\", type: \"text\" },\r\n//             \"assessment_year\": { label: \"Assessment Year\", type: \"text\" },\r\n//             \"period_from\": { label: \"Period From\", type: \"date\" },\r\n//             \"period_to\": { label: \"Period To\", type: \"date\" },\r\n//             \"statement_start_date\": { label: \"Statement Start Date\", type: \"date\" },\r\n//             \"statement_end_date\": { label: \"Statement End Date\", type: \"date\" },\r\n//             // Income\r\n//             \"gross_salary_total\": { label: \"Gross Salary Total\", type: \"currency\" },\r\n//             \"salary_as_per_sec_17_1\": { label: \"Salary U/S 17(1)\", type: \"currency\" },\r\n//             \"value_of_perquisites_u_s_17_2\": { label: \"Perquisites U/S 17(2)\", type: \"currency\" },\r\n//             \"profits_in_lieu_of_salary_u_s_17_3\": { label: \"Profits in Lieu of Salary U/S 17(3)\", type: \"currency\" },\r\n//             \"basic_salary\": { label: \"Basic Salary\", type: \"currency\" },\r\n//             \"hra_received\": { label: \"HRA Received\", type: \"currency\" },\r\n//             \"conveyance_allowance\": { label: \"Conveyance Allowance\", type: \"currency\" },\r\n//             \"transport_allowance\": { label: \"Transport Allowance\", type: \"currency\" },\r\n//             \"overtime_pay\": { label: \"Overtime Pay\", type: \"currency\" },\r\n//             \"total_exempt_allowances\": { label: \"Total Exempt Allowances\", type: \"currency\" },\r\n//             \"income_from_house_property\": { label: \"Income from House Property\", type: \"currency\" },\r\n//             \"income_from_other_sources\": { label: \"Income from Other Sources\", type: \"currency\" },\r\n//             \"capital_gains_long_term\": { label: \"Long Term Capital Gains\", type: \"currency\" },\r\n//             \"capital_gains_short_term\": { label: \"Short Term Capital Gains\", type: \"currency\" },\r\n//             \"gross_total_income_as_per_document\": { label: \"Gross Total Income (Doc)\", type: \"currency\" },\r\n//             // Deductions\r\n//             \"professional_tax\": { label: \"Professional Tax\", type: \"currency\" },\r\n//             \"interest_on_housing_loan_self_occupied\": { label: \"Interest on Home Loan (Self Occupied)\", type: \"currency\" },\r\n//             \"deduction_80c\": { label: \"Deduction 80C\", type: \"currency\" },\r\n//             \"deduction_80c_epf\": { label: \"Deduction 80C (EPF)\", type: \"currency\" },\r\n//             \"deduction_80c_insurance_premium\": { label: \"Deduction 80C (Insurance Premium)\", type: \"currency\" },\r\n//             \"deduction_80ccc\": { label: \"Deduction 80CCC\", type: \"currency\" },\r\n//             \"deduction_80ccd\": { label: \"Deduction 80CCD\", type: \"currency\" },\r\n//             \"deduction_80ccd1b\": { label: \"Deduction 80CCD(1B)\", type: \"currency\" },\r\n//             \"deduction_80d\": { label: \"Deduction 80D\", type: \"currency\" },\r\n//             \"deduction_80g\": { label: \"Deduction 80G\", type: \"currency\" },\r\n//             \"deduction_80tta\": { label: \"Deduction 80TTA\", type: \"currency\" },\r\n//             \"deduction_80ttb\": { label: \"Deduction 80TTB\", type: \"currency\" },\r\n//             \"deduction_80e\": { label: \"Deduction 80E\", type: \"currency\" },\r\n//             \"total_deductions_chapter_via\": { label: \"Total Chapter VI-A Deductions\", type: \"currency\" },\r\n//             \"aggregate_of_deductions_from_salary\": { label: \"Aggregate Deductions from Salary\", type: \"currency\" },\r\n//             \"epf_contribution\": { label: \"EPF Contribution\", type: \"currency\" },\r\n//             \"esi_contribution\": { label: \"ESI Contribution\", type: \"currency\" },\r\n//             // Tax Paid\r\n//             \"total_tds\": { label: \"Total TDS\", type: \"currency\" },\r\n//             \"total_tds_deducted_summary\": { label: \"Total TDS Deducted (Summary)\", type: \"currency\" },\r\n//             \"total_tds_deposited_summary\": { label: \"Total TDS Deposited (Summary)\", type: \"currency\" },\r\n//             \"quarter_1_receipt_number\": { label: \"Q1 Receipt Number\", type: \"text\" },\r\n//             \"quarter_1_tds_deducted\": { label: \"Q1 TDS Deducted\", type: \"currency\" },\r\n//             \"quarter_1_tds_deposited\": { label: \"Q1 TDS Deposited\", type: \"currency\" },\r\n//             \"advance_tax\": { label: \"Advance Tax\", type: \"currency\" },\r\n//             \"self_assessment_tax\": { label: \"Self-Assessment Tax\", type: \"currency\" },\r\n//             // Other Tax Info\r\n//             \"taxable_income_as_per_document\": { label: \"Taxable Income (Doc)\", type: \"currency\" },\r\n//             \"tax_payable_as_per_document\": { label: \"Tax Payable (Doc)\", type: \"currency\" },\r\n//             \"refund_status_as_per_document\": { label: \"Refund Status (Doc)\", type: \"text\" },\r\n//             \"tax_regime_chosen\": { label: \"Tax Regime Chosen\", type: \"text\" },\r\n//             \"net_amount_payable\": { label: \"Net Amount Payable\", type: \"currency\" },\r\n//             \"days_present\": { label: \"Days Present\", type: \"number\" },\r\n//             \"overtime_hours\": { label: \"Overtime Hours\", type: \"number\" },\r\n//             // Bank Statement Details\r\n//             \"account_holder_name\": { label: \"Account Holder Name\", type: \"text\" },\r\n//             \"account_number\": { label: \"Account Number\", type: \"text\" },\r\n//             \"ifsc_code\": { label: \"IFSC Code\", type: \"text\" },\r\n//             \"bank_name\": { label: \"Bank Name\", type: \"text\" },\r\n//             \"branch_address\": { label: \"Branch Address\", type: \"text\" },\r\n//             \"opening_balance\": { label: \"Opening Balance\", type: \"currency\" },\r\n//             \"closing_balance\": { label: \"Closing Balance\", type: \"currency\" },\r\n//             \"total_deposits\": { label: \"Total Deposits\", type: \"currency\" },\r\n//             \"total_withdrawals\": { label: \"Total Withdrawals\", type: \"currency\" },\r\n//             \"transaction_summary\": { label: \"Transaction Summary\", type: \"array_of_objects\" }\r\n//         };\r\n\r\n//         const taxRelatedFields = [\r\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\r\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\r\n//             \"total_exempt_allowances\", \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\",\r\n//             \"capital_gains_short_term\", \"gross_total_income_as_per_document\", \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\r\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\r\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\r\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\r\n//             \"epf_contribution\", \"esi_contribution\", \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\r\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\", \"advance_tax\", \"self_assessment_tax\",\r\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\r\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\"\r\n//         ];\r\n\r\n//         const bankStatementFields = [\r\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\r\n//             \"statement_start_date\", \"statement_end_date\", \"opening_balance\", \"closing_balance\",\r\n//             \"total_deposits\", \"total_withdrawals\", \"transaction_summary\"\r\n//         ];\r\n        \r\n//         let fieldsToRender = [];\r\n//         if (identifiedType === 'Bank Statement') {\r\n//             fieldsToRender = bankStatementFields.filter(key => fields[key] !== undefined);\r\n//         } else {\r\n//             // For other document types, primarily show tax-related fields plus common ones\r\n//             fieldsToRender = Object.keys(fields).filter(key => \r\n//                 taxRelatedFields.includes(key) ||\r\n//                 [\"name_of_employee\", \"pan_of_employee\", \"financial_year\", \"assessment_year\", \"date_of_birth\"].includes(key)\r\n//             );\r\n//         }\r\n\r\n//         // Sort fields to render according to the predefined order for consistency\r\n//         fieldsToRender.sort((a, b) => {\r\n//             const indexA = Object.keys(fieldDefinitions).indexOf(a);\r\n//             const indexB = Object.keys(fieldDefinitions).indexOf(b);\r\n//             return indexA - indexB;\r\n//         });\r\n\r\n\r\n//         return (\r\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//                 {fieldsToRender.map(key => {\r\n//                     const fieldDef = fieldDefinitions[key];\r\n//                     let value = fields[key];\r\n\r\n//                     if (!fieldDef || value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null') || (typeof value === 'string' && value.trim() === '')) {\r\n//                         return null; // Skip if no definition, null, undefined, \"null\", or empty string\r\n//                     }\r\n\r\n//                     // Handle date fields that might come as \"0000-01-01\"\r\n//                     if (fieldDef.type === \"date\" && value === \"0000-01-01\") {\r\n//                         value = \"N/A\";\r\n//                     } else if (fieldDef.type === \"currency\" && typeof value === 'number') {\r\n//                         value = formatCurrency(value);\r\n//                     } else if (Array.isArray(value) && value.length === 0) {\r\n//                         return null; // Skip empty arrays\r\n//                     }\r\n\r\n//                     // Special handling for transaction_summary\r\n//                     if (key === \"transaction_summary\" && Array.isArray(value)) {\r\n//                         return (\r\n//                             <li key={key}>\r\n//                                 <strong>{fieldDef.label}:</strong>\r\n//                                 <pre className=\"extracted-fields-preview mt-2\">\r\n//                                     {value.length > 0 ? JSON.stringify(value.map(tx => ({\r\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\",\r\n//                                         description: tx.description,\r\n//                                         amount: formatCurrency(tx.amount)\r\n//                                     })), null, 2) : 'No transactions found.'}\r\n//                                 </pre>\r\n//                             </li>\r\n//                         );\r\n//                     }\r\n                    \r\n//                     return (\r\n//                         <li key={key}>\r\n//                             <strong>{fieldDef.label}:</strong> {value.toString()}\r\n//                         </li>\r\n//                     );\r\n//                 })}\r\n//             </ul>\r\n//         );\r\n//     };\r\n\r\n//     useEffect(() => {\r\n//         const fetchHistory = async () => {\r\n//             setLoading(true);\r\n//             setMessage('Fetching your tax history...');\r\n//             setMessageType('info');\r\n//             const jwt_token = Cookies.get('jwt_token');\r\n\r\n//             try {\r\n//                 const response = await axios.get('http://127.0.0.1:5000/api/tax-records', {\r\n//                     headers: {\r\n//                         'Authorization': `Bearer ${jwt_token}`\r\n//                     },\r\n//                     withCredentials: true,\r\n//                 });\r\n\r\n//                 if (response.data.status === 'success') {\r\n//                     setHistory(response.data.history);\r\n//                     setMessage('Tax history loaded successfully.');\r\n//                     setMessageType('success');\r\n//                 } else {\r\n//                     setMessage(response.data.message || 'Failed to fetch tax history.');\r\n//                     setMessageType('error');\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('Error fetching tax history:', error);\r\n//                 setMessage(error.response?.data?.message || 'An error occurred while fetching history.');\r\n//                 setMessageType('error');\r\n//             } finally {\r\n//                 setLoading(false);\r\n//             }\r\n//         };\r\n\r\n//         fetchHistory();\r\n//     }, []);\r\n\r\n//     const handleViewDetails = (record) => {\r\n//         setSelectedRecord(record);\r\n//         window.scrollTo({ top: 0, behavior: 'smooth' }); // Scroll to top to view details\r\n//     };\r\n\r\n//     const handleBackToList = () => {\r\n//         setSelectedRecord(null);\r\n//         // setSuggestionsResult(null); // No need to clear global suggestions state in TaxHistory as it's part of selectedRecord now\r\n//     };\r\n\r\n//     const handleGetSuggestionsFromHistory = async (record) => {\r\n//         setIsGeneratingSuggestions(true);\r\n//         setMessage('Generating AI suggestions and ML predictions for this record...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', \r\n//                 { record_id: record._id }, \r\n//                 {\r\n//                     headers: {\r\n//                         'Content-Type': 'application/json',\r\n//                         'Authorization': `Bearer ${jwt_token}`\r\n//                     },\r\n//                     withCredentials: true,\r\n//                 }\r\n//             );\r\n\r\n//             if (response.data.status === 'success') {\r\n//                 setMessage('Suggestions and predictions generated!');\r\n//                 setMessageType('success');\r\n//                 // Update the selected record with new suggestions directly\r\n//                 setSelectedRecord(prev => ({\r\n//                     ...prev,\r\n//                     suggestions_from_gemini: response.data.suggestions_from_gemini,\r\n//                     gemini_regime_analysis: response.data.gemini_regime_analysis,\r\n//                     ml_prediction_summary: response.data.ml_prediction_summary,\r\n//                 }));\r\n//             } else {\r\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error getting suggestions from history:', error);\r\n//             setMessage(error.response?.data?.message || 'An error occurred while fetching suggestions.');\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingSuggestions(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGenerateITRFromHistory = async (record) => {\r\n//         setIsGeneratingITR(true);\r\n//         setMessage('Generating ITR form...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${record._id}`, {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${jwt_token}`\r\n//                 },\r\n//                 responseType: 'blob', // Important: receive the response as a Blob\r\n//                 withCredentials: true,\r\n//             });\r\n\r\n//             if (response.status === 200) {\r\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\r\n//                 const url = window.URL.createObjectURL(blob);\r\n//                 const contentDisposition = response.headers['content-disposition'];\r\n//                 let filename = 'ITR_Form.pdf';\r\n//                 if (contentDisposition) {\r\n//                     const filenameMatch = contentDisposition.match(/filename=\"(.+)\"/);\r\n//                     if (filenameMatch && filenameMatch[1]) {\r\n//                         filename = filenameMatch[1];\r\n//                     }\r\n//                 }\r\n//                 const link = document.createElement('a');\r\n//                 link.href = url;\r\n//                 link.setAttribute('download', filename);\r\n//                 document.body.appendChild(link);\r\n//                 link.click();\r\n//                 link.parentNode.removeChild(link);\r\n//                 window.URL.revokeObjectURL(url);\r\n\r\n//                 setMessage('ITR form generated and downloaded!');\r\n//                 setMessageType('success');\r\n//             } else {\r\n//                  // Try to read error message from non-PDF response\r\n//                 const errorData = await new Response(response.data).text();\r\n//                 setMessage(errorData || 'Failed to generate ITR form.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Error generating ITR from history:', error);\r\n//             let errorMessage = 'An error occurred while generating ITR.';\r\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n//                 const reader = new FileReader();\r\n//                 reader.onload = function() {\r\n//                     try {\r\n//                         const errorJson = JSON.parse(reader.result);\r\n//                         errorMessage = errorJson.message || errorMessage;\r\n//                     } catch (e) {\r\n//                         // Not a JSON error, use generic message\r\n//                         errorMessage = reader.result || error.response.statusText;\r\n//                     } finally {\r\n//                         setMessage(errorMessage);\r\n//                         setMessageType('error');\r\n//                     }\r\n//                 };\r\n//                 reader.readAsText(error.response.data);\r\n//             } else {\r\n//                 setMessage(errorMessage);\r\n//                 setMessageType('error');\r\n//             }\r\n//         } finally {\r\n//             setIsGeneratingITR(false);\r\n//         }\r\n//     };\r\n\r\n\r\n//     return (\r\n//         <div className=\"p-6 max-w-7xl mx-auto bg-gray-100 min-h-screen font-sans\">\r\n//             <h2 className=\"text-3xl font-bold text-gray-800 mb-6 text-center\">Your Tax History</h2>\r\n\r\n//             {message && (\r\n//                 <div className={`message ${messageType}`}>\r\n//                     {messageType === 'info' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\r\n//                     {messageType === 'success' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\r\n//                     {messageType === 'error' && <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {selectedRecord ? (\r\n//                 // Detailed View of a Single Record\r\n//                 <div className=\"container-card\">\r\n//                     <button onClick={handleBackToList} className=\"btn-secondary mb-4 flex items-center\">\r\n//                         <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"></path></svg>\r\n//                         Back to History List\r\n//                     </button>\r\n//                     <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Details for Record: {selectedRecord._id}</h3>\r\n                    \r\n//                     {selectedRecord.document_processing_summary && selectedRecord.document_processing_summary.length > 0 && (\r\n//                         <div className=\"section-box\">\r\n//                             <h4 className=\"text-lg font-medium text-gray-700 mb-2\">Processed Documents Summary:</h4>\r\n//                             {selectedRecord.document_processing_summary.map((doc, index) => (\r\n//                                 <div key={index} className={`mb-4 p-3 rounded-md ${doc.status === 'success' ? 'bg-green-50 text-green-800' : doc.status === 'warning' ? 'bg-yellow-50 text-yellow-800' : 'bg-red-50 text-red-800'}`}>\r\n//                                     <p><strong>File:</strong> {doc.filename} {doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-indigo-600 hover:underline\">(View Stored Document)</a>}</p>\r\n//                                     <p><strong>Status:</strong> <span className=\"uppercase\">{doc.status}</span></p>\r\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type}</p>\r\n//                                     <p><strong>Message:</strong> {doc.message}</p>\r\n//                                     {/* Extracted fields for each document, using the improved renderExtractedFields */}\r\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n//                                         <p><strong>Extracted Fields:</strong>\r\n//                                             <pre className=\"extracted-fields-preview\">\r\n//                                             {renderExtractedFields(doc.extracted_fields, doc.identified_type)}\r\n//                                             </pre>\r\n//                                         </p>\r\n//                                     )}\r\n//                                 </div>\r\n//                             ))}\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     {selectedRecord.aggregated_financial_data && (\r\n//                         <div className=\"section-box\">\r\n//                             <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Aggregated Financial Data Summary</h3>\r\n                            \r\n//                             {/* Conditional rendering for Bank Statement vs. Tax Data in aggregated summary */}\r\n//                             {selectedRecord.aggregated_financial_data.identified_type === 'Bank Statement' || \r\n//                              (selectedRecord.aggregated_financial_data.account_number && selectedRecord.aggregated_financial_data.account_number !== 'null') ? (\r\n//                                 <div className=\"income-details-section\"> {/* Re-using for consistent styling */}\r\n//                                     <h5>Bank Account Details</h5>\r\n//                                     <p><strong>Account Holder Name:</strong> {selectedRecord.aggregated_financial_data.account_holder_name || 'N/A'}</p>\r\n//                                     <p><strong>Account Number:</strong> {selectedRecord.aggregated_financial_data.account_number || 'N/A'}</p>\r\n//                                     <p><strong>Bank Name:</strong> {selectedRecord.aggregated_financial_data.bank_name || 'N/A'}</p>\r\n//                                     <p><strong>Branch Address:</strong> {selectedRecord.aggregated_financial_data.branch_address || 'N/A'}</p>\r\n//                                     <p><strong>Statement Period:</strong> {selectedRecord.aggregated_financial_data.statement_start_date || 'N/A'} to {selectedRecord.aggregated_financial_data.statement_end_date || 'N/A'}</p>\r\n//                                     <p><strong>Opening Balance:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.opening_balance)}</p>\r\n//                                     <p><strong>Closing Balance:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.closing_balance)}</p>\r\n//                                     <p><strong>Total Deposits:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deposits)}</p>\r\n//                                     <p><strong>Total Withdrawals:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_withdrawals)}</p>\r\n//                                     {selectedRecord.aggregated_financial_data.transaction_summary && selectedRecord.aggregated_financial_data.transaction_summary.length > 0 && (\r\n//                                         <p>\r\n//                                             <strong>Key Transactions:</strong> \r\n//                                             <pre className=\"extracted-fields-preview mt-2\">\r\n//                                                 {JSON.stringify(selectedRecord.aggregated_financial_data.transaction_summary.slice(0, 5).map(tx => ({ // Show first 5 transactions\r\n//                                                     date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\",\r\n//                                                     description: tx.description,\r\n//                                                     amount: formatCurrency(tx.amount)\r\n//                                                 })), null, 2)}\r\n//                                                 {selectedRecord.aggregated_financial_data.transaction_summary.length > 5 ? '\\n...' : ''}\r\n//                                             </pre>\r\n//                                         </p>\r\n//                                     )}\r\n//                                 </div>\r\n//                             ) : (\r\n//                                 <>\r\n//                                     <div className=\"income-details-section\">\r\n//                                         <h5>Income Details</h5>\r\n//                                         <p><strong>Financial Year:</strong> {selectedRecord.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n//                                         <p><strong>Assessment Year:</strong> {selectedRecord.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n//                                         <p><strong>Name:</strong> {selectedRecord.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n//                                         <p><strong>PAN:</strong> {selectedRecord.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n//                                         <p><strong>Date of Birth:</strong> {selectedRecord.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? selectedRecord.aggregated_financial_data.date_of_birth : 'N/A'}</p>\r\n//                                         <p><strong>Age:</strong> {selectedRecord.aggregated_financial_data.Age || 'N/A'}</p>\r\n//                                         <p><strong>Gross Annual Salary:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.gross_salary_total)}</p>\r\n//                                         <p><strong>Exempt Allowances:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_exempt_allowances)}</p>\r\n//                                         <p><strong>Income from House Property:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_house_property)}</p>\r\n//                                         <p><strong>Income from Other Sources:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.income_from_other_sources)}</p>\r\n//                                         <p><strong>Long Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_long_term)}</p>\r\n//                                         <p><strong>Short Term Capital Gains:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.capital_gains_short_term)}</p>\r\n//                                         <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.calculated_gross_income)}</p>\r\n//                                     </div>\r\n//                                     <div className=\"deductions-section\">\r\n//                                         <h5>Deductions Claimed</h5>\r\n//                                         {selectedRecord.aggregated_financial_data.standard_deduction > 0 && \r\n//                                             <p><strong>Standard Deduction:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.standard_deduction)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.professional_tax > 0 &&\r\n//                                             <p><strong>Professional Tax:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.professional_tax)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\r\n//                                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80C > 0 &&\r\n//                                             <p><strong>Section 80C Investments:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80C)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80CCD1B > 0 &&\r\n//                                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80D > 0 &&\r\n//                                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80D)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80G > 0 &&\r\n//                                             <p><strong>Section 80G:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80G)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80TTA > 0 &&\r\n//                                             <p><strong>Section 80TTA:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTA)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80TTB > 0 &&\r\n//                                             <p><strong>Section 80TTB:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80TTB)}</p>\r\n//                                         }\r\n//                                         {selectedRecord.aggregated_financial_data.deduction_80E > 0 &&\r\n//                                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.deduction_80E)}</p>\r\n//                                         }\r\n//                                         <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(selectedRecord.aggregated_financial_data.total_deductions)}</p>\r\n//                                     </div>\r\n//                                     <div className=\"taxation-summary-section\">\r\n//                                         <h5>Tax Payments & Regime</h5>\r\n//                                         <p><strong>Total TDS Credit:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.total_tds_credit)}</p>\r\n//                                         <p><strong>Advance Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.advance_tax)}</p>\r\n//                                         <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(selectedRecord.aggregated_financial_data.self_assessment_tax)}</p>\r\n//                                         <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{selectedRecord.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n//                                     </div>\r\n//                                 </>\r\n//                             )}\r\n//                         </div>\r\n//                         <div className=\"final-tax-computation-section section-box\">\r\n//                             <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\r\n//                             {selectedRecord.final_tax_computation_summary.calculation_details && selectedRecord.final_tax_computation_summary.calculation_details.length > 0 && (\r\n//                                 <div className=\"computation-details-list\">\r\n//                                     <h5>Calculation Steps:</h5>\r\n//                                     <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\r\n//                                         {selectedRecord.final_tax_computation_summary.calculation_details.map((detail, idx) => (\r\n//                                             <li key={idx} className=\"computation-detail-item\">{detail}</li>\r\n//                                         ))}\r\n//                                     </ul>\r\n//                                 </div>\r\n//                             )}\r\n//                             <div className=\"final-amount-box\">\r\n//                                 <p><strong>Computed Taxable Income:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.computed_taxable_income)}</p>\r\n//                                 <p><strong>Estimated Tax Payable:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n//                                 <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{selectedRecord.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\r\n//                                 {selectedRecord.final_tax_computation_summary.predicted_refund_due > 0 && (\r\n//                                     <p className=\"refund-amount\">\r\n//                                         <strong>Refund Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_refund_due)}\r\n//                                     </p>\r\n//                                 )}\r\n//                                 {selectedRecord.final_tax_computation_summary.predicted_additional_due > 0 && (\r\n//                                     <p className=\"tax-due-amount\">\r\n//                                         <strong>Additional Tax Due:</strong> {formatCurrency(selectedRecord.final_tax_computation_summary.predicted_additional_due)}\r\n//                                     </p>\r\n//                                 )}\r\n//                             </div>\r\n//                             {selectedRecord.final_tax_computation_summary.notes && selectedRecord.final_tax_computation_summary.notes.length > 0 && (\r\n//                                 <p className=\"computation-notes\">\r\n//                                     <strong>Note:</strong> {Array.isArray(selectedRecord.final_tax_computation_summary.notes) ? selectedRecord.final_tax_computation_summary.notes.join(', ') : selectedRecord.final_tax_computation_summary.notes}\r\n//                                 </p>\r\n//                             )}\r\n//                         </div>\r\n//                     )}\r\n\r\n//                     <div className=\"action-buttons-container\" style={{ justifyContent: 'center' }}>\r\n//                         <button\r\n//                             onClick={() => handleGetSuggestionsFromHistory(selectedRecord)}\r\n//                             disabled={isGeneratingSuggestions}\r\n//                             className={`tax-uploader-button get-suggestions-button ${isGeneratingSuggestions ? 'opacity-75 cursor-not-allowed' : ''}`}\r\n//                         >\r\n//                             {isGeneratingSuggestions ? (\r\n//                                 <>\r\n//                                     <div className=\"tax-uploader-spinner\"></div>\r\n//                                     Generating AI Suggestions...\r\n//                                 </>\r\n//                             ) : (\r\n//                                 'Re-Generate AI Suggestions & ML Predictions'\r\n//                             )}\r\n//                         </button>\r\n//                         <button\r\n//                             onClick={() => handleGenerateITRFromHistory(selectedRecord)}\r\n//                             disabled={isGeneratingITR}\r\n//                             className={`tax-uploader-button generate-itr-button ${isGeneratingITR ? 'opacity-75 cursor-not-allowed' : ''}`}\r\n//                         >\r\n//                             {isGeneratingITR ? (\r\n//                                 <>\r\n//                                     <div className=\"tax-uploader-spinner\"></div>\r\n//                                     Generating ITR Form...\r\n//                                 </>\r\n//                             ) : (\r\n//                                 'Generate Dummy ITR Form (PDF)'\r\n//                             )}\r\n//                         </button>\r\n//                     </div>\r\n\r\n//                     {/* Display Suggestions from Gemini and ML Predictions */}\r\n//                     {(selectedRecord.suggestions_from_gemini || selectedRecord.gemini_regime_analysis || selectedRecord.ml_prediction_summary) && (\r\n//                         <div className=\"suggestions-output tax-summary-output\">\r\n//                             <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\r\n//                             <div className=\"section-box\">\r\n//                                 {selectedRecord.suggestions_from_gemini && selectedRecord.suggestions_from_gemini.length > 0 ? (\r\n//                                     <>\r\n//                                         <h4>Based on Gemini AI:</h4>\r\n//                                         <ul className=\"suggestions-list\">\r\n//                                             {selectedRecord.suggestions_from_gemini.map((suggestion, index) => (\r\n//                                                 <li key={index}>{suggestion}</li>\r\n//                                             ))}\r\n//                                         </ul>\r\n//                                     </>\r\n//                                 ) : (\r\n//                                     <p>Gemini did not provide specific tax-saving suggestions for this record, but your tax situation seems optimized.</p>\r\n//                                 )}\r\n//                                 {selectedRecord.gemini_regime_analysis && (\r\n//                                     <div className=\"gemini-regime-analysis\">\r\n//                                         <h4>Gemini's Regime Analysis:</h4>\r\n//                                         <p>{selectedRecord.gemini_regime_analysis}</p>\r\n//                                     </div>\r\n//                                 )}\r\n//                                 {selectedRecord.ml_prediction_summary && (\r\n//                                     <>\r\n//                                         <h4>ML Model Prediction:</h4>\r\n//                                         {selectedRecord.ml_prediction_summary.predicted_tax_regime && (\r\n//                                             <p><strong>Predicted Tax Regime:</strong> {selectedRecord.ml_prediction_summary.predicted_tax_regime}</p>\r\n//                                         )}\r\n//                                         <p><strong>Predicted Tax Liability:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)}</p>\r\n//                                         <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)}</p>\r\n//                                         <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)}</p>\r\n//                                         {selectedRecord.ml_prediction_summary.notes && (\r\n//                                             <p><strong>Notes:</strong> {selectedRecord.ml_prediction_summary.notes}</p>\r\n//                                         )}\r\n//                                     </>\r\n//                                 )}\r\n//                             </div>\r\n//                         </div>\r\n//                     )}\r\n\r\n//                 </div>\r\n//             ) : (\r\n//                 // List View of Records\r\n//                 <div className=\"container-card\">\r\n//                     <h3 className=\"text-xl font-semibold text-gray-700 mb-4\">Your Processed Tax Records</h3>\r\n//                     {loading ? (\r\n//                         <p className=\"text-center text-gray-600 flex items-center justify-center\">\r\n//                             <span className=\"loading-spinner mr-2 border-indigo-500 border-t-indigo-500\"></span>\r\n//                             Loading tax records...\r\n//                         </p>\r\n//                     ) : history.length === 0 ? (\r\n//                         <p className=\"text-center text-gray-600\">No tax records found. Upload documents to get started!</p>\r\n//                     ) : (\r\n//                         <div className=\"overflow-x-auto\">\r\n//                             <table className=\"min-w-full bg-white rounded-lg shadow overflow-hidden history-table\">\r\n//                                 <thead className=\"bg-gray-200\">\r\n//                                     <tr>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Record ID</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Document Type</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Financial Year</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Last Processed</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Aggregated Gross Income</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Estimated Tax Payable</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Refund / Due</th>\r\n//                                         <th className=\"py-3 px-4 text-left text-sm font-semibold text-gray-700 uppercase tracking-wider\">Actions</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody className=\"divide-y divide-gray-200\">\r\n//                                     {history.map((record) => (\r\n//                                         <tr key={record._id} className=\"hover:bg-gray-50\">\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record._id.substring(0, 8)}...</td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record.document_processing_summary?.[0]?.identified_type || 'N/A'}</td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{record.aggregated_financial_data.financial_year || 'N/A'}</td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">{new Date(record.timestamp).toLocaleString()}</td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">\r\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : formatCurrency(record.aggregated_financial_data.total_gross_income)}\r\n//                                             </td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm text-gray-800\">\r\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : formatCurrency(record.final_tax_computation_summary.estimated_tax_payable)}\r\n//                                             </td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm\">\r\n//                                                 {record.aggregated_financial_data.identified_type === 'Bank Statement' ? 'N/A' : (\r\n//                                                     record.final_tax_computation_summary.predicted_refund_due > 0 ? (\r\n//                                                         <span className=\"refund-amount\">{formatCurrency(record.final_tax_computation_summary.predicted_refund_due)} Refund</span>\r\n//                                                     ) : record.final_tax_computation_summary.predicted_additional_due > 0 ? (\r\n//                                                         <span className=\"tax-due-amount\">{formatCurrency(record.final_tax_computation_summary.predicted_additional_due)} Due</span>\r\n//                                                     ) : (\r\n//                                                         'N/A'\r\n//                                                     )\r\n//                                                 )}\r\n//                                             </td>\r\n//                                             <td className=\"py-3 px-4 whitespace-nowrap text-sm\">\r\n//                                                 <button\r\n//                                                     onClick={() => handleViewDetails(record)}\r\n//                                                     className=\"view-details-btn\"\r\n//                                                 >\r\n//                                                     View Details\r\n//                                                 </button>\r\n//                                             </td>\r\n//                                         </tr>\r\n//                                     ))}\r\n//                                 </tbody>\r\n//                             </table>\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TaxHistory;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport './index.css'; // Import TaxHistory specific CSS\r\n\r\nconst TaxHistory = () => {\r\n    const [history, setHistory] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n    const [selectedRecord, setSelectedRecord] = useState(null); // To view full details of a record\r\n    const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n\r\n    // Helper function to safely format currency values\r\n    const formatCurrency = (value) => {\r\n        if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n            return 'N/A';\r\n        }\r\n        return parseFloat(value).toLocaleString('en-IN', {\r\n            style: 'currency',\r\n            currency: 'INR',\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchHistory = async () => {\r\n            setLoading(true);\r\n            setMessage('Fetching your tax history...');\r\n            setMessageType('info');\r\n            const jwt_token = Cookies.get('jwt_token');\r\n\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/tax-records', config);\r\n\r\n                if (response.data && Array.isArray(response.data.history)) {\r\n                    setTaxHistory(response.data.history);\r\n                    setMessage('Tax history fetched successfully.');\r\n                    setMessageType('success');\r\n                    } else {\r\n                    setMessage('Failed to fetch tax history.');\r\n                    setMessageType('error');\r\n                    }\r\n            } catch (error) {\r\n                console.error('Error fetching tax history:', error);\r\n                setMessage('Error fetching tax history. Please try again later.');\r\n                setMessageType('error');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchHistory();\r\n    }, []);\r\n\r\n    const handleViewDetails = (record) => {\r\n        setSelectedRecord(record);\r\n    };\r\n\r\n    const handleBackToList = () => {\r\n        setSelectedRecord(null);\r\n    };\r\n\r\n    const handleGenerateITR = async (recordId) => {\r\n        setIsGeneratingITR(true);\r\n        setMessage('Generating ITR for the selected record...');\r\n        setMessageType('info');\r\n        const jwt_token = Cookies.get('jwt_token');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/generate_itr', { record_id: recordId }, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt_token}`\r\n                },\r\n                responseType: 'blob', // Important for handling file downloads\r\n            });\r\n\r\n            // Create a blob from the response data\r\n            const file = new Blob([response.data], { type: 'application/pdf' });\r\n            // Create a link element\r\n            const fileURL = URL.createObjectURL(file);\r\n            const link = document.createElement('a');\r\n            link.href = fileURL;\r\n            link.setAttribute('download', `ITR_Report_${recordId}.pdf`); // Set the download file name\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.remove();\r\n            URL.revokeObjectURL(fileURL); // Clean up the URL object\r\n\r\n            setMessage('ITR generated and downloaded successfully!');\r\n            setMessageType('success');\r\n\r\n        } catch (error) {\r\n            console.error('Error generating ITR:', error);\r\n            setMessage('Error generating ITR. Please try again later.');\r\n            setMessageType('error');\r\n        } finally {\r\n            setIsGeneratingITR(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"tax-history-container\">\r\n            <h3>Your Tax History</h3>\r\n            {loading && <p className={`message ${messageType}`}>{message}</p>}\r\n            {!loading && message && messageType && (\r\n                <p className={`message ${messageType}`}>{message}</p>\r\n            )}\r\n\r\n            {selectedRecord === null ? (\r\n                // Display list of history records\r\n                <div className=\"history-list-section\">\r\n                    {history.length > 0 ? (\r\n                        <ul className=\"history-list\">\r\n                            {history.map((record) => (\r\n                                <li key={record._id} className=\"history-item\">\r\n                                    <div className=\"record-summary\">\r\n                                        <p><strong>Upload Date:</strong> {new Date(record.upload_date).toLocaleDateString()}</p>\r\n                                        <p><strong>Document Summary:</strong> {record.document_summary || 'N/A'}</p>\r\n                                        <p><strong>Status:</strong> {record.status || 'Processed'}</p>\r\n                                        {record.ml_prediction_summary && (\r\n                                            <p><strong>Predicted Tax Liability:</strong> {formatCurrency(record.ml_prediction_summary.predicted_tax_liability)}</p>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"record-actions\">\r\n                                        <button onClick={() => handleViewDetails(record)} className=\"view-details-button\">View Details</button>\r\n                                        <button\r\n                                            onClick={() => handleGenerateITR(record._id)}\r\n                                            className=\"generate-itr-button\"\r\n                                            disabled={isGeneratingITR}\r\n                                        >\r\n                                            {isGeneratingITR ? 'Generating...' : 'Generate ITR'}\r\n                                        </button>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    ) : (\r\n                        <p>No tax history records found. Upload documents to get started!</p>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                // Display details of selected record\r\n                <div className=\"record-details-section\">\r\n                    <button onClick={handleBackToList} className=\"back-button\">← Back to History</button>\r\n                    <h4>Details for Record: {new Date(selectedRecord.upload_date).toLocaleDateString()}</h4>\r\n\r\n                    <div className=\"section-box\">\r\n                        <h5>Document Summary:</h5>\r\n                        <p>{selectedRecord.document_summary || 'N/A'}</p>\r\n                    </div>\r\n\r\n                    {selectedRecord.aggregated_data && (\r\n                        <div className=\"section-box\">\r\n                            <h5>Aggregated Data:</h5>\r\n                            <pre>{JSON.stringify(selectedRecord.aggregated_data, null, 2)}</pre>\r\n                        </div>\r\n                    )}\r\n\r\n                    {selectedRecord.computation_summary && (\r\n                        <div className=\"section-box\">\r\n                            <h5>Tax Computation Summary:</h5>\r\n                            <p><strong>Gross Total Income:</strong> {formatCurrency(selectedRecord.computation_summary.gross_total_income)}</p>\r\n                            <p><strong>Deductions:</strong> {formatCurrency(selectedRecord.computation_summary.total_deductions)}</p>\r\n                            <p><strong>Taxable Income:</strong> {formatCurrency(selectedRecord.computation_summary.taxable_income)}</p>\r\n                            <p><strong>Tax Payable:</strong> {formatCurrency(selectedRecord.computation_summary.tax_payable)}</p>\r\n                            <p><strong>TDS:</strong> {formatCurrency(selectedRecord.computation_summary.total_tds)}</p>\r\n                            <p><strong>Advance Tax:</strong> {formatCurrency(selectedRecord.computation_summary.total_advance_tax)}</p>\r\n                            <p><strong>Self-Assessment Tax:</strong> {formatCurrency(selectedRecord.computation_summary.total_self_assessment_tax)}</p>\r\n                            {selectedRecord.computation_summary.final_tax_liability && (\r\n                                <p><strong>Final Tax Liability:</strong> {formatCurrency(selectedRecord.computation_summary.final_tax_liability)}</p>\r\n                            )}\r\n                            {selectedRecord.computation_summary.refund_due && (\r\n                                <p className=\"refund-amount\"><strong>Refund Due:</strong> {formatCurrency(selectedRecord.computation_summary.refund_due)}</p>\r\n                            )}\r\n                            {selectedRecord.computation_summary.additional_tax_due && (\r\n                                <p className=\"tax-due-amount\"><strong>Additional Tax Due:</strong> {formatCurrency(selectedRecord.computation_summary.additional_tax_due)}</p>\r\n                            )}\r\n                            {selectedRecord.computation_summary.tax_regime_analysis && (\r\n                                <p><strong>Tax Regime Analysis:</strong> {selectedRecord.computation_summary.tax_regime_analysis}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {selectedRecord.suggestions_summary && (\r\n                        <div className=\"section-box\">\r\n                            <h5>AI Recommendations:</h5>\r\n                            <p>{selectedRecord.suggestions_summary.recommendations || 'N/A'}</p>\r\n                            {selectedRecord.suggestions_summary.missing_documents_info && (\r\n                                <p><strong>Missing Documents:</strong> {selectedRecord.suggestions_summary.missing_documents_info}</p>\r\n                            )}\r\n                            {selectedRecord.suggestions_summary.compliance_alerts && (\r\n                                <p><strong>Compliance Alerts:</strong> {selectedRecord.suggestions_summary.compliance_alerts}</p>\r\n                            )}\r\n                            {selectedRecord.suggestions_summary.tax_saving_opportunities && (\r\n                                <p><strong>Tax Saving Opportunities:</strong> {selectedRecord.suggestions_summary.tax_saving_opportunities}</p>\r\n                            )}\r\n                            {selectedRecord.suggestions_summary.tax_regime_analysis && (\r\n                                <p><strong>Tax Regime Analysis:</strong> {selectedRecord.suggestions_summary.tax_regime_analysis}</p>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n\r\n                    {selectedRecord.ml_prediction_summary ? (\r\n                        <div className=\"section-box\">\r\n                            <h5>ML Model Prediction:</h5>\r\n                            {selectedRecord.ml_prediction_summary.predicted_tax_regime && (\r\n                                <p><strong>Predicted Tax Regime:</strong> {selectedRecord.ml_prediction_summary.predicted_tax_regime}</p>\r\n                            )}\r\n                            <p><strong>Predicted Tax Liability:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_tax_liability)}</p>\r\n                            <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_refund_due)}</p>\r\n                            <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(selectedRecord.ml_prediction_summary.predicted_additional_due)}</p>\r\n                            {selectedRecord.ml_prediction_summary.notes && (\r\n                                <p><strong>Notes:</strong> {selectedRecord.ml_prediction_summary.notes}</p>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"section-box\">\r\n                            <p>No AI recommendations or ML predictions available for this record yet. These are generated when you click \"Get AI Suggestions & ML Predictions\" after uploading documents.</p>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaxHistory;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAOA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAaA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}