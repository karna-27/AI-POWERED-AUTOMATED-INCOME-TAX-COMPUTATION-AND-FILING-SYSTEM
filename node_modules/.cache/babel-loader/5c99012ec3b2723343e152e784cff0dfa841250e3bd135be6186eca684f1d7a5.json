{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\TaxCalculator\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaxCalculator = () => {\n  _s();\n  const [grossIncome, setGrossIncome] = useState('');\n  const [deductions, setDeductions] = useState('');\n  const [taxLiability, setTaxLiability] = useState(null);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const calculateTax = () => {\n    const gi = parseFloat(grossIncome);\n    const ded = parseFloat(deductions);\n    if (isNaN(gi) || isNaN(ded) || gi < 0 || ded < 0) {\n      setMessage('Please enter valid positive numbers for income and deductions.');\n      setMessageType('error');\n      setTaxLiability(null);\n      return;\n    }\n\n    // Simplified Indian Old Regime tax calculation (for demonstration)\n    const taxableIncome = Math.max(0, gi - ded);\n    let tax = 0;\n    if (taxableIncome <= 250000) {\n      tax = 0;\n    } else if (taxableIncome <= 500000) {\n      tax = (taxableIncome - 250000) * 0.05;\n    } else if (taxableIncome <= 1000000) {\n      tax = 12500 + (taxableIncome - 500000) * 0.20;\n    } else {\n      tax = 112500 + (taxableIncome - 1000000) * 0.30;\n    }\n\n    // Add 4% cess\n    tax += tax * 0.04;\n    setTaxLiability(tax);\n    setMessage('Tax calculated successfully!');\n    setMessageType('success');\n  };\n  const formatCurrency = value => {\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\n      return 'N/A';\n    }\n    return parseFloat(value).toLocaleString('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tax-calculator-container section-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"tax-uploader-title\",\n      children: \"Manual Tax Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"tax-calculator-description\",\n      children: \"Use this tool for a quick estimate of your tax liability based on simplified Indian tax slabs (Old Regime). For a precise calculation, please upload your documents.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"grossIncome\",\n        className: \"tax-uploader-label\",\n        children: \"Gross Income:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"grossIncome\",\n        className: \"tax-uploader-input\",\n        value: grossIncome,\n        onChange: e => setGrossIncome(e.target.value),\n        placeholder: \"e.g., 800000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"deductions\",\n        className: \"tax-uploader-label\",\n        children: \"Total Deductions (e.g., 80C, 80D, HRA):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"deductions\",\n        className: \"tax-uploader-input\",\n        value: deductions,\n        onChange: e => setDeductions(e.target.value),\n        placeholder: \"e.g., 150000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateTax,\n      className: \"tax-uploader-button\",\n      children: \"Calculate Tax\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tax-uploader-message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), taxLiability !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tax-calculation-result section-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Estimated Tax Liability:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"tax-due-amount\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatCurrency(taxLiability)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"explanation\",\n        children: \"(This is an estimate based on the Old Tax Regime and provided inputs. Actual tax liability may vary based on detailed income, deductions, and applicable tax laws.)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(TaxCalculator, \"mLIkH++xJy8pXbdjZFIC9AdtonI=\");\n_c = TaxCalculator;\nexport default TaxCalculator;\nvar _c;\n$RefreshReg$(_c, \"TaxCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaxCalculator","_s","grossIncome","setGrossIncome","deductions","setDeductions","taxLiability","setTaxLiability","message","setMessage","messageType","setMessageType","calculateTax","gi","parseFloat","ded","isNaN","taxableIncome","Math","max","tax","formatCurrency","value","undefined","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/TaxCalculator/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TaxCalculator = () => {\r\n  const [grossIncome, setGrossIncome] = useState('');\r\n  const [deductions, setDeductions] = useState('');\r\n  const [taxLiability, setTaxLiability] = useState(null);\r\n  const [message, setMessage] = useState('');\r\n  const [messageType, setMessageType] = useState('');\r\n\r\n  const calculateTax = () => {\r\n    const gi = parseFloat(grossIncome);\r\n    const ded = parseFloat(deductions);\r\n\r\n    if (isNaN(gi) || isNaN(ded) || gi < 0 || ded < 0) {\r\n      setMessage('Please enter valid positive numbers for income and deductions.');\r\n      setMessageType('error');\r\n      setTaxLiability(null);\r\n      return;\r\n    }\r\n\r\n    // Simplified Indian Old Regime tax calculation (for demonstration)\r\n    const taxableIncome = Math.max(0, gi - ded);\r\n    let tax = 0;\r\n\r\n    if (taxableIncome <= 250000) {\r\n      tax = 0;\r\n    } else if (taxableIncome <= 500000) {\r\n      tax = (taxableIncome - 250000) * 0.05;\r\n    } else if (taxableIncome <= 1000000) {\r\n      tax = 12500 + (taxableIncome - 500000) * 0.20;\r\n    } else {\r\n      tax = 112500 + (taxableIncome - 1000000) * 0.30;\r\n    }\r\n\r\n    // Add 4% cess\r\n    tax += tax * 0.04;\r\n\r\n    setTaxLiability(tax);\r\n    setMessage('Tax calculated successfully!');\r\n    setMessageType('success');\r\n  };\r\n\r\n  const formatCurrency = (value) => {\r\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n      return 'N/A';\r\n    }\r\n    return parseFloat(value).toLocaleString('en-IN', {\r\n      style: 'currency',\r\n      currency: 'INR',\r\n      minimumFractionDigits: 2,\r\n      maximumFractionDigits: 2,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tax-calculator-container section-box\">\r\n      <h2 className=\"tax-uploader-title\">Manual Tax Calculator</h2>\r\n      <p className=\"tax-calculator-description\">\r\n        Use this tool for a quick estimate of your tax liability based on simplified Indian tax slabs (Old Regime).\r\n        For a precise calculation, please upload your documents.\r\n      </p>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"grossIncome\" className=\"tax-uploader-label\">Gross Income:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"grossIncome\"\r\n          className=\"tax-uploader-input\"\r\n          value={grossIncome}\r\n          onChange={(e) => setGrossIncome(e.target.value)}\r\n          placeholder=\"e.g., 800000\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"deductions\" className=\"tax-uploader-label\">Total Deductions (e.g., 80C, 80D, HRA):</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"deductions\"\r\n          className=\"tax-uploader-input\"\r\n          value={deductions}\r\n          onChange={(e) => setDeductions(e.target.value)}\r\n          placeholder=\"e.g., 150000\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={calculateTax} className=\"tax-uploader-button\">\r\n        Calculate Tax\r\n      </button>\r\n\r\n      {message && (\r\n        <div className={`tax-uploader-message ${messageType}`}>\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      {taxLiability !== null && (\r\n        <div className=\"tax-calculation-result section-box\">\r\n          <h3>Estimated Tax Liability:</h3>\r\n          <p className=\"tax-due-amount\">\r\n            <strong>{formatCurrency(taxLiability)}</strong>\r\n          </p>\r\n          <p className=\"explanation\">\r\n            (This is an estimate based on the Old Tax Regime and provided inputs.\r\n            Actual tax liability may vary based on detailed income, deductions, and applicable tax laws.)\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaxCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}