{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\ProtectedRoute\\\\index.js\";\nimport React from 'react';\n// Correct import for react-router-dom v5\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  // Your authentication logic (e.g., checking localStorage for a token)\n  const isAuthenticated = localStorage.getItem('token') ? true : false;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this) :\n    /*#__PURE__*/\n    // Use Redirect instead of Navigate\n    _jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Redirect","jsxDEV","_jsxDEV","ProtectedRoute","component","Component","rest","isAuthenticated","localStorage","getItem","render","props","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/ProtectedRoute/index.js"],"sourcesContent":["import React from 'react';\r\n// Correct import for react-router-dom v5\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  // Your authentication logic (e.g., checking localStorage for a token)\r\n  const isAuthenticated = localStorage.getItem('token') ? true : false;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          // Use Redirect instead of Navigate\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAC5D;EACA,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK;EAEpE,oBACEP,OAAA,CAACH,KAAK;IAAA,GACAO,IAAI;IACRI,MAAM,EAAGC,KAAK,IACZJ,eAAe,gBACbL,OAAA,CAACG,SAAS;MAAA,GAAKM;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;IAAA;IAExB;IACAb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAE1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEN,CAAC;AAACE,EAAA,GAjBId,cAAc;AAmBpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}