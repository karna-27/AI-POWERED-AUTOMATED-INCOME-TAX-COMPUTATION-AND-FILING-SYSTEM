{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\LoginForm\\\\index.js\";\nimport React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { Redirect, Link } from 'react-router-dom'; // Import Link for navigation\nimport Header from '../Header';\nimport './index.css';\n\n// Corrected: Assuming WebsiteLogo.png is in your public folder\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst websiteLogoInForm = '/WebsiteLogo.png';\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      showSubmitError: false,\n      errorMsg: ''\n    };\n    this.onGetUsername = event => this.setState({\n      username: event.target.value\n    });\n    this.onGetPassword = event => this.setState({\n      password: event.target.value\n    });\n    this.onSubmitSuccess = jwtToken => {\n      const {\n        history\n      } = this.props;\n      Cookies.set('jwt_token', jwtToken, {\n        expires: 30,\n        path: '/'\n      });\n\n      // If onLogin prop is provided (e.g., from App.js), call it\n      if (this.props.onLogin) {\n        this.props.onLogin(jwtToken, this.state.username);\n      }\n      history.replace('/');\n    };\n    this.onSubmitFailure = errorMsg => {\n      this.setState({\n        showSubmitError: true,\n        errorMsg\n      });\n    };\n    this.onSubmitLoginForm = async event => {\n      event.preventDefault();\n      this.setState({\n        showSubmitError: false,\n        errorMsg: ''\n      }); // Clear previous errors\n      const {\n        username,\n        password\n      } = this.state;\n      const userDetails = {\n        username,\n        password\n      };\n      const loginApiUrl = 'http://127.0.0.1:5000/api/login';\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userDetails)\n      };\n      try {\n        const response = await fetch(loginApiUrl, options);\n        const data = await response.json();\n        if (response.ok === true) {\n          this.onSubmitSuccess(data.jwt_token);\n        } else {\n          this.onSubmitFailure(data.error_msg);\n        }\n      } catch (error) {\n        console.error('Login network error:', error);\n        this.onSubmitFailure('Network error. Could not connect to the server.');\n      }\n    };\n  }\n  render() {\n    const {\n      username,\n      password,\n      showSubmitError,\n      errorMsg\n    } = this.state;\n    const jwtToken = Cookies.get('jwt_token');\n    if (jwtToken !== undefined) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form-container\",\n          onSubmit: this.onSubmitLoginForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-logo-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: websiteLogoInForm,\n              alt: \"website logo\",\n              className: \"login-website-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-text\",\n              children: \"Garuda AI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"username\",\n            children: \"USERNAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"text\",\n            value: username,\n            onChange: this.onGetUsername,\n            placeholder: \"Enter your username\",\n            id: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            htmlFor: \"password\",\n            children: \"PASSWORD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"password\",\n            value: password,\n            onChange: this.onGetPassword,\n            placeholder: \"Enter your password\",\n            id: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"form-submit-button\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), showSubmitError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: [\"*\", errorMsg]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"register-prompt\",\n            children: [\"New user? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/api/register\",\n              children: \"Register here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default LoginForm;","map":{"version":3,"names":["React","Component","Cookies","Redirect","Link","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","websiteLogoInForm","LoginForm","constructor","args","state","username","password","showSubmitError","errorMsg","onGetUsername","event","setState","target","value","onGetPassword","onSubmitSuccess","jwtToken","history","props","set","expires","path","onLogin","replace","onSubmitFailure","onSubmitLoginForm","preventDefault","userDetails","loginApiUrl","options","method","headers","body","JSON","stringify","response","fetch","data","json","ok","jwt_token","error_msg","error","console","render","get","undefined","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","src","alt","htmlFor","type","onChange","placeholder","id"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/LoginForm/index.js"],"sourcesContent":["import React, {Component} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport {Redirect, Link} from 'react-router-dom' // Import Link for navigation\r\nimport Header from '../Header';\r\nimport './index.css';\r\n\r\n// Corrected: Assuming WebsiteLogo.png is in your public folder\r\nconst websiteLogoInForm = '/WebsiteLogo.png'; \r\n\r\nclass LoginForm extends Component {\r\n  state = {username: '', password: '', showSubmitError: false, errorMsg: ''}\r\n\r\n  onGetUsername = event => this.setState({username: event.target.value})\r\n\r\n  onGetPassword = event => this.setState({password: event.target.value})\r\n\r\n  onSubmitSuccess = jwtToken => {\r\n    const {history} = this.props\r\n\r\n    Cookies.set('jwt_token', jwtToken, {expires: 30, path: '/'})\r\n\r\n    // If onLogin prop is provided (e.g., from App.js), call it\r\n    if (this.props.onLogin) {\r\n      this.props.onLogin(jwtToken, this.state.username);\r\n    }\r\n    \r\n    history.replace('/')\r\n  }\r\n\r\n  onSubmitFailure = errorMsg => {\r\n    this.setState({showSubmitError: true, errorMsg})\r\n  }\r\n\r\n  onSubmitLoginForm = async event => {\r\n    event.preventDefault()\r\n    this.setState({ showSubmitError: false, errorMsg: '' }); // Clear previous errors\r\n    const {username, password} = this.state\r\n    const userDetails = {username, password}\r\n    const loginApiUrl = 'http://127.0.0.1:5000/api/login' \r\n    const options = {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      body: JSON.stringify(userDetails),\r\n    }\r\n    try {\r\n      const response = await fetch(loginApiUrl, options)\r\n      const data = await response.json()\r\n      if (response.ok === true) {\r\n        this.onSubmitSuccess(data.jwt_token)\r\n      } else {\r\n        this.onSubmitFailure(data.error_msg)\r\n      }\r\n    } catch (error) {\r\n        console.error('Login network error:', error);\r\n        this.onSubmitFailure('Network error. Could not connect to the server.');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {username, password, showSubmitError, errorMsg} = this.state\r\n    const jwtToken = Cookies.get('jwt_token')\r\n    if (jwtToken !== undefined) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    return (\r\n      <>\r\n        <Header />\r\n        <div className=\"login-container\">\r\n          <form\r\n            className=\"login-form-container\"\r\n            onSubmit={this.onSubmitLoginForm}\r\n          >\r\n            <div className=\"form-logo-container\">\r\n              <img src={websiteLogoInForm} alt=\"website logo\" className=\"login-website-logo\" />\r\n              <span className=\"logo-text\">Garuda AI</span>\r\n            </div>\r\n            <label className=\"form-label\" htmlFor=\"username\">\r\n              USERNAME\r\n            </label>\r\n            <br />\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={this.onGetUsername}\r\n              placeholder=\"Enter your username\"\r\n              id=\"username\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <label className=\"form-label\" htmlFor=\"password\">\r\n              PASSWORD\r\n            </label>\r\n            <br />\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={this.onGetPassword}\r\n              placeholder=\"Enter your password\"\r\n              id=\"password\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <button className=\"form-submit-button\" type=\"submit\">\r\n              Login\r\n            </button>\r\n            {showSubmitError && <p className=\"error-message\">*{errorMsg}</p>}\r\n            {/* NEW: Message for new users */}\r\n            <p className=\"register-prompt\">\r\n    New user? <Link to=\"/api/register\">Register here</Link> {/* <--- CHANGE THIS LINE */}\r\n</p>\r\n          </form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}