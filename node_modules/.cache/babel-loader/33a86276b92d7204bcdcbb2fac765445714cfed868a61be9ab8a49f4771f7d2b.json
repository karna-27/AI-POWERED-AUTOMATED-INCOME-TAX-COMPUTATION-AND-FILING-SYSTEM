{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\LoginForm\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom'; // Import Link for navigation to Register\nimport './index.css'; // Import LoginForm specific CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  onLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(''); // For success/error messages\n  const [messageType, setMessageType] = useState(''); // 'success', 'error'\n  const history = useHistory();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setMessage(''); // Clear previous messages\n    setMessageType('');\n    setLoading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/api/login', {\n        username,\n        password\n      });\n      if (response.data.jwt_token) {\n        onLogin(response.data.jwt_token); // Call the onLogin function passed from App.js\n        setMessage('Login successful! Redirecting to dashboard...');\n        setMessageType('success');\n        setTimeout(() => {\n          history.push('/dashboard'); // Redirect to dashboard\n        }, 1500);\n      } else {\n        setMessage(response.data.message || 'Login failed. Please try again.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      if (error.response) {\n        setMessage(error.response.data.error_msg || 'Invalid credentials or server error.');\n      } else {\n        setMessage('Network error. Please check your connection.');\n      }\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-title\",\n        children: \"Login to GarudaTax AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true,\n            className: \"form-input\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"form-input\",\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          disabled: loading,\n          children: loading ? 'Logging In...' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${messageType}`,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"register-link-text\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"register-link\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"Zravmriq4I4g4OkdfMdLW1VZWLc=\", false, function () {\n  return [useHistory];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useHistory","Link","jsxDEV","_jsxDEV","LoginForm","onLogin","_s","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","messageType","setMessageType","history","handleSubmit","event","preventDefault","response","post","data","jwt_token","setTimeout","push","error","console","error_msg","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","e","target","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/LoginForm/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, Link } from 'react-router-dom'; // Import Link for navigation to Register\r\nimport './index.css'; // Import LoginForm specific CSS\r\n\r\nconst LoginForm = ({ onLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState(''); // For success/error messages\r\n  const [messageType, setMessageType] = useState(''); // 'success', 'error'\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setMessage(''); // Clear previous messages\r\n    setMessageType('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5000/api/login', {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      if (response.data.jwt_token) {\r\n        onLogin(response.data.jwt_token); // Call the onLogin function passed from App.js\r\n        setMessage('Login successful! Redirecting to dashboard...');\r\n        setMessageType('success');\r\n        setTimeout(() => {\r\n          history.push('/dashboard'); // Redirect to dashboard\r\n        }, 1500);\r\n      } else {\r\n        setMessage(response.data.message || 'Login failed. Please try again.');\r\n        setMessageType('error');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      if (error.response) {\r\n        setMessage(error.response.data.error_msg || 'Invalid credentials or server error.');\r\n      } else {\r\n        setMessage('Network error. Please check your connection.');\r\n      }\r\n      setMessageType('error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h2 className=\"login-title\">Login to GarudaTax AI</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"username\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n              className=\"form-input\"\r\n              disabled={loading}\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"login-button\" disabled={loading}>\r\n            {loading ? 'Logging In...' : 'Login'}\r\n          </button>\r\n        </form>\r\n        {message && (\r\n          <div className={`message ${messageType}`}>\r\n            {message}\r\n          </div>\r\n        )}\r\n        <p className=\"register-link-text\">\r\n          Don't have an account? <Link to=\"/register\" className=\"register-link\">Register here</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}