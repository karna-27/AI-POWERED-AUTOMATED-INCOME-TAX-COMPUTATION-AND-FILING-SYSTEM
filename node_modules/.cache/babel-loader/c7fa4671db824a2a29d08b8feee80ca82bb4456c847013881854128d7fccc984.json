{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Cookies from 'js-cookie';\n\n// const TaxUploader = () => {\n//     const [selectedFiles, setSelectedFiles] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary, aggregated_data, computation_summary)\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\n\n//     // List of common document types for the dropdown\n//     const documentTypes = [\n//         'Auto-Detect', // Default option, AI attempts to detect\n//         'Form 16',\n//         'Bank Statement',\n//         'Form 26AS',\n//         'Salary Slip',\n//         'Investment Proof',\n//         'Home Loan Statement',\n//         'Other Document',\n//     ];\n\n//     // Helper function to safely format currency values\n//     const formatCurrency = (value) => {\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\n//             return 'N/A';\n//         }\n//         return parseFloat(value).toLocaleString('en-IN', {\n//             style: 'currency',\n//             currency: 'INR',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2,\n//         });\n//     };\n\n//     const handleFileChange = (event) => {\n//         setSelectedFiles(Array.from(event.target.files));\n//         // Clear all previous results/messages on new file selection\n//         setMessage('');\n//         setMessageType('');\n//         setUploadResult(null);\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n//     };\n\n//     const handleDocumentTypeChange = (event) => {\n//         setDocumentTypeHint(event.target.value);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         if (selectedFiles.length === 0) {\n//             setMessage('Please select at least one file.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setMessage('Uploading and processing documents with AI...');\n//         setMessageType('info');\n//         setUploadResult(null); // Clear previous results\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n\n//         const formData = new FormData();\n//         selectedFiles.forEach(file => {\n//             formData.append('documents', file);\n//         });\n//         formData.append('document_type', documentTypeHint);\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 }\n//             };\n//             if (jwt_token) {\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\n//             }\n\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\n\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\n//                 setMessageType('success');\n//                 setUploadResult(response.data); // Store the entire response for display\n//                 setSelectedFiles([]);\n//                 document.getElementById('file-input').value = '';\n//             } else {\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Upload error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token');\n//                     window.location.href = '/login';\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleGetSuggestions = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to get suggestions.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingSuggestions(true);\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\n//         setMessageType('info');\n//         setSuggestionsResult(null); // Clear previous suggestions\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 }\n//             };\n\n//             const payload = {\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\n//             };\n\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\n\n//             if (response.data.status === 'success') {\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\n//                 setMessageType('success');\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\n//             } else {\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Suggestions error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token');\n//                     window.location.href = '/login';\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingSuggestions(false);\n//         }\n//     };\n\n//     const handleGenerateITRForm = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to generate ITR form.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingITR(true);\n//         setMessage('Generating ITR form...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 },\n//                 responseType: 'blob', // Important for receiving a file\n//             };\n\n//             // Fetch the ITR form using the record_id obtained after saving\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\n\n//             if (response.status === 200) {\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\n//                 const downloadUrl = window.URL.createObjectURL(blob);\n//                 const contentDisposition = response.headers['content-disposition'];\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\n\n//                 if (contentDisposition) {\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n//                     if (filenameMatch && filenameMatch[1]) {\n//                         filename = filenameMatch[1];\n//                     }\n//                 }\n\n//                 const link = document.createElement('a');\n//                 link.href = downloadUrl;\n//                 link.setAttribute('download', filename);\n//                 document.body.appendChild(link);\n//                 link.click();\n//                 link.remove();\n//                 window.URL.revokeObjectURL(downloadUrl);\n\n//                 setMessage('ITR form generated and downloaded successfully!');\n//                 setMessageType('success');\n//             } else {\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('ITR generation error:', error);\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\n//                 const reader = new FileReader();\n//                 reader.onload = () => {\n//                     try {\n//                         const errorJson = JSON.parse(reader.result);\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\n//                     } catch (e) {\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\n//                     }\n//                 };\n//                 reader.readAsText(error.response.data);\n//             } else {\n//                 setMessage('Network error or server unavailable during ITR form generation.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingITR(false);\n//         }\n//     };\n\n//     // Helper function to render extracted fields dynamically\n//     const renderExtractedFields = (fields) => {\n//         if (!fields) return null;\n\n//         const fieldOrder = [\n//             // Personal & Employer Info\n//             \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\",\n//             \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\n//             // Financial Years & Period\n//             \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\n//             // Income\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\n//             \"total_exempt_allowances\",\n//             \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\",\n//             \"gross_total_income_as_per_document\",\n//             // Deductions\n//             \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\n//             \"epf_contribution\", \"esi_contribution\",\n//             // Tax Paid\n//             \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\",\n//             \"advance_tax\", \"self_assessment_tax\",\n//             // Other Tax Info\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\",\n//             // Bank Statement Details\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\n//             \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"\n//         ];\n\n//         // Define display names for better readability\n//         const displayNames = {\n//             \"name_of_employee\": \"Name of Employee\",\n//             \"pan_of_employee\": \"PAN of Employee\",\n//             \"date_of_birth\": \"Date of Birth\",\n//             \"gender\": \"Gender\",\n//             \"residential_status\": \"Residential Status\",\n//             \"employer_name\": \"Employer Name\",\n//             \"employer_address\": \"Employer Address\",\n//             \"pan_of_deductor\": \"PAN of Deductor\",\n//             \"tan_of_deductor\": \"TAN of Deductor\",\n//             \"designation_of_employee\": \"Designation\",\n//             \"financial_year\": \"Financial Year\",\n//             \"assessment_year\": \"Assessment Year\",\n//             \"period_from\": \"Period From\",\n//             \"period_to\": \"Period To\",\n//             \"statement_start_date\": \"Statement Start Date\",\n//             \"statement_end_date\": \"Statement End Date\",\n//             \"gross_salary_total\": \"Gross Salary Total\",\n//             \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\n//             \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\n//             \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\n//             \"basic_salary\": \"Basic Salary\",\n//             \"hra_received\": \"HRA Received\",\n//             \"conveyance_allowance\": \"Conveyance Allowance\",\n//             \"transport_allowance\": \"Transport Allowance\",\n//             \"overtime_pay\": \"Overtime Pay\",\n//             \"total_exempt_allowances\": \"Total Exempt Allowances\",\n//             \"income_from_house_property\": \"Income from House Property\",\n//             \"income_from_other_sources\": \"Income from Other Sources\",\n//             \"capital_gains_long_term\": \"Long Term Capital Gains\",\n//             \"capital_gains_short_term\": \"Short Term Capital Gains\",\n//             \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\n//             \"professional_tax\": \"Professional Tax\",\n//             \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\n//             \"deduction_80c\": \"Deduction 80C\",\n//             \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\n//             \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\n//             \"deduction_80ccc\": \"Deduction 80CCC\",\n//             \"deduction_80ccd\": \"Deduction 80CCD\",\n//             \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\n//             \"deduction_80d\": \"Deduction 80D\",\n//             \"deduction_80g\": \"Deduction 80G\",\n//             \"deduction_80tta\": \"Deduction 80TTA\",\n//             \"deduction_80ttb\": \"Deduction 80TTB\",\n//             \"deduction_80e\": \"Deduction 80E\",\n//             \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\n//             \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\n//             \"epf_contribution\": \"EPF Contribution\",\n//             \"esi_contribution\": \"ESI Contribution\",\n//             \"total_tds\": \"Total TDS\",\n//             \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\n//             \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\n//             \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\n//             \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\n//             \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\n//             \"advance_tax\": \"Advance Tax\",\n//             \"self_assessment_tax\": \"Self-Assessment Tax\",\n//             \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\n//             \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\n//             \"refund_status_as_per_document\": \"Refund Status (Doc)\",\n//             \"tax_regime_chosen\": \"Tax Regime Chosen\",\n//             \"net_amount_payable\": \"Net Amount Payable\",\n//             \"days_present\": \"Days Present\",\n//             \"overtime_hours\": \"Overtime Hours\",\n//             \"account_holder_name\": \"Account Holder Name\",\n//             \"account_number\": \"Account Number\",\n//             \"ifsc_code\": \"IFSC Code\",\n//             \"bank_name\": \"Bank Name\",\n//             \"branch_address\": \"Branch Address\",\n//             \"opening_balance\": \"Opening Balance\",\n//             \"closing_balance\": \"Closing Balance\",\n//             \"total_deposits\": \"Total Deposits\",\n//             \"total_withdrawals\": \"Total Withdrawals\"\n//         };\n\n//         return (\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\n//                 {fieldOrder.map(key => {\n//                     let value = fields[key];\n//                     // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\n//                     // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\n//                     if (value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null')) {\n//                         return null;\n//                     }\n\n//                     // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\n//                     if (typeof value === 'number') {\n//                         if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || \n//                             key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') ||\n//                             key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') ||\n//                             key.includes('overtime_pay') || key.includes('net_amount_payable')) {\n//                             // Display 0.0 for actual zero financial values, otherwise format currency\n//                             value = formatCurrency(value);\n//                         } else {\n//                             // For other numeric fields, just display the number directly\n//                             value = value.toString();\n//                         }\n//                     }\n\n//                     // Special handling for transaction_summary if it's an array and not empty\n//                     if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\n//                         return (\n//                             <li key={key}>\n//                                 <strong>{displayNames[key] || key}:</strong>\n//                                 <pre className=\"extracted-fields-preview mt-2\">\n//                                     {JSON.stringify(value.map(tx => ({\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\", // Format date\n//                                         description: tx.description,\n//                                         amount: formatCurrency(tx.amount)\n//                                     })), null, 2)}\n//                                 </pre>\n//                             </li>\n//                         );\n//                     }\n\n//                     // Filter out empty arrays as well\n//                     if (Array.isArray(value) && value.length === 0) {\n//                         return null;\n//                     }\n\n//                     // Render other fields if their value is not \"null\" (string) or empty string\n//                     if (typeof value === 'string' && value.trim() === '') {\n//                         return null;\n//                     }\n\n//                     return (\n//                         <li key={key}>\n//                             <strong>{displayNames[key] || key}:</strong> {value}\n//                         </li>\n//                     );\n//                 })}\n//             </ul>\n//         );\n//     };\n\n//     return (\n//         <div className=\"tax-uploader-container section-box\">\n//             {/* Inlined CSS for styling the component */}\n//             <style>{`\n//                 /* General Body Styling */\n//                 body {\n//                     font-family: 'Inter', sans-serif;\n//                     background-color: #f0f2f5;\n//                     margin: 0;\n//                     padding: 20px;\n//                     color: #333;\n//                     line-height: 1.6;\n//                 }\n\n//                 /* Section Box Styling */\n//                 .section-box {\n//                     background-color: #ffffff;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n//                     margin-bottom: 25px;\n//                     border: 1px solid #e0e0e0;\n//                 }\n\n//                 /* Tax Uploader Container */\n//                 .tax-uploader-container {\n//                     max-width: 900px;\n//                     margin: 30px auto;\n//                     padding: 30px;\n//                     background-color: #fff;\n//                     border-radius: 15px;\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n//                     border: 1px solid #d0d0d0;\n//                 }\n\n//                 .tax-uploader-title {\n//                     text-align: center;\n//                     color: #2c3e50;\n//                     margin-bottom: 30px;\n//                     font-size: 2.2em;\n//                     font-weight: 700;\n//                     letter-spacing: -0.5px;\n//                 }\n\n//                 /* Form Group */\n//                 .tax-uploader-form-group {\n//                     margin-bottom: 25px;\n//                 }\n\n//                 .tax-uploader-label {\n//                     display: block;\n//                     margin-bottom: 10px;\n//                     font-weight: 600;\n//                     color: #34495e;\n//                     font-size: 1.1em;\n//                 }\n\n//                 .tax-uploader-file-input {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 12px;\n//                     border: 1px solid #ced4da;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     color: #495057;\n//                     background-color: #f8f9fa;\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n//                 }\n\n//                 .tax-uploader-file-input:focus {\n//                     border-color: #80bdff;\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n//                     outline: none;\n//                 }\n\n//                 .selected-files-text {\n//                     margin-top: 10px;\n//                     font-size: 0.95em;\n//                     color: #555;\n//                     font-style: italic;\n//                 }\n\n//                 /* Buttons */\n//                 .tax-uploader-button {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 14px 20px;\n//                     background-color: #007bff;\n//                     color: white;\n//                     border: none;\n//                     border-radius: 8px;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                     cursor: pointer;\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\n//                     margin-top: 20px;\n//                 }\n\n//                 .tax-uploader-button:hover {\n//                     background-color: #0056b3;\n//                     transform: translateY(-2px);\n//                 }\n\n//                 .tax-uploader-button:disabled {\n//                     background-color: #a0c9f1;\n//                     cursor: not-allowed;\n//                     box-shadow: none;\n//                     transform: none;\n//                 }\n\n//                 .action-buttons-container {\n//                     display: flex;\n//                     flex-wrap: wrap;\n//                     gap: 15px;\n//                     margin-top: 30px;\n//                     justify-content: center;\n//                 }\n\n//                 .action-buttons-container .tax-uploader-button {\n//                     flex: 1;\n//                     min-width: 250px;\n//                     margin: 0; /* Override default margin */\n//                 }\n\n//                 .get-suggestions-button {\n//                     background-color: #28a745;\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\n//                 }\n\n//                 .get-suggestions-button:hover {\n//                     background-color: #218838;\n//                 }\n\n//                 .generate-itr-button {\n//                     background-color: #6c757d;\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\n//                 }\n\n//                 .generate-itr-button:hover {\n//                     background-color: #5a6268;\n//                 }\n\n//                 /* Loading Spinner */\n//                 .tax-uploader-loading {\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                     margin-top: 25px;\n//                     font-size: 1.1em;\n//                     color: #007bff;\n//                     font-weight: 500;\n//                 }\n\n//                 .tax-uploader-spinner {\n//                     border: 4px solid #f3f3f3;\n//                     border-top: 4px solid #007bff;\n//                     border-radius: 50%;\n//                     width: 24px;\n//                     height: 24px;\n//                     animation: spin 1s linear infinite;\n//                     margin-right: 10px;\n//                 }\n\n//                 @keyframes spin {\n//                     0% { transform: rotate(0deg); }\n//                     100% { transform: rotate(360deg); }\n//                 }\n\n//                 /* Messages */\n//                 .tax-uploader-message {\n//                     padding: 15px;\n//                     margin-top: 25px;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     font-weight: 500;\n//                     text-align: center;\n//                 }\n\n//                 .tax-uploader-message.info {\n//                     background-color: #e7f3ff;\n//                     color: #0056b3;\n//                     border: 1px solid #b3d7ff;\n//                 }\n\n//                 .tax-uploader-message.success {\n//                     background-color: #d4edda;\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                 }\n\n//                 .tax-uploader-message.error {\n//                     background-color: #f8d7da;\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                 }\n\n//                 /* Tax Summary Output */\n//                 .tax-summary-output {\n//                     margin-top: 40px;\n//                     background-color: #f9f9f9;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\n//                     border: 1px solid #eee;\n//                 }\n\n//                 .tax-summary-output h3 {\n//                     color: #2c3e50;\n//                     margin-bottom: 25px;\n//                     text-align: center;\n//                     font-size: 2em;\n//                     font-weight: 700;\n//                 }\n\n//                 .document-processing-summary-section,\n//                 .aggregated-financial-data-section,\n//                 .final-tax-computation-section,\n//                 .suggestions-output .section-box {\n//                     margin-top: 20px;\n//                     padding: 20px;\n//                     background-color: #ffffff;\n//                     border-radius: 10px;\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n//                     border: 1px solid #e9ecef;\n//                 }\n\n//                 .section-title {\n//                     color: #34495e;\n//                     font-size: 1.6em;\n//                     margin-bottom: 20px;\n//                     border-bottom: 2px solid #f0f2f5;\n//                     padding-bottom: 10px;\n//                     text-align: center;\n//                 }\n\n//                 .document-status-item {\n//                     background-color: #fdfdfd;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     margin-bottom: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\n//                 }\n\n//                 .document-status-item p {\n//                     margin: 5px 0;\n//                     font-size: 0.95em;\n//                     color: #444;\n//                 }\n\n//                 .document-status-item strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .status-success {\n//                     color: #28a745;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-warning {\n//                     color: #ffc107;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-error {\n//                     color: #dc3545;\n//                     font-weight: 700;\n//                 }\n\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\n//                     background-color: #e9ecef;\n//                     border: 1px solid #dee2e6;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n//                     font-size: 0.85em;\n//                     white-space: pre-wrap; /* Ensures text wraps */\n//                     word-break: break-all; /* Breaks words if necessary */\n//                     max-height: 200px; /* Limit height for long outputs */\n//                     overflow-y: auto; /* Add scroll for overflow */\n//                 }\n\n//                 .income-details-section,\n//                 .deductions-section,\n//                 .taxation-summary-section {\n//                     margin-bottom: 25px;\n//                     padding: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     border-radius: 8px;\n//                     background-color: #fdfdfd;\n//                 }\n\n//                 .income-details-section h5,\n//                 .deductions-section h5,\n//                 .taxation-summary-section h5 {\n//                     color: #007bff;\n//                     font-size: 1.3em;\n//                     margin-bottom: 15px;\n//                     border-bottom: 1px solid #e0e0e0;\n//                     padding-bottom: 8px;\n//                 }\n\n//                 .income-details-section p,\n//                 .deductions-section p,\n//                 .taxation-summary-section p {\n//                     margin: 8px 0;\n//                     font-size: 0.98em;\n//                     color: #333;\n//                 }\n\n//                 .computation-detail {\n//                     margin-bottom: 10px;\n//                     padding-bottom: 5px;\n//                     border-bottom: 1px dashed #e9ecef;\n//                 }\n\n//                 .computation-detail:last-child {\n//                     border-bottom: none;\n//                 }\n\n//                 .computation-detail strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .final-amount-box {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\n//                     border: 1px solid #c3e6cb;\n//                     text-align: center;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                 }\n\n//                 .final-amount-box .tax-due-amount {\n//                     background-color: #f8d7da; /* Light red for tax due */\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .final-amount-box .refund-amount {\n//                     background-color: #d4edda; /* Light green for refund */\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .computation-notes {\n//                     margin-top: 20px;\n//                     padding: 10px;\n//                     background-color: #f0f8ff;\n//                     border: 1px solid #d1e7fd;\n//                     border-radius: 8px;\n//                     font-size: 0.9em;\n//                     color: #444;\n//                     font-style: italic;\n//                 }\n\n//                 .highlight-regime {\n//                     font-weight: bold;\n//                     color: #007bff;\n//                 }\n\n//                 /* Suggestions specific styling */\n//                 .suggestions-list {\n//                     list-style-type: disc;\n//                     margin-left: 20px;\n//                     padding-left: 0;\n//                 }\n\n//                 .suggestions-list li {\n//                     margin-bottom: 8px;\n//                     color: #333;\n//                 }\n\n//                 .gemini-regime-analysis {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     background-color: #e6f7ff;\n//                     border: 1px solid #91d5ff;\n//                     border-radius: 8px;\n//                 }\n\n//                 .gemini-regime-analysis h4 {\n//                     color: #0056b3;\n//                     margin-bottom: 10px;\n//                 }\n\n//                 /* Responsive Adjustments */\n//                 @media (max-width: 768px) {\n//                     .tax-uploader-container {\n//                         margin: 20px 10px;\n//                         padding: 20px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.8em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         padding: 12px 15px;\n//                         font-size: 1em;\n//                     }\n\n//                     .action-buttons-container {\n//                         flex-direction: column;\n//                         gap: 10px;\n//                     }\n\n//                     .action-buttons-container .tax-uploader-button {\n//                         min-width: unset;\n//                     }\n\n//                     .tax-summary-output h3 {\n//                         font-size: 1.6em;\n//                     }\n\n//                     .section-title {\n//                         font-size: 1.4em;\n//                     }\n\n//                     .income-details-section h5,\n//                     .deductions-section h5,\n//                     .taxation-summary-section h5 {\n//                         font-size: 1.1em;\n//                     }\n//                 }\n\n//                 @media (max-width: 480px) {\n//                     body {\n//                         padding: 10px;\n//                     }\n\n//                     .tax-uploader-container {\n//                         margin: 10px;\n//                         padding: 15px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.5em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         font-size: 0.9em;\n//                         padding: 10px 12px;\n//                     }\n\n//                     .tax-uploader-message {\n//                         font-size: 0.9em;\n//                         padding: 10px;\n//                     }\n//                 }\n//             `}</style>\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\n//             <form onSubmit={handleSubmit}>\n//                 {/* Document Type Selection */}\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\n//                         Specify Document Type (Optional, for better accuracy):\n//                     </label>\n//                     <select\n//                         id=\"documentType\"\n//                         value={documentTypeHint}\n//                         onChange={handleDocumentTypeChange}\n//                         className=\"tax-uploader-file-input\"\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {documentTypes.map(type => (\n//                             <option key={type} value={type}>{type}</option>\n//                         ))}\n//                     </select>\n//                 </div>\n\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\n//                     <input\n//                         id=\"file-input\"\n//                         type=\"file\"\n//                         multiple\n//                         onChange={handleFileChange}\n//                         className=\"tax-uploader-file-input\"\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\n//                     />\n//                     {selectedFiles.length > 0 && (\n//                         <p className=\"selected-files-text\">\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\n//                         </p>\n//                     )}\n//                 </div>\n\n//                 <button\n//                     type=\"submit\"\n//                     className=\"tax-uploader-button\"\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\n//                 >\n//                     {loading ? (\n//                         <>\n//                             <div className=\"tax-uploader-spinner\"></div>\n//                             Processing with AI...\n//                         </>\n//                     ) : (\n//                         'Upload & Process Documents'\n//                     )}\n//                 </button>\n//             </form>\n\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\n//                 <div className=\"tax-uploader-loading\">\n//                     <div className=\"tax-uploader-spinner\"></div>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\n//                 <div className={`tax-uploader-message ${messageType}`}>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {/* Action buttons appear only after initial document processing is successful */}\n//             {uploadResult && uploadResult.record_id && !loading && (\n//                 <div className=\"action-buttons-container\">\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGetSuggestions}\n//                         className=\"tax-uploader-button get-suggestions-button\"\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\n//                     </button>\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGenerateITRForm}\n//                         className=\"tax-uploader-button generate-itr-button\"\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\n//                     >\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\n//                     </button>\n//                 </div>\n//             )}\n\n//             {/* Display Document Processing Summary (from initial upload) */}\n//             {uploadResult && uploadResult.document_processing_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\n//                     <div className=\"document-processing-summary-section section-box\">\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\n//                             return (\n//                                 <div key={index} className=\"document-status-item\">\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\n//                                         <p><strong>Extracted Fields:</strong>\n//                                             <pre className=\"extracted-fields-preview\">\n//                                                 {renderExtractedFields(doc.extracted_fields)}\n//                                             </pre>\n//                                         </p>\n//                                     )}\n//                                     {doc.extracted_raw_text && (\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\n//                                     )}\n//                                 </div>\n//                             );\n//                         })}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\n\n//                     <div className=\"aggregated-financial-data-section section-box\">\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\n//                         <div className=\"income-details-section\">\n//                             <h5>Income Details</h5>\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? uploadResult.aggregated_financial_data.date_of_birth : 'N/A'}</p>\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p>\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\n//                         </div>\n//                         <div className=\"deductions-section\">\n//                             <h5>Deductions Claimed</h5>\n//                             {uploadResult.aggregated_financial_data.standard_deduction > 0 && \n//                                 <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.professional_tax > 0 &&\n//                                 <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\n//                                 <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80C > 0 &&\n//                                 <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80CCD1B > 0 &&\n//                                 <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80D > 0 &&\n//                                 <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80G > 0 &&\n//                                 <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80TTA > 0 &&\n//                                 <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80TTB > 0 &&\n//                                 <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\n//                             }\n//                             {uploadResult.aggregated_financial_data.deduction_80E > 0 &&\n//                                 <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\n//                             }\n//                             <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_deductions)}</p>\n//                         </div>\n//                         <div className=\"taxation-summary-section\">\n//                             <h5>Tax Payments & Regime</h5>\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p>\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\n//                         </div>\n//                     </div>\n//                     <div className=\"final-tax-computation-section section-box\">\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\n//                         {uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && (\n//                             <div className=\"computation-details-list\">\n//                                 <h5>Calculation Steps:</h5>\n//                                 <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\n//                                     {uploadResult.final_tax_computation_summary.calculation_details.map((detail, idx) => (\n//                                         <li key={idx} className=\"computation-detail-item\">{detail}</li>\n//                                     ))}\n//                                 </ul>\n//                             </div>\n//                         )}\n//                         <div className=\"final-amount-box\">\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\n//                             <p><strong>Estimated Tax Payable:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\n//                             {uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && (\n//                                 <p className=\"refund-amount\">\n//                                     <strong>Refund Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)}\n//                                 </p>\n//                             )}\n//                             {uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && (\n//                                 <p className=\"tax-due-amount\">\n//                                     <strong>Additional Tax Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)}\n//                                 </p>\n//                             )}\n//                         </div>\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\n//                             <p className=\"computation-notes\">\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\n//                             </p>\n//                         )}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\n//             {suggestionsResult && !isGeneratingSuggestions && (\n//                 <div className=\"suggestions-output tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\n//                     <div className=\"section-box\">\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\n//                             <>\n//                                 <h4>Based on Gemini AI:</h4>\n//                                 <ul className=\"suggestions-list\">\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\n//                                         <li key={index}>{suggestion}</li>\n//                                     ))}\n//                                 </ul>\n//                             </>\n//                         ) : (\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\n//                         )}\n//                         {suggestionsResult.gemini_regime_analysis && (\n//                             <div className=\"gemini-regime-analysis\">\n//                                 <h4>Gemini's Regime Analysis:</h4>\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\n//                             </div>\n//                         )}\n//                         {suggestionsResult.ml_prediction_summary && (\n//                             <>\n//                                 <h4>ML Model Prediction:</h4>\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\n//                                 )}\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\n//                                 )}\n//                             </>\n//                         )}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default TaxUploader;","map":{"version":3,"names":[],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/TaxUploader/index.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n\r\n// const TaxUploader = () => {\r\n//     const [selectedFiles, setSelectedFiles] = useState([]);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary, aggregated_data, computation_summary)\r\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\r\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\r\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\r\n\r\n//     // List of common document types for the dropdown\r\n//     const documentTypes = [\r\n//         'Auto-Detect', // Default option, AI attempts to detect\r\n//         'Form 16',\r\n//         'Bank Statement',\r\n//         'Form 26AS',\r\n//         'Salary Slip',\r\n//         'Investment Proof',\r\n//         'Home Loan Statement',\r\n//         'Other Document',\r\n//     ];\r\n\r\n//     // Helper function to safely format currency values\r\n//     const formatCurrency = (value) => {\r\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n//             return 'N/A';\r\n//         }\r\n//         return parseFloat(value).toLocaleString('en-IN', {\r\n//             style: 'currency',\r\n//             currency: 'INR',\r\n//             minimumFractionDigits: 2,\r\n//             maximumFractionDigits: 2,\r\n//         });\r\n//     };\r\n\r\n//     const handleFileChange = (event) => {\r\n//         setSelectedFiles(Array.from(event.target.files));\r\n//         // Clear all previous results/messages on new file selection\r\n//         setMessage('');\r\n//         setMessageType('');\r\n//         setUploadResult(null);\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n//     };\r\n\r\n//     const handleDocumentTypeChange = (event) => {\r\n//         setDocumentTypeHint(event.target.value);\r\n//     };\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         if (selectedFiles.length === 0) {\r\n//             setMessage('Please select at least one file.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setLoading(true);\r\n//         setMessage('Uploading and processing documents with AI...');\r\n//         setMessageType('info');\r\n//         setUploadResult(null); // Clear previous results\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n\r\n//         const formData = new FormData();\r\n//         selectedFiles.forEach(file => {\r\n//             formData.append('documents', file);\r\n//         });\r\n//         formData.append('document_type', documentTypeHint);\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'multipart/form-data',\r\n//                 }\r\n//             };\r\n//             if (jwt_token) {\r\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\r\n//             }\r\n\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\r\n\r\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\r\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\r\n//                 setMessageType('success');\r\n//                 setUploadResult(response.data); // Store the entire response for display\r\n//                 setSelectedFiles([]);\r\n//                 document.getElementById('file-input').value = '';\r\n//             } else {\r\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Upload error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token');\r\n//                     window.location.href = '/login';\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGetSuggestions = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to get suggestions.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingSuggestions(true);\r\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\r\n//         setMessageType('info');\r\n//         setSuggestionsResult(null); // Clear previous suggestions\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 }\r\n//             };\r\n\r\n//             const payload = {\r\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\r\n//             };\r\n\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\r\n\r\n//             if (response.data.status === 'success') {\r\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\r\n//                 setMessageType('success');\r\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\r\n//             } else {\r\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Suggestions error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token');\r\n//                     window.location.href = '/login';\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingSuggestions(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGenerateITRForm = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to generate ITR form.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingITR(true);\r\n//         setMessage('Generating ITR form...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 },\r\n//                 responseType: 'blob', // Important for receiving a file\r\n//             };\r\n            \r\n//             // Fetch the ITR form using the record_id obtained after saving\r\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\r\n\r\n//             if (response.status === 200) {\r\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\r\n//                 const downloadUrl = window.URL.createObjectURL(blob);\r\n//                 const contentDisposition = response.headers['content-disposition'];\r\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\r\n\r\n//                 if (contentDisposition) {\r\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\r\n//                     if (filenameMatch && filenameMatch[1]) {\r\n//                         filename = filenameMatch[1];\r\n//                     }\r\n//                 }\r\n                \r\n//                 const link = document.createElement('a');\r\n//                 link.href = downloadUrl;\r\n//                 link.setAttribute('download', filename);\r\n//                 document.body.appendChild(link);\r\n//                 link.click();\r\n//                 link.remove();\r\n//                 window.URL.revokeObjectURL(downloadUrl);\r\n\r\n//                 setMessage('ITR form generated and downloaded successfully!');\r\n//                 setMessageType('success');\r\n//             } else {\r\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\r\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('ITR generation error:', error);\r\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n//                 const reader = new FileReader();\r\n//                 reader.onload = () => {\r\n//                     try {\r\n//                         const errorJson = JSON.parse(reader.result);\r\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\r\n//                     } catch (e) {\r\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\r\n//                     }\r\n//                 };\r\n//                 reader.readAsText(error.response.data);\r\n//             } else {\r\n//                 setMessage('Network error or server unavailable during ITR form generation.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingITR(false);\r\n//         }\r\n//     };\r\n\r\n//     // Helper function to render extracted fields dynamically\r\n//     const renderExtractedFields = (fields) => {\r\n//         if (!fields) return null;\r\n\r\n//         const fieldOrder = [\r\n//             // Personal & Employer Info\r\n//             \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\",\r\n//             \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\r\n//             // Financial Years & Period\r\n//             \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\r\n//             // Income\r\n//             \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\r\n//             \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\r\n//             \"total_exempt_allowances\",\r\n//             \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\",\r\n//             \"gross_total_income_as_per_document\",\r\n//             // Deductions\r\n//             \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\r\n//             \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\r\n//             \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\r\n//             \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\r\n//             \"epf_contribution\", \"esi_contribution\",\r\n//             // Tax Paid\r\n//             \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\r\n//             \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\",\r\n//             \"advance_tax\", \"self_assessment_tax\",\r\n//             // Other Tax Info\r\n//             \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\r\n//             \"net_amount_payable\", \"days_present\", \"overtime_hours\",\r\n//             // Bank Statement Details\r\n//             \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\r\n//             \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"\r\n//         ];\r\n        \r\n//         // Define display names for better readability\r\n//         const displayNames = {\r\n//             \"name_of_employee\": \"Name of Employee\",\r\n//             \"pan_of_employee\": \"PAN of Employee\",\r\n//             \"date_of_birth\": \"Date of Birth\",\r\n//             \"gender\": \"Gender\",\r\n//             \"residential_status\": \"Residential Status\",\r\n//             \"employer_name\": \"Employer Name\",\r\n//             \"employer_address\": \"Employer Address\",\r\n//             \"pan_of_deductor\": \"PAN of Deductor\",\r\n//             \"tan_of_deductor\": \"TAN of Deductor\",\r\n//             \"designation_of_employee\": \"Designation\",\r\n//             \"financial_year\": \"Financial Year\",\r\n//             \"assessment_year\": \"Assessment Year\",\r\n//             \"period_from\": \"Period From\",\r\n//             \"period_to\": \"Period To\",\r\n//             \"statement_start_date\": \"Statement Start Date\",\r\n//             \"statement_end_date\": \"Statement End Date\",\r\n//             \"gross_salary_total\": \"Gross Salary Total\",\r\n//             \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\r\n//             \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\r\n//             \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\r\n//             \"basic_salary\": \"Basic Salary\",\r\n//             \"hra_received\": \"HRA Received\",\r\n//             \"conveyance_allowance\": \"Conveyance Allowance\",\r\n//             \"transport_allowance\": \"Transport Allowance\",\r\n//             \"overtime_pay\": \"Overtime Pay\",\r\n//             \"total_exempt_allowances\": \"Total Exempt Allowances\",\r\n//             \"income_from_house_property\": \"Income from House Property\",\r\n//             \"income_from_other_sources\": \"Income from Other Sources\",\r\n//             \"capital_gains_long_term\": \"Long Term Capital Gains\",\r\n//             \"capital_gains_short_term\": \"Short Term Capital Gains\",\r\n//             \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\r\n//             \"professional_tax\": \"Professional Tax\",\r\n//             \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\r\n//             \"deduction_80c\": \"Deduction 80C\",\r\n//             \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\r\n//             \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\r\n//             \"deduction_80ccc\": \"Deduction 80CCC\",\r\n//             \"deduction_80ccd\": \"Deduction 80CCD\",\r\n//             \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\r\n//             \"deduction_80d\": \"Deduction 80D\",\r\n//             \"deduction_80g\": \"Deduction 80G\",\r\n//             \"deduction_80tta\": \"Deduction 80TTA\",\r\n//             \"deduction_80ttb\": \"Deduction 80TTB\",\r\n//             \"deduction_80e\": \"Deduction 80E\",\r\n//             \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\r\n//             \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\r\n//             \"epf_contribution\": \"EPF Contribution\",\r\n//             \"esi_contribution\": \"ESI Contribution\",\r\n//             \"total_tds\": \"Total TDS\",\r\n//             \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\r\n//             \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\r\n//             \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\r\n//             \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\r\n//             \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\r\n//             \"advance_tax\": \"Advance Tax\",\r\n//             \"self_assessment_tax\": \"Self-Assessment Tax\",\r\n//             \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\r\n//             \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\r\n//             \"refund_status_as_per_document\": \"Refund Status (Doc)\",\r\n//             \"tax_regime_chosen\": \"Tax Regime Chosen\",\r\n//             \"net_amount_payable\": \"Net Amount Payable\",\r\n//             \"days_present\": \"Days Present\",\r\n//             \"overtime_hours\": \"Overtime Hours\",\r\n//             \"account_holder_name\": \"Account Holder Name\",\r\n//             \"account_number\": \"Account Number\",\r\n//             \"ifsc_code\": \"IFSC Code\",\r\n//             \"bank_name\": \"Bank Name\",\r\n//             \"branch_address\": \"Branch Address\",\r\n//             \"opening_balance\": \"Opening Balance\",\r\n//             \"closing_balance\": \"Closing Balance\",\r\n//             \"total_deposits\": \"Total Deposits\",\r\n//             \"total_withdrawals\": \"Total Withdrawals\"\r\n//         };\r\n        \r\n//         return (\r\n//             <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n//                 {fieldOrder.map(key => {\r\n//                     let value = fields[key];\r\n//                     // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\r\n//                     // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\r\n//                     if (value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null')) {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\r\n//                     if (typeof value === 'number') {\r\n//                         if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || \r\n//                             key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') ||\r\n//                             key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') ||\r\n//                             key.includes('overtime_pay') || key.includes('net_amount_payable')) {\r\n//                             // Display 0.0 for actual zero financial values, otherwise format currency\r\n//                             value = formatCurrency(value);\r\n//                         } else {\r\n//                             // For other numeric fields, just display the number directly\r\n//                             value = value.toString();\r\n//                         }\r\n//                     }\r\n\r\n//                     // Special handling for transaction_summary if it's an array and not empty\r\n//                     if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\r\n//                         return (\r\n//                             <li key={key}>\r\n//                                 <strong>{displayNames[key] || key}:</strong>\r\n//                                 <pre className=\"extracted-fields-preview mt-2\">\r\n//                                     {JSON.stringify(value.map(tx => ({\r\n//                                         date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\", // Format date\r\n//                                         description: tx.description,\r\n//                                         amount: formatCurrency(tx.amount)\r\n//                                     })), null, 2)}\r\n//                                 </pre>\r\n//                             </li>\r\n//                         );\r\n//                     }\r\n                    \r\n//                     // Filter out empty arrays as well\r\n//                     if (Array.isArray(value) && value.length === 0) {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     // Render other fields if their value is not \"null\" (string) or empty string\r\n//                     if (typeof value === 'string' && value.trim() === '') {\r\n//                         return null;\r\n//                     }\r\n\r\n//                     return (\r\n//                         <li key={key}>\r\n//                             <strong>{displayNames[key] || key}:</strong> {value}\r\n//                         </li>\r\n//                     );\r\n//                 })}\r\n//             </ul>\r\n//         );\r\n//     };\r\n\r\n\r\n//     return (\r\n//         <div className=\"tax-uploader-container section-box\">\r\n//             {/* Inlined CSS for styling the component */}\r\n//             <style>{`\r\n//                 /* General Body Styling */\r\n//                 body {\r\n//                     font-family: 'Inter', sans-serif;\r\n//                     background-color: #f0f2f5;\r\n//                     margin: 0;\r\n//                     padding: 20px;\r\n//                     color: #333;\r\n//                     line-height: 1.6;\r\n//                 }\r\n\r\n//                 /* Section Box Styling */\r\n//                 .section-box {\r\n//                     background-color: #ffffff;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n//                     margin-bottom: 25px;\r\n//                     border: 1px solid #e0e0e0;\r\n//                 }\r\n\r\n//                 /* Tax Uploader Container */\r\n//                 .tax-uploader-container {\r\n//                     max-width: 900px;\r\n//                     margin: 30px auto;\r\n//                     padding: 30px;\r\n//                     background-color: #fff;\r\n//                     border-radius: 15px;\r\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n//                     border: 1px solid #d0d0d0;\r\n//                 }\r\n\r\n//                 .tax-uploader-title {\r\n//                     text-align: center;\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 30px;\r\n//                     font-size: 2.2em;\r\n//                     font-weight: 700;\r\n//                     letter-spacing: -0.5px;\r\n//                 }\r\n\r\n//                 /* Form Group */\r\n//                 .tax-uploader-form-group {\r\n//                     margin-bottom: 25px;\r\n//                 }\r\n\r\n//                 .tax-uploader-label {\r\n//                     display: block;\r\n//                     margin-bottom: 10px;\r\n//                     font-weight: 600;\r\n//                     color: #34495e;\r\n//                     font-size: 1.1em;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 12px;\r\n//                     border: 1px solid #ced4da;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     color: #495057;\r\n//                     background-color: #f8f9fa;\r\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input:focus {\r\n//                     border-color: #80bdff;\r\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n//                     outline: none;\r\n//                 }\r\n\r\n//                 .selected-files-text {\r\n//                     margin-top: 10px;\r\n//                     font-size: 0.95em;\r\n//                     color: #555;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 /* Buttons */\r\n//                 .tax-uploader-button {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 14px 20px;\r\n//                     background-color: #007bff;\r\n//                     color: white;\r\n//                     border: none;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                     cursor: pointer;\r\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\r\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\r\n//                     margin-top: 20px;\r\n//                 }\r\n\r\n//                 .tax-uploader-button:hover {\r\n//                     background-color: #0056b3;\r\n//                     transform: translateY(-2px);\r\n//                 }\r\n\r\n//                 .tax-uploader-button:disabled {\r\n//                     background-color: #a0c9f1;\r\n//                     cursor: not-allowed;\r\n//                     box-shadow: none;\r\n//                     transform: none;\r\n//                 }\r\n\r\n//                 .action-buttons-container {\r\n//                     display: flex;\r\n//                     flex-wrap: wrap;\r\n//                     gap: 15px;\r\n//                     margin-top: 30px;\r\n//                     justify-content: center;\r\n//                 }\r\n\r\n//                 .action-buttons-container .tax-uploader-button {\r\n//                     flex: 1;\r\n//                     min-width: 250px;\r\n//                     margin: 0; /* Override default margin */\r\n//                 }\r\n\r\n//                 .get-suggestions-button {\r\n//                     background-color: #28a745;\r\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\r\n//                 }\r\n\r\n//                 .get-suggestions-button:hover {\r\n//                     background-color: #218838;\r\n//                 }\r\n\r\n//                 .generate-itr-button {\r\n//                     background-color: #6c757d;\r\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\r\n//                 }\r\n\r\n//                 .generate-itr-button:hover {\r\n//                     background-color: #5a6268;\r\n//                 }\r\n\r\n//                 /* Loading Spinner */\r\n//                 .tax-uploader-loading {\r\n//                     display: flex;\r\n//                     align-items: center;\r\n//                     justify-content: center;\r\n//                     margin-top: 25px;\r\n//                     font-size: 1.1em;\r\n//                     color: #007bff;\r\n//                     font-weight: 500;\r\n//                 }\r\n\r\n//                 .tax-uploader-spinner {\r\n//                     border: 4px solid #f3f3f3;\r\n//                     border-top: 4px solid #007bff;\r\n//                     border-radius: 50%;\r\n//                     width: 24px;\r\n//                     height: 24px;\r\n//                     animation: spin 1s linear infinite;\r\n//                     margin-right: 10px;\r\n//                 }\r\n\r\n//                 @keyframes spin {\r\n//                     0% { transform: rotate(0deg); }\r\n//                     100% { transform: rotate(360deg); }\r\n//                 }\r\n\r\n//                 /* Messages */\r\n//                 .tax-uploader-message {\r\n//                     padding: 15px;\r\n//                     margin-top: 25px;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     font-weight: 500;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.info {\r\n//                     background-color: #e7f3ff;\r\n//                     color: #0056b3;\r\n//                     border: 1px solid #b3d7ff;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.success {\r\n//                     background-color: #d4edda;\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.error {\r\n//                     background-color: #f8d7da;\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                 }\r\n\r\n//                 /* Tax Summary Output */\r\n//                 .tax-summary-output {\r\n//                     margin-top: 40px;\r\n//                     background-color: #f9f9f9;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\r\n//                     border: 1px solid #eee;\r\n//                 }\r\n\r\n//                 .tax-summary-output h3 {\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 25px;\r\n//                     text-align: center;\r\n//                     font-size: 2em;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .document-processing-summary-section,\r\n//                 .aggregated-financial-data-section,\r\n//                 .final-tax-computation-section,\r\n//                 .suggestions-output .section-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 20px;\r\n//                     background-color: #ffffff;\r\n//                     border-radius: 10px;\r\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n//                     border: 1px solid #e9ecef;\r\n//                 }\r\n\r\n//                 .section-title {\r\n//                     color: #34495e;\r\n//                     font-size: 1.6em;\r\n//                     margin-bottom: 20px;\r\n//                     border-bottom: 2px solid #f0f2f5;\r\n//                     padding-bottom: 10px;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .document-status-item {\r\n//                     background-color: #fdfdfd;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     margin-bottom: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\r\n//                 }\r\n\r\n//                 .document-status-item p {\r\n//                     margin: 5px 0;\r\n//                     font-size: 0.95em;\r\n//                     color: #444;\r\n//                 }\r\n\r\n//                 .document-status-item strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .status-success {\r\n//                     color: #28a745;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-warning {\r\n//                     color: #ffc107;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-error {\r\n//                     color: #dc3545;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\r\n//                     background-color: #e9ecef;\r\n//                     border: 1px solid #dee2e6;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n//                     font-size: 0.85em;\r\n//                     white-space: pre-wrap; /* Ensures text wraps */\r\n//                     word-break: break-all; /* Breaks words if necessary */\r\n//                     max-height: 200px; /* Limit height for long outputs */\r\n//                     overflow-y: auto; /* Add scroll for overflow */\r\n//                 }\r\n\r\n//                 .income-details-section,\r\n//                 .deductions-section,\r\n//                 .taxation-summary-section {\r\n//                     margin-bottom: 25px;\r\n//                     padding: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     border-radius: 8px;\r\n//                     background-color: #fdfdfd;\r\n//                 }\r\n\r\n//                 .income-details-section h5,\r\n//                 .deductions-section h5,\r\n//                 .taxation-summary-section h5 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.3em;\r\n//                     margin-bottom: 15px;\r\n//                     border-bottom: 1px solid #e0e0e0;\r\n//                     padding-bottom: 8px;\r\n//                 }\r\n\r\n//                 .income-details-section p,\r\n//                 .deductions-section p,\r\n//                 .taxation-summary-section p {\r\n//                     margin: 8px 0;\r\n//                     font-size: 0.98em;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .computation-detail {\r\n//                     margin-bottom: 10px;\r\n//                     padding-bottom: 5px;\r\n//                     border-bottom: 1px dashed #e9ecef;\r\n//                 }\r\n\r\n//                 .computation-detail:last-child {\r\n//                     border-bottom: none;\r\n//                 }\r\n\r\n//                 .computation-detail strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .final-amount-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\r\n//                     border: 1px solid #c3e6cb;\r\n//                     text-align: center;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                 }\r\n\r\n//                 .final-amount-box .tax-due-amount {\r\n//                     background-color: #f8d7da; /* Light red for tax due */\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .final-amount-box .refund-amount {\r\n//                     background-color: #d4edda; /* Light green for refund */\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .computation-notes {\r\n//                     margin-top: 20px;\r\n//                     padding: 10px;\r\n//                     background-color: #f0f8ff;\r\n//                     border: 1px solid #d1e7fd;\r\n//                     border-radius: 8px;\r\n//                     font-size: 0.9em;\r\n//                     color: #444;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 .highlight-regime {\r\n//                     font-weight: bold;\r\n//                     color: #007bff;\r\n//                 }\r\n\r\n//                 /* Suggestions specific styling */\r\n//                 .suggestions-list {\r\n//                     list-style-type: disc;\r\n//                     margin-left: 20px;\r\n//                     padding-left: 0;\r\n//                 }\r\n\r\n//                 .suggestions-list li {\r\n//                     margin-bottom: 8px;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     background-color: #e6f7ff;\r\n//                     border: 1px solid #91d5ff;\r\n//                     border-radius: 8px;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis h4 {\r\n//                     color: #0056b3;\r\n//                     margin-bottom: 10px;\r\n//                 }\r\n\r\n//                 /* Responsive Adjustments */\r\n//                 @media (max-width: 768px) {\r\n//                     .tax-uploader-container {\r\n//                         margin: 20px 10px;\r\n//                         padding: 20px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.8em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         padding: 12px 15px;\r\n//                         font-size: 1em;\r\n//                     }\r\n\r\n//                     .action-buttons-container {\r\n//                         flex-direction: column;\r\n//                         gap: 10px;\r\n//                     }\r\n\r\n//                     .action-buttons-container .tax-uploader-button {\r\n//                         min-width: unset;\r\n//                     }\r\n\r\n//                     .tax-summary-output h3 {\r\n//                         font-size: 1.6em;\r\n//                     }\r\n\r\n//                     .section-title {\r\n//                         font-size: 1.4em;\r\n//                     }\r\n\r\n//                     .income-details-section h5,\r\n//                     .deductions-section h5,\r\n//                     .taxation-summary-section h5 {\r\n//                         font-size: 1.1em;\r\n//                     }\r\n//                 }\r\n\r\n//                 @media (max-width: 480px) {\r\n//                     body {\r\n//                         padding: 10px;\r\n//                     }\r\n\r\n//                     .tax-uploader-container {\r\n//                         margin: 10px;\r\n//                         padding: 15px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.5em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px 12px;\r\n//                     }\r\n\r\n//                     .tax-uploader-message {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px;\r\n//                     }\r\n//                 }\r\n//             `}</style>\r\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 {/* Document Type Selection */}\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\r\n//                         Specify Document Type (Optional, for better accuracy):\r\n//                     </label>\r\n//                     <select\r\n//                         id=\"documentType\"\r\n//                         value={documentTypeHint}\r\n//                         onChange={handleDocumentTypeChange}\r\n//                         className=\"tax-uploader-file-input\"\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {documentTypes.map(type => (\r\n//                             <option key={type} value={type}>{type}</option>\r\n//                         ))}\r\n//                     </select>\r\n//                 </div>\r\n\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\r\n//                     <input\r\n//                         id=\"file-input\"\r\n//                         type=\"file\"\r\n//                         multiple\r\n//                         onChange={handleFileChange}\r\n//                         className=\"tax-uploader-file-input\"\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\r\n//                     />\r\n//                     {selectedFiles.length > 0 && (\r\n//                         <p className=\"selected-files-text\">\r\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\r\n//                         </p>\r\n//                     )}\r\n//                 </div>\r\n\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     className=\"tax-uploader-button\"\r\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\r\n//                 >\r\n//                     {loading ? (\r\n//                         <>\r\n//                             <div className=\"tax-uploader-spinner\"></div>\r\n//                             Processing with AI...\r\n//                         </>\r\n//                     ) : (\r\n//                         'Upload & Process Documents'\r\n//                     )}\r\n//                 </button>\r\n//             </form>\r\n\r\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\r\n//                 <div className=\"tax-uploader-loading\">\r\n//                     <div className=\"tax-uploader-spinner\"></div>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\r\n//                 <div className={`tax-uploader-message ${messageType}`}>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Action buttons appear only after initial document processing is successful */}\r\n//             {uploadResult && uploadResult.record_id && !loading && (\r\n//                 <div className=\"action-buttons-container\">\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGetSuggestions}\r\n//                         className=\"tax-uploader-button get-suggestions-button\"\r\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\r\n//                     </button>\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGenerateITRForm}\r\n//                         className=\"tax-uploader-button generate-itr-button\"\r\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\r\n//                     >\r\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\r\n//                     </button>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Document Processing Summary (from initial upload) */}\r\n//             {uploadResult && uploadResult.document_processing_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\r\n//                     <div className=\"document-processing-summary-section section-box\">\r\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\r\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\r\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\r\n//                             return (\r\n//                                 <div key={index} className=\"document-status-item\">\r\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\r\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\r\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\r\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\r\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n//                                         <p><strong>Extracted Fields:</strong>\r\n//                                             <pre className=\"extracted-fields-preview\">\r\n//                                                 {renderExtractedFields(doc.extracted_fields)}\r\n//                                             </pre>\r\n//                                         </p>\r\n//                                     )}\r\n//                                     {doc.extracted_raw_text && (\r\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\r\n//                                     )}\r\n//                                 </div>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\r\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\r\n\r\n//                     <div className=\"aggregated-financial-data-section section-box\">\r\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\r\n//                         <div className=\"income-details-section\">\r\n//                             <h5>Income Details</h5>\r\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? uploadResult.aggregated_financial_data.date_of_birth : 'N/A'}</p>\r\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p>\r\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\r\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\r\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\r\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\r\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\r\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\r\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\r\n//                         </div>\r\n//                         <div className=\"deductions-section\">\r\n//                             <h5>Deductions Claimed</h5>\r\n//                             {uploadResult.aggregated_financial_data.standard_deduction > 0 && \r\n//                                 <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.professional_tax > 0 &&\r\n//                                 <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\r\n//                                 <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80C > 0 &&\r\n//                                 <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80CCD1B > 0 &&\r\n//                                 <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80D > 0 &&\r\n//                                 <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80G > 0 &&\r\n//                                 <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80TTA > 0 &&\r\n//                                 <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80TTB > 0 &&\r\n//                                 <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\r\n//                             }\r\n//                             {uploadResult.aggregated_financial_data.deduction_80E > 0 &&\r\n//                                 <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\r\n//                             }\r\n//                             <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_deductions)}</p>\r\n//                         </div>\r\n//                         <div className=\"taxation-summary-section\">\r\n//                             <h5>Tax Payments & Regime</h5>\r\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p>\r\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\r\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\r\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"final-tax-computation-section section-box\">\r\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\r\n//                         {uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && (\r\n//                             <div className=\"computation-details-list\">\r\n//                                 <h5>Calculation Steps:</h5>\r\n//                                 <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\r\n//                                     {uploadResult.final_tax_computation_summary.calculation_details.map((detail, idx) => (\r\n//                                         <li key={idx} className=\"computation-detail-item\">{detail}</li>\r\n//                                     ))}\r\n//                                 </ul>\r\n//                             </div>\r\n//                         )}\r\n//                         <div className=\"final-amount-box\">\r\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\r\n//                             <p><strong>Estimated Tax Payable:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\r\n//                             {uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && (\r\n//                                 <p className=\"refund-amount\">\r\n//                                     <strong>Refund Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)}\r\n//                                 </p>\r\n//                             )}\r\n//                             {uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && (\r\n//                                 <p className=\"tax-due-amount\">\r\n//                                     <strong>Additional Tax Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)}\r\n//                                 </p>\r\n//                             )}\r\n//                         </div>\r\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\r\n//                             <p className=\"computation-notes\">\r\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\r\n//                             </p>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\r\n//             {suggestionsResult && !isGeneratingSuggestions && (\r\n//                 <div className=\"suggestions-output tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\r\n//                     <div className=\"section-box\">\r\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\r\n//                             <>\r\n//                                 <h4>Based on Gemini AI:</h4>\r\n//                                 <ul className=\"suggestions-list\">\r\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\r\n//                                         <li key={index}>{suggestion}</li>\r\n//                                     ))}\r\n//                                 </ul>\r\n//                             </>\r\n//                         ) : (\r\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\r\n//                         )}\r\n//                         {suggestionsResult.gemini_regime_analysis && (\r\n//                             <div className=\"gemini-regime-analysis\">\r\n//                                 <h4>Gemini's Regime Analysis:</h4>\r\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\r\n//                             </div>\r\n//                         )}\r\n//                         {suggestionsResult.ml_prediction_summary && (\r\n//                             <>\r\n//                                 <h4>ML Model Prediction:</h4>\r\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\r\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\r\n//                                 )}\r\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\r\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\r\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\r\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\r\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\r\n//                                 )}\r\n//                             </>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TaxUploader;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}