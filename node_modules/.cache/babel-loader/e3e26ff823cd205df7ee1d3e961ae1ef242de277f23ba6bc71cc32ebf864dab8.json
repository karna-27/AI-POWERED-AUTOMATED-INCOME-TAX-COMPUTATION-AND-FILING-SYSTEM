{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gumma\\\\Downloads\\\\All_Projects\\\\GarudaTaxAi\\\\src\\\\components\\\\TaxUploader\\\\index.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Cookies from 'js-cookie';\n// // Header is now passed from Dashboard, so no direct import here\n// // The CSS is now inlined within the component's <style> tag to resolve import issues.\n\n// const TaxUploader = () => {\n//     const [selectedFiles, setSelectedFiles] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary)\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n//     // New state for document type hint\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\n\n//     // List of common document types for the dropdown\n//     const documentTypes = [\n//         'Auto-Detect', // Default option, AI attempts to detect\n//         'Form 16',\n//         'Bank Statement',\n//         'Form 26AS',\n//         'Salary Slip',\n//         'Investment Proof',\n//         'Home Loan Statement',\n//         'Other Document',\n//     ];\n\n//     // Helper function to safely format currency values\n//     const formatCurrency = (value) => {\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\n//             return 'N/A';\n//         }\n//         return parseFloat(value).toLocaleString('en-IN', {\n//             style: 'currency',\n//             currency: 'INR',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2,\n//         });\n//     };\n\n//     // The formatNumber function was not being used and has been removed to clear the ESLint warning.\n//     // If you need general number formatting in the future, you can re-add it or create a new helper.\n\n//     const handleFileChange = (event) => {\n//         setSelectedFiles(Array.from(event.target.files));\n//         // Clear all previous results/messages on new file selection\n//         setMessage('');\n//         setMessageType('');\n//         setUploadResult(null);\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n//     };\n\n//     // Handle document type selection\n//     const handleDocumentTypeChange = (event) => {\n//         setDocumentTypeHint(event.target.value);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         if (selectedFiles.length === 0) {\n//             setMessage('Please select at least one file.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setMessage('Uploading and processing documents with AI...');\n//         setMessageType('info');\n//         setUploadResult(null); // Clear previous results\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n\n//         const formData = new FormData();\n//         selectedFiles.forEach(file => {\n//             formData.append('documents', file);\n//         });\n//         // Append the selected document type hint to the form data\n//         formData.append('document_type', documentTypeHint);\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 }\n//             };\n//             if (jwt_token) {\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\n//             }\n\n//             // API call to process documents (this now only saves and returns record_id)\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\n\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\n//                 setMessageType('success');\n//                 setUploadResult(response.data); // Store the record_id and doc summary\n//                 // Clear selected files and file input after successful upload\n//                 setSelectedFiles([]);\n//                 document.getElementById('file-input').value = ''; // Clear the actual file input\n//             } else {\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Upload error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token'); // Clear invalid token\n//                     window.location.href = '/login'; // Redirect to login\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleGetSuggestions = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to get suggestions.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingSuggestions(true);\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\n//         setMessageType('info');\n//         setSuggestionsResult(null); // Clear previous suggestions\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 }\n//             };\n\n//             const payload = {\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\n//             };\n\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\n\n//             if (response.data.status === 'success') {\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\n//                 setMessageType('success');\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\n//             } else {\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Suggestions error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token');\n//                     window.location.href = '/login';\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingSuggestions(false);\n//         }\n//     };\n\n//     const handleGenerateITRForm = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to generate ITR form.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingITR(true);\n//         setMessage('Generating ITR form...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 },\n//                 responseType: 'blob', // Important for receiving a file\n//             };\n\n//             // Fetch the ITR form using the record_id obtained after saving\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\n\n//             if (response.status === 200) {\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\n//                 const downloadUrl = window.URL.createObjectURL(blob);\n//                 const contentDisposition = response.headers['content-disposition'];\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\n\n//                 if (contentDisposition) {\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n//                     if (filenameMatch && filenameMatch[1]) {\n//                         filename = filenameMatch[1];\n//                     }\n//                 }\n\n//                 const link = document.createElement('a');\n//                 link.href = downloadUrl;\n//                 link.setAttribute('download', filename);\n//                 document.body.appendChild(link);\n//                 link.click();\n//                 link.remove();\n//                 window.URL.revokeObjectURL(downloadUrl);\n\n//                 setMessage('ITR form generated and downloaded successfully!');\n//                 setMessageType('success');\n//             } else {\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('ITR generation error:', error);\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\n//                 const reader = new FileReader();\n//                 reader.onload = () => {\n//                     try {\n//                         const errorJson = JSON.parse(reader.result);\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\n//                     } catch (e) {\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\n//                     }\n//                 };\n//                 reader.readAsText(error.response.data);\n//             } else {\n//                 setMessage('Network error or server unavailable during ITR form generation.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingITR(false);\n//         }\n//     };\n\n//     return (\n//         <div className=\"tax-uploader-container section-box\">\n//             {/* Inlined CSS for styling the component */}\n//             <style>{`\n//                 /* General Body Styling */\n//                 body {\n//                     font-family: 'Inter', sans-serif;\n//                     background-color: #f0f2f5;\n//                     margin: 0;\n//                     padding: 20px;\n//                     color: #333;\n//                     line-height: 1.6;\n//                 }\n\n//                 /* Section Box Styling */\n//                 .section-box {\n//                     background-color: #ffffff;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n//                     margin-bottom: 25px;\n//                     border: 1px solid #e0e0e0;\n//                 }\n\n//                 /* Tax Uploader Container */\n//                 .tax-uploader-container {\n//                     max-width: 900px;\n//                     margin: 30px auto;\n//                     padding: 30px;\n//                     background-color: #fff;\n//                     border-radius: 15px;\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n//                     border: 1px solid #d0d0d0;\n//                 }\n\n//                 .tax-uploader-title {\n//                     text-align: center;\n//                     color: #2c3e50;\n//                     margin-bottom: 30px;\n//                     font-size: 2.2em;\n//                     font-weight: 700;\n//                     letter-spacing: -0.5px;\n//                 }\n\n//                 /* Form Group */\n//                 .tax-uploader-form-group {\n//                     margin-bottom: 25px;\n//                 }\n\n//                 .tax-uploader-label {\n//                     display: block;\n//                     margin-bottom: 10px;\n//                     font-weight: 600;\n//                     color: #34495e;\n//                     font-size: 1.1em;\n//                 }\n\n//                 .tax-uploader-file-input {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 12px;\n//                     border: 1px solid #ced4da;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     color: #495057;\n//                     background-color: #f8f9fa;\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n//                 }\n\n//                 .tax-uploader-file-input:focus {\n//                     border-color: #80bdff;\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n//                     outline: none;\n//                 }\n\n//                 .selected-files-text {\n//                     margin-top: 10px;\n//                     font-size: 0.95em;\n//                     color: #555;\n//                     font-style: italic;\n//                 }\n\n//                 /* Buttons */\n//                 .tax-uploader-button {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 14px 20px;\n//                     background-color: #007bff;\n//                     color: white;\n//                     border: none;\n//                     border-radius: 8px;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                     cursor: pointer;\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\n//                     margin-top: 20px;\n//                 }\n\n//                 .tax-uploader-button:hover {\n//                     background-color: #0056b3;\n//                     transform: translateY(-2px);\n//                 }\n\n//                 .tax-uploader-button:disabled {\n//                     background-color: #a0c9f1;\n//                     cursor: not-allowed;\n//                     box-shadow: none;\n//                     transform: none;\n//                 }\n\n//                 .action-buttons-container {\n//                     display: flex;\n//                     flex-wrap: wrap;\n//                     gap: 15px;\n//                     margin-top: 30px;\n//                     justify-content: center;\n//                 }\n\n//                 .action-buttons-container .tax-uploader-button {\n//                     flex: 1;\n//                     min-width: 250px;\n//                     margin: 0; /* Override default margin */\n//                 }\n\n//                 .get-suggestions-button {\n//                     background-color: #28a745;\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\n//                 }\n\n//                 .get-suggestions-button:hover {\n//                     background-color: #218838;\n//                 }\n\n//                 .generate-itr-button {\n//                     background-color: #6c757d;\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\n//                 }\n\n//                 .generate-itr-button:hover {\n//                     background-color: #5a6268;\n//                 }\n\n//                 /* Loading Spinner */\n//                 .tax-uploader-loading {\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                     margin-top: 25px;\n//                     font-size: 1.1em;\n//                     color: #007bff;\n//                     font-weight: 500;\n//                 }\n\n//                 .tax-uploader-spinner {\n//                     border: 4px solid #f3f3f3;\n//                     border-top: 4px solid #007bff;\n//                     border-radius: 50%;\n//                     width: 24px;\n//                     height: 24px;\n//                     animation: spin 1s linear infinite;\n//                     margin-right: 10px;\n//                 }\n\n//                 @keyframes spin {\n//                     0% { transform: rotate(0deg); }\n//                     100% { transform: rotate(360deg); }\n//                 }\n\n//                 /* Messages */\n//                 .tax-uploader-message {\n//                     padding: 15px;\n//                     margin-top: 25px;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     font-weight: 500;\n//                     text-align: center;\n//                 }\n\n//                 .tax-uploader-message.info {\n//                     background-color: #e7f3ff;\n//                     color: #0056b3;\n//                     border: 1px solid #b3d7ff;\n//                 }\n\n//                 .tax-uploader-message.success {\n//                     background-color: #d4edda;\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                 }\n\n//                 .tax-uploader-message.error {\n//                     background-color: #f8d7da;\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                 }\n\n//                 /* Tax Summary Output */\n//                 .tax-summary-output {\n//                     margin-top: 40px;\n//                     background-color: #f9f9f9;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\n//                     border: 1px solid #eee;\n//                 }\n\n//                 .tax-summary-output h3 {\n//                     color: #2c3e50;\n//                     margin-bottom: 25px;\n//                     text-align: center;\n//                     font-size: 2em;\n//                     font-weight: 700;\n//                 }\n\n//                 .document-processing-summary-section,\n//                 .aggregated-financial-data-section,\n//                 .final-tax-computation-section,\n//                 .suggestions-output .section-box {\n//                     margin-top: 20px;\n//                     padding: 20px;\n//                     background-color: #ffffff;\n//                     border-radius: 10px;\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n//                     border: 1px solid #e9ecef;\n//                 }\n\n//                 .section-title {\n//                     color: #34495e;\n//                     font-size: 1.6em;\n//                     margin-bottom: 20px;\n//                     border-bottom: 2px solid #f0f2f5;\n//                     padding-bottom: 10px;\n//                     text-align: center;\n//                 }\n\n//                 .document-status-item {\n//                     background-color: #fdfdfd;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     margin-bottom: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\n//                 }\n\n//                 .document-status-item p {\n//                     margin: 5px 0;\n//                     font-size: 0.95em;\n//                     color: #444;\n//                 }\n\n//                 .document-status-item strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .status-success {\n//                     color: #28a745;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-warning {\n//                     color: #ffc107;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-error {\n//                     color: #dc3545;\n//                     font-weight: 700;\n//                 }\n\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\n//                     background-color: #e9ecef;\n//                     border: 1px solid #dee2e6;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n//                     font-size: 0.85em;\n//                     white-space: pre-wrap; /* Ensures text wraps */\n//                     word-break: break-all; /* Breaks words if necessary */\n//                     max-height: 200px; /* Limit height for long outputs */\n//                     overflow-y: auto; /* Add scroll for overflow */\n//                 }\n\n//                 .income-details-section,\n//                 .deductions-section,\n//                 .taxation-summary-section {\n//                     margin-bottom: 25px;\n//                     padding: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     border-radius: 8px;\n//                     background-color: #fdfdfd;\n//                 }\n\n//                 .income-details-section h5,\n//                 .deductions-section h5,\n//                 .taxation-summary-section h5 {\n//                     color: #007bff;\n//                     font-size: 1.3em;\n//                     margin-bottom: 15px;\n//                     border-bottom: 1px solid #e0e0e0;\n//                     padding-bottom: 8px;\n//                 }\n\n//                 .income-details-section p,\n//                 .deductions-section p,\n//                 .taxation-summary-section p {\n//                     margin: 8px 0;\n//                     font-size: 0.98em;\n//                     color: #333;\n//                 }\n\n//                 .computation-detail {\n//                     margin-bottom: 10px;\n//                     padding-bottom: 5px;\n//                     border-bottom: 1px dashed #e9ecef;\n//                 }\n\n//                 .computation-detail:last-child {\n//                     border-bottom: none;\n//                 }\n\n//                 .computation-detail strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .final-amount-box {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\n//                     border: 1px solid #c3e6cb;\n//                     text-align: center;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                 }\n\n//                 .final-amount-box .tax-due-amount {\n//                     background-color: #f8d7da; /* Light red for tax due */\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .final-amount-box .refund-amount {\n//                     background-color: #d4edda; /* Light green for refund */\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .computation-notes {\n//                     margin-top: 20px;\n//                     padding: 10px;\n//                     background-color: #f0f8ff;\n//                     border: 1px solid #d1e7fd;\n//                     border-radius: 8px;\n//                     font-size: 0.9em;\n//                     color: #444;\n//                     font-style: italic;\n//                 }\n\n//                 .highlight-regime {\n//                     font-weight: bold;\n//                     color: #007bff;\n//                 }\n\n//                 /* Suggestions specific styling */\n//                 .suggestions-list {\n//                     list-style-type: disc;\n//                     margin-left: 20px;\n//                     padding-left: 0;\n//                 }\n\n//                 .suggestions-list li {\n//                     margin-bottom: 8px;\n//                     color: #333;\n//                 }\n\n//                 .gemini-regime-analysis {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     background-color: #e6f7ff;\n//                     border: 1px solid #91d5ff;\n//                     border-radius: 8px;\n//                 }\n\n//                 .gemini-regime-analysis h4 {\n//                     color: #0056b3;\n//                     margin-bottom: 10px;\n//                 }\n\n//                 /* Responsive Adjustments */\n//                 @media (max-width: 768px) {\n//                     .tax-uploader-container {\n//                         margin: 20px 10px;\n//                         padding: 20px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.8em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         padding: 12px 15px;\n//                         font-size: 1em;\n//                     }\n\n//                     .action-buttons-container {\n//                         flex-direction: column;\n//                         gap: 10px;\n//                     }\n\n//                     .action-buttons-container .tax-uploader-button {\n//                         min-width: unset;\n//                     }\n\n//                     .tax-summary-output h3 {\n//                         font-size: 1.6em;\n//                     }\n\n//                     .section-title {\n//                         font-size: 1.4em;\n//                     }\n\n//                     .income-details-section h5,\n//                     .deductions-section h5,\n//                     .taxation-summary-section h5 {\n//                         font-size: 1.1em;\n//                     }\n//                 }\n\n//                 @media (max-width: 480px) {\n//                     body {\n//                         padding: 10px;\n//                     }\n\n//                     .tax-uploader-container {\n//                         margin: 10px;\n//                         padding: 15px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.5em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         font-size: 0.9em;\n//                         padding: 10px 12px;\n//                     }\n\n//                     .tax-uploader-message {\n//                         font-size: 0.9em;\n//                         padding: 10px;\n//                     }\n//                 }\n//             `}</style>\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\n//             <form onSubmit={handleSubmit}>\n//                 {/* Document Type Selection */}\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\n//                         Specify Document Type (Optional, for better accuracy):\n//                     </label>\n//                     <select\n//                         id=\"documentType\"\n//                         value={documentTypeHint}\n//                         onChange={handleDocumentTypeChange}\n//                         className=\"tax-uploader-file-input\" // Removed the problematic comment\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {documentTypes.map(type => (\n//                             <option key={type} value={type}>{type}</option>\n//                         ))}\n//                     </select>\n//                 </div>\n\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\n//                     <input\n//                         id=\"file-input\"\n//                         type=\"file\"\n//                         multiple\n//                         onChange={handleFileChange}\n//                         className=\"tax-uploader-file-input\"\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\n//                     />\n//                     {selectedFiles.length > 0 && (\n//                         <p className=\"selected-files-text\">\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\n//                         </p>\n//                     )}\n//                 </div>\n\n//                 <button\n//                     type=\"submit\"\n//                     className=\"tax-uploader-button\"\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\n//                 >\n//                     {loading ? (\n//                         <>\n//                             <div className=\"tax-uploader-spinner\"></div>\n//                             Processing with AI...\n//                         </>\n//                     ) : (\n//                         'Upload & Process Documents'\n//                     )}\n//                 </button>\n//             </form>\n\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\n//                 <div className=\"tax-uploader-loading\">\n//                     <div className=\"tax-uploader-spinner\"></div>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\n//                 <div className={`tax-uploader-message ${messageType}`}>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {/* Action buttons appear only after initial document processing is successful */}\n//             {uploadResult && uploadResult.record_id && !loading && (\n//                 <div className=\"action-buttons-container\">\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGetSuggestions}\n//                         className=\"tax-uploader-button get-suggestions-button\"\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\n//                     </button>\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGenerateITRForm}\n//                         className=\"tax-uploader-button generate-itr-button\"\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\n//                     >\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\n//                     </button>\n//                 </div>\n//             )}\n\n//             {/* Display Document Processing Summary (from initial upload) */}\n//             {uploadResult && uploadResult.document_processing_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\n//                     <div className=\"document-processing-summary-section section-box\">\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\n//                             return (\n//                                 <div key={index} className=\"document-status-item\">\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\n//                                         <p><strong>Extracted Fields (Partial):</strong>\n//                                             <pre className=\"extracted-fields-preview\">\n//                                                 {JSON.stringify(doc.extracted_fields, null, 2)}\n//                                             </pre>\n//                                         </p>\n//                                     )}\n//                                     {doc.extracted_raw_text && (\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\n//                                     )}\n//                                 </div>\n//                             );\n//                         })}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\n\n//                     <div className=\"aggregated-financial-data-section section-box\">\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\n//                         <div className=\"income-details-section\">\n//                             <h5>Income Details</h5>\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth || 'N/A'}</p>\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p> {/* Corrected to 'Age' based on app1.py aggregation */}\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\n//                             {/* The following fields were not in the schema I previously used for frontend rendering,\n//                                 so I'm removing them to prevent undefined access, unless your Gemini prompt \n//                                 specifically extracts these as separate fields.\n//                                 The backend aggregates these into `income_from_other_sources`.\n//                             <p><strong>Interest from Savings:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_interest_savings)}</p>\n//                             <p><strong>Interest from FD:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_interest_fd)}</p>\n//                             <p><strong>Dividend Income:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_dividend)}</p>\n//                             <p><strong>Miscellaneous Income:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_misc)}</p>\n//                             */}\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p> {/* Changed from gross_total_income to calculated_gross_income matching backend output */}\n//                         </div>\n\n//                         <div className=\"deductions-section\">\n//                             <h5>Deductions Claimed</h5>\n//                             <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p> {/* Now correctly linked to aggregated_data */}\n//                             <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\n//                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\n//                             <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\n//                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\n//                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\n//                             <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\n//                             <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\n//                             <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\n//                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\n//                             <p><strong>Total Deductions (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p> {/* Changed to calculated_total_deductions matching backend output */}\n//                         </div>\n\n//                         <div className=\"taxation-summary-section\">\n//                             <h5>Tax Payments & Regime</h5>\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p> {/* Now correctly mapped to computation summary */}\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\n//                         </div>\n//                     </div>\n\n//                     <div className=\"final-tax-computation-section section-box\">\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Calculated Gross Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Calculated Total Deductions:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Estimated Tax Payable (Before TDS):</strong> {formatCurrency(suggestionsResult?.ml_prediction_summary?.predicted_tax_liability ?? uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Total Tax Paid Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p> {/* Corrected to total_tds_credit */}\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.regime_considered || 'N/A'}</span></p> {/* Corrected to regime_considered */}\n//                         </div>\n//                         <div className=\"final-amount-box\">\n//                             {uploadResult.final_tax_computation_summary.refund_due_from_tax > 0 && (\n//                                 <p className=\"refund-amount\">\n//                                     <strong>Refund Due from Tax:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.refund_due_from_tax)}\n//                                 </p>\n//                             )}\n//                             {uploadResult.final_tax_computation_summary.tax_due_to_government > 0 && (\n//                                 <p className=\"tax-due-amount\">\n//                                     <strong>Tax Due to Government:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.tax_due_to_government)}\n//                                 </p>\n//                             )}\n//                         </div>\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\n//                             <p className=\"computation-notes\">\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\n//                             </p>\n//                         )}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\n//             {suggestionsResult && !isGeneratingSuggestions && (\n//                 <div className=\"suggestions-output tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\n//                     <div className=\"section-box\">\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\n//                             <>\n//                                 <h4>Based on Gemini AI:</h4>\n//                                 <ul className=\"suggestions-list\">\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\n//                                         <li key={index}>{suggestion}</li>\n//                                     ))}\n//                                 </ul>\n//                             </>\n//                         ) : (\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\n//                         )}\n\n//                         {suggestionsResult.gemini_regime_analysis && (\n//                             <div className=\"gemini-regime-analysis\">\n//                                 <h4>Gemini's Regime Analysis:</h4>\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\n//                             </div>\n//                         )}\n\n//                         {suggestionsResult.ml_prediction_summary && (\n//                             <>\n//                                 <h4>ML Model Prediction:</h4>\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\n//                                 )}\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\n//                                 )}\n//                             </>\n//                         )}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n// export default TaxUploader;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import Cookies from 'js-cookie';\n// // Header is now passed from Dashboard, so no direct import here\n// // The CSS is now inlined within the component's <style> tag to resolve import issues.\n\n// const TaxUploader = () => {\n//     const [selectedFiles, setSelectedFiles] = useState([]);\n//     const [loading, setLoading] = useState(false);\n//     const [message, setMessage] = useState('');\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary)\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n//     // New state for document type hint\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\n\n//     // List of common document types for the dropdown\n//     const documentTypes = [\n//         'Auto-Detect', // Default option, AI attempts to detect\n//         'Form 16',\n//         'Bank Statement',\n//         'Form 26AS',\n//         'Salary Slip',\n//         'Investment Proof',\n//         'Home Loan Statement',\n//         'Other Document',\n//     ];\n\n//     // Helper function to safely format currency values\n//     const formatCurrency = (value) => {\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\n//             return 'N/A';\n//         }\n//         return parseFloat(value).toLocaleString('en-IN', {\n//             style: 'currency',\n//             currency: 'INR',\n//             minimumFractionDigits: 2,\n//             maximumFractionDigits: 2,\n//         });\n//     };\n\n//     // The formatNumber function was not being used and has been removed to clear the ESLint warning.\n//     // If you need general number formatting in the future, you can re-add it or create a new helper.\n\n//     const handleFileChange = (event) => {\n//         setSelectedFiles(Array.from(event.target.files));\n//         // Clear all previous results/messages on new file selection\n//         setMessage('');\n//         setMessageType('');\n//         setUploadResult(null);\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n//     };\n\n//     // Handle document type selection\n//     const handleDocumentTypeChange = (event) => {\n//         setDocumentTypeHint(event.target.value);\n//     };\n\n//     const handleSubmit = async (event) => {\n//         event.preventDefault();\n//         if (selectedFiles.length === 0) {\n//             setMessage('Please select at least one file.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setLoading(true);\n//         setMessage('Uploading and processing documents with AI...');\n//         setMessageType('info');\n//         setUploadResult(null); // Clear previous results\n//         setSuggestionsResult(null);\n//         setIsGeneratingSuggestions(false);\n//         setIsGeneratingITR(false);\n\n//         const formData = new FormData();\n//         selectedFiles.forEach(file => {\n//             formData.append('documents', file);\n//         });\n//         // Append the selected document type hint to the form data\n//         formData.append('document_type', documentTypeHint);\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 }\n//             };\n//             if (jwt_token) {\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\n//             }\n\n//             // API call to process documents (this now only saves and returns record_id)\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\n\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\n//                 setMessageType('success');\n//                 setUploadResult(response.data); // Store the record_id and doc summary\n//                 // Clear selected files and file input after successful upload\n//                 setSelectedFiles([]);\n//                 document.getElementById('file-input').value = ''; // Clear the actual file input\n//             } else {\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Upload error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token'); // Clear invalid token\n//                     window.location.href = '/login'; // Redirect to login\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleGetSuggestions = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to get suggestions.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingSuggestions(true);\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\n//         setMessageType('info');\n//         setSuggestionsResult(null); // Clear previous suggestions\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 }\n//             };\n\n//             const payload = {\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\n//             };\n\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\n\n//             if (response.data.status === 'success') {\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\n//                 setMessageType('success');\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\n//             } else {\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('Suggestions error:', error);\n//             if (error.response) {\n//                 if (error.response.status === 401) {\n//                     setMessage('Authentication required. Please log in.');\n//                     Cookies.remove('jwt_token');\n//                     window.location.href = '/login';\n//                 } else if (error.response.data && error.response.data.message) {\n//                     setMessage(`Error: ${error.response.data.message}`);\n//                 } else {\n//                     setMessage(`Server responded with status ${error.response.status}`);\n//                 }\n//             } else {\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingSuggestions(false);\n//         }\n//     };\n\n//     const handleGenerateITRForm = async () => {\n//         if (!uploadResult || !uploadResult.record_id) {\n//             setMessage('Please upload and process documents first to generate ITR form.');\n//             setMessageType('error');\n//             return;\n//         }\n\n//         setIsGeneratingITR(true);\n//         setMessage('Generating ITR form...');\n//         setMessageType('info');\n\n//         const jwt_token = Cookies.get('jwt_token');\n\n//         try {\n//             const config = {\n//                 headers: {\n//                     'Authorization': `Bearer ${jwt_token}`,\n//                 },\n//                 responseType: 'blob', // Important for receiving a file\n//             };\n\n//             // Fetch the ITR form using the record_id obtained after saving\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\n\n//             if (response.status === 200) {\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\n//                 const downloadUrl = window.URL.createObjectURL(blob);\n//                 const contentDisposition = response.headers['content-disposition'];\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\n\n//                 if (contentDisposition) {\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n//                     if (filenameMatch && filenameMatch[1]) {\n//                         filename = filenameMatch[1];\n//                     }\n//                 }\n\n//                 const link = document.createElement('a');\n//                 link.href = downloadUrl;\n//                 link.setAttribute('download', filename);\n//                 document.body.appendChild(link);\n//                 link.click();\n//                 link.remove();\n//                 window.URL.revokeObjectURL(downloadUrl);\n\n//                 setMessage('ITR form generated and downloaded successfully!');\n//                 setMessageType('success');\n//             } else {\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\n//                 setMessageType('error');\n//             }\n//         } catch (error) {\n//             console.error('ITR generation error:', error);\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\n//                 const reader = new FileReader();\n//                 reader.onload = () => {\n//                     try {\n//                         const errorJson = JSON.parse(reader.result);\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\n//                     } catch (e) {\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\n//                     }\n//                 };\n//                 reader.readAsText(error.response.data);\n//             } else {\n//                 setMessage('Network error or server unavailable during ITR form generation.');\n//             }\n//             setMessageType('error');\n//         } finally {\n//             setIsGeneratingITR(false);\n//         }\n//     };\n\n//     return (\n//         <div className=\"tax-uploader-container section-box\">\n//             {/* Inlined CSS for styling the component */}\n//             <style>{`\n//                 /* General Body Styling */\n//                 body {\n//                     font-family: 'Inter', sans-serif;\n//                     background-color: #f0f2f5;\n//                     margin: 0;\n//                     padding: 20px;\n//                     color: #333;\n//                     line-height: 1.6;\n//                 }\n\n//                 /* Section Box Styling */\n//                 .section-box {\n//                     background-color: #ffffff;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n//                     margin-bottom: 25px;\n//                     border: 1px solid #e0e0e0;\n//                 }\n\n//                 /* Tax Uploader Container */\n//                 .tax-uploader-container {\n//                     max-width: 900px;\n//                     margin: 30px auto;\n//                     padding: 30px;\n//                     background-color: #fff;\n//                     border-radius: 15px;\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n//                     border: 1px solid #d0d0d0;\n//                 }\n\n//                 .tax-uploader-title {\n//                     text-align: center;\n//                     color: #2c3e50;\n//                     margin-bottom: 30px;\n//                     font-size: 2.2em;\n//                     font-weight: 700;\n//                     letter-spacing: -0.5px;\n//                 }\n\n//                 /* Form Group */\n//                 .tax-uploader-form-group {\n//                     margin-bottom: 25px;\n//                 }\n\n//                 .tax-uploader-label {\n//                     display: block;\n//                     margin-bottom: 10px;\n//                     font-weight: 600;\n//                     color: #34495e;\n//                     font-size: 1.1em;\n//                 }\n\n//                 .tax-uploader-file-input {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 12px;\n//                     border: 1px solid #ced4da;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     color: #495057;\n//                     background-color: #f8f9fa;\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n//                 }\n\n//                 .tax-uploader-file-input:focus {\n//                     border-color: #80bdff;\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n//                     outline: none;\n//                 }\n\n//                 .selected-files-text {\n//                     margin-top: 10px;\n//                     font-size: 0.95em;\n//                     color: #555;\n//                     font-style: italic;\n//                 }\n\n//                 /* Buttons */\n//                 .tax-uploader-button {\n//                     display: block;\n//                     width: 100%;\n//                     padding: 14px 20px;\n//                     background-color: #007bff;\n//                     color: white;\n//                     border: none;\n//                     border-radius: 8px;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                     cursor: pointer;\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\n//                     margin-top: 20px;\n//                 }\n\n//                 .tax-uploader-button:hover {\n//                     background-color: #0056b3;\n//                     transform: translateY(-2px);\n//                 }\n\n//                 .tax-uploader-button:disabled {\n//                     background-color: #a0c9f1;\n//                     cursor: not-allowed;\n//                     box-shadow: none;\n//                     transform: none;\n//                 }\n\n//                 .action-buttons-container {\n//                     display: flex;\n//                     flex-wrap: wrap;\n//                     gap: 15px;\n//                     margin-top: 30px;\n//                     justify-content: center;\n//                 }\n\n//                 .action-buttons-container .tax-uploader-button {\n//                     flex: 1;\n//                     min-width: 250px;\n//                     margin: 0; /* Override default margin */\n//                 }\n\n//                 .get-suggestions-button {\n//                     background-color: #28a745;\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\n//                 }\n\n//                 .get-suggestions-button:hover {\n//                     background-color: #218838;\n//                 }\n\n//                 .generate-itr-button {\n//                     background-color: #6c757d;\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\n//                 }\n\n//                 .generate-itr-button:hover {\n//                     background-color: #5a6268;\n//                 }\n\n//                 /* Loading Spinner */\n//                 .tax-uploader-loading {\n//                     display: flex;\n//                     align-items: center;\n//                     justify-content: center;\n//                     margin-top: 25px;\n//                     font-size: 1.1em;\n//                     color: #007bff;\n//                     font-weight: 500;\n//                 }\n\n//                 .tax-uploader-spinner {\n//                     border: 4px solid #f3f3f3;\n//                     border-top: 4px solid #007bff;\n//                     border-radius: 50%;\n//                     width: 24px;\n//                     height: 24px;\n//                     animation: spin 1s linear infinite;\n//                     margin-right: 10px;\n//                 }\n\n//                 @keyframes spin {\n//                     0% { transform: rotate(0deg); }\n//                     100% { transform: rotate(360deg); }\n//                 }\n\n//                 /* Messages */\n//                 .tax-uploader-message {\n//                     padding: 15px;\n//                     margin-top: 25px;\n//                     border-radius: 8px;\n//                     font-size: 1em;\n//                     font-weight: 500;\n//                     text-align: center;\n//                 }\n\n//                 .tax-uploader-message.info {\n//                     background-color: #e7f3ff;\n//                     color: #0056b3;\n//                     border: 1px solid #b3d7ff;\n//                 }\n\n//                 .tax-uploader-message.success {\n//                     background-color: #d4edda;\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                 }\n\n//                 .tax-uploader-message.error {\n//                     background-color: #f8d7da;\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                 }\n\n//                 /* Tax Summary Output */\n//                 .tax-summary-output {\n//                     margin-top: 40px;\n//                     background-color: #f9f9f9;\n//                     padding: 25px;\n//                     border-radius: 12px;\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\n//                     border: 1px solid #eee;\n//                 }\n\n//                 .tax-summary-output h3 {\n//                     color: #2c3e50;\n//                     margin-bottom: 25px;\n//                     text-align: center;\n//                     font-size: 2em;\n//                     font-weight: 700;\n//                 }\n\n//                 .document-processing-summary-section,\n//                 .aggregated-financial-data-section,\n//                 .final-tax-computation-section,\n//                 .suggestions-output .section-box {\n//                     margin-top: 20px;\n//                     padding: 20px;\n//                     background-color: #ffffff;\n//                     border-radius: 10px;\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n//                     border: 1px solid #e9ecef;\n//                 }\n\n//                 .section-title {\n//                     color: #34495e;\n//                     font-size: 1.6em;\n//                     margin-bottom: 20px;\n//                     border-bottom: 2px solid #f0f2f5;\n//                     padding-bottom: 10px;\n//                     text-align: center;\n//                 }\n\n//                 .document-status-item {\n//                     background-color: #fdfdfd;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     margin-bottom: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\n//                 }\n\n//                 .document-status-item p {\n//                     margin: 5px 0;\n//                     font-size: 0.95em;\n//                     color: #444;\n//                 }\n\n//                 .document-status-item strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .status-success {\n//                     color: #28a745;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-warning {\n//                     color: #ffc107;\n//                     font-weight: 700;\n//                 }\n\n//                 .status-error {\n//                     color: #dc3545;\n//                     font-weight: 700;\n//                 }\n\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\n//                     background-color: #e9ecef;\n//                     border: 1px solid #dee2e6;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n//                     font-size: 0.85em;\n//                     white-space: pre-wrap; /* Ensures text wraps */\n//                     word-break: break-all; /* Breaks words if necessary */\n//                     max-height: 200px; /* Limit height for long outputs */\n//                     overflow-y: auto; /* Add scroll for overflow */\n//                 }\n\n//                 .income-details-section,\n//                 .deductions-section,\n//                 .taxation-summary-section {\n//                     margin-bottom: 25px;\n//                     padding: 15px;\n//                     border: 1px solid #f0f0f0;\n//                     border-radius: 8px;\n//                     background-color: #fdfdfd;\n//                 }\n\n//                 .income-details-section h5,\n//                 .deductions-section h5,\n//                 .taxation-summary-section h5 {\n//                     color: #007bff;\n//                     font-size: 1.3em;\n//                     margin-bottom: 15px;\n//                     border-bottom: 1px solid #e0e0e0;\n//                     padding-bottom: 8px;\n//                 }\n\n//                 .income-details-section p,\n//                 .deductions-section p,\n//                 .taxation-summary-section p {\n//                     margin: 8px 0;\n//                     font-size: 0.98em;\n//                     color: #333;\n//                 }\n\n//                 .computation-detail {\n//                     margin-bottom: 10px;\n//                     padding-bottom: 5px;\n//                     border-bottom: 1px dashed #e9ecef;\n//                 }\n\n//                 .computation-detail:last-child {\n//                     border-bottom: none;\n//                 }\n\n//                 .computation-detail strong {\n//                     color: #2c3e50;\n//                 }\n\n//                 .final-amount-box {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     border-radius: 8px;\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\n//                     border: 1px solid #c3e6cb;\n//                     text-align: center;\n//                     font-size: 1.1em;\n//                     font-weight: 600;\n//                 }\n\n//                 .final-amount-box .tax-due-amount {\n//                     background-color: #f8d7da; /* Light red for tax due */\n//                     color: #721c24;\n//                     border: 1px solid #f5c6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .final-amount-box .refund-amount {\n//                     background-color: #d4edda; /* Light green for refund */\n//                     color: #155724;\n//                     border: 1px solid #c3e6cb;\n//                     padding: 10px;\n//                     border-radius: 5px;\n//                     margin-top: 10px;\n//                 }\n\n//                 .computation-notes {\n//                     margin-top: 20px;\n//                     padding: 10px;\n//                     background-color: #f0f8ff;\n//                     border: 1px solid #d1e7fd;\n//                     border-radius: 8px;\n//                     font-size: 0.9em;\n//                     color: #444;\n//                     font-style: italic;\n//                 }\n\n//                 .highlight-regime {\n//                     font-weight: bold;\n//                     color: #007bff;\n//                 }\n\n//                 /* Suggestions specific styling */\n//                 .suggestions-list {\n//                     list-style-type: disc;\n//                     margin-left: 20px;\n//                     padding-left: 0;\n//                 }\n\n//                 .suggestions-list li {\n//                     margin-bottom: 8px;\n//                     color: #333;\n//                 }\n\n//                 .gemini-regime-analysis {\n//                     margin-top: 20px;\n//                     padding: 15px;\n//                     background-color: #e6f7ff;\n//                     border: 1px solid #91d5ff;\n//                     border-radius: 8px;\n//                 }\n\n//                 .gemini-regime-analysis h4 {\n//                     color: #0056b3;\n//                     margin-bottom: 10px;\n//                 }\n\n//                 .detailed-calculation-section {\n//                     margin-top: 20px;\n//                     padding-top: 15px;\n//                     border-top: 1px dashed #e9ecef;\n//                 }\n\n//                 .detailed-calculation-section h5 {\n//                     color: #007bff;\n//                     font-size: 1.2em;\n//                     margin-bottom: 10px;\n//                 }\n\n//                 .detailed-calculation-section ul {\n//                     list-style-type: none; /* Remove default bullet */\n//                     padding-left: 0;\n//                 }\n\n//                 .detailed-calculation-section li {\n//                     margin-bottom: 5px;\n//                     padding-left: 15px;\n//                     text-indent: -15px;\n//                     position: relative;\n//                 }\n\n//                 .detailed-calculation-section li::before {\n//                     content: '•'; /* Custom bullet */\n//                     color: #007bff;\n//                     position: absolute;\n//                     left: 0;\n//                 }\n\n//                 /* Responsive Adjustments */\n//                 @media (max-width: 768px) {\n//                     .tax-uploader-container {\n//                         margin: 20px 10px;\n//                         padding: 20px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.8em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         padding: 12px 15px;\n//                         font-size: 1em;\n//                     }\n\n//                     .action-buttons-container {\n//                         flex-direction: column;\n//                         gap: 10px;\n//                     }\n\n//                     .action-buttons-container .tax-uploader-button {\n//                         min-width: unset;\n//                     }\n\n//                     .tax-summary-output h3 {\n//                         font-size: 1.6em;\n//                     }\n\n//                     .section-title {\n//                         font-size: 1.4em;\n//                     }\n\n//                     .income-details-section h5,\n//                     .deductions-section h5,\n//                     .taxation-summary-section h5 {\n//                         font-size: 1.1em;\n//                     }\n//                 }\n\n//                 @media (max-width: 480px) {\n//                     body {\n//                         padding: 10px;\n//                     }\n\n//                     .tax-uploader-container {\n//                         margin: 10px;\n//                         padding: 15px;\n//                     }\n\n//                     .tax-uploader-title {\n//                         font-size: 1.5em;\n//                     }\n\n//                     .tax-uploader-button {\n//                         font-size: 0.9em;\n//                         padding: 10px 12px;\n//                     }\n\n//                     .tax-uploader-message {\n//                         font-size: 0.9em;\n//                         padding: 10px;\n//                     }\n//                 }\n//             `}</style>\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\n//             <form onSubmit={handleSubmit}>\n//                 {/* Document Type Selection */}\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\n//                         Specify Document Type (Optional, for better accuracy):\n//                     </label>\n//                     <select\n//                         id=\"documentType\"\n//                         value={documentTypeHint}\n//                         onChange={handleDocumentTypeChange}\n//                         className=\"tax-uploader-file-input\"\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {documentTypes.map(type => (\n//                             <option key={type} value={type}>{type}</option>\n//                         ))}\n//                     </select>\n//                 </div>\n\n//                 <div className=\"tax-uploader-form-group\">\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\n//                     <input\n//                         id=\"file-input\"\n//                         type=\"file\"\n//                         multiple\n//                         onChange={handleFileChange}\n//                         className=\"tax-uploader-file-input\"\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\n//                     />\n//                     {selectedFiles.length > 0 && (\n//                         <p className=\"selected-files-text\">\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\n//                         </p>\n//                     )}\n//                 </div>\n\n//                 <button\n//                     type=\"submit\"\n//                     className=\"tax-uploader-button\"\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\n//                 >\n//                     {loading ? (\n//                         <>\n//                             <div className=\"tax-uploader-spinner\"></div>\n//                             Processing with AI...\n//                         </>\n//                     ) : (\n//                         'Upload & Process Documents'\n//                     )}\n//                 </button>\n//             </form>\n\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\n//                 <div className=\"tax-uploader-loading\">\n//                     <div className=\"tax-uploader-spinner\"></div>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\n//                 <div className={`tax-uploader-message ${messageType}`}>\n//                     {message}\n//                 </div>\n//             )}\n\n//             {/* Action buttons appear only after initial document processing is successful */}\n//             {uploadResult && uploadResult.record_id && !loading && (\n//                 <div className=\"action-buttons-container\">\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGetSuggestions}\n//                         className=\"tax-uploader-button get-suggestions-button\"\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\n//                     >\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\n//                     </button>\n//                     <button\n//                         type=\"button\"\n//                         onClick={handleGenerateITRForm}\n//                         className=\"tax-uploader-button generate-itr-button\"\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\n//                     >\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\n//                     </button>\n//                 </div>\n//             )}\n\n//             {/* Display Document Processing Summary (from initial upload) */}\n//             {uploadResult && uploadResult.document_processing_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\n//                     <div className=\"document-processing-summary-section section-box\">\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\n//                             return (\n//                                 <div key={index} className=\"document-status-item\">\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\n//                                         <p><strong>Extracted Fields (Partial):</strong>\n//                                             <pre className=\"extracted-fields-preview\">\n//                                                 {JSON.stringify(doc.extracted_fields, null, 2)}\n//                                             </pre>\n//                                         </p>\n//                                     )}\n//                                     {doc.extracted_raw_text && (\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\n//                                     )}\n//                                 </div>\n//                             );\n//                         })}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\n//                 <div className=\"tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\n\n//                     <div className=\"aggregated-financial-data-section section-box\">\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\n//                         <div className=\"income-details-section\">\n//                             <h5>Income Details</h5>\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth || 'N/A'}</p>\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p>\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_gross_income)}</p>\n//                         </div>\n\n//                         <div className=\"deductions-section\">\n//                             <h5>Deductions Claimed</h5>\n//                             <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p>\n//                             <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\n//                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\n//                             <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\n//                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\n//                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\n//                             <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\n//                             <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\n//                             <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\n//                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\n//                             <p><strong>Total Deductions (Aggregated):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_deductions)}</p>\n//                         </div>\n\n//                         <div className=\"taxation-summary-section\">\n//                             <h5>Tax Payments & Regime</h5>\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tax_paid_credit)}</p>\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\n//                         </div>\n//                     </div>\n\n//                     <div className=\"final-tax-computation-section section-box\">\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Calculated Gross Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Calculated Total Deductions:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Estimated Tax Payable (Before Credits):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Total Tax Paid Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tax_paid_credit)}</p>\n//                         </div>\n//                         <div className=\"computation-detail\">\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.predicted_tax_regime || 'N/A'}</span></p>\n//                         </div>\n//                         <div className=\"final-amount-box\">\n//                             {uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && (\n//                                 <p className=\"refund-amount\">\n//                                     <strong>Refund Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)}\n//                                 </p>\n//                             )}\n//                             {uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && (\n//                                 <p className=\"tax-due-amount\">\n//                                     <strong>Additional Tax Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)}\n//                                 </p>\n//                             )}\n//                         </div>\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\n//                             <p className=\"computation-notes\">\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\n//                             </p>\n//                         )}\n//                         {uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && (\n//                                 <div className=\"detailed-calculation-section mt-4\">\n//                                     <h5>Detailed Calculation Steps:</h5>\n//                                     <ul className=\"list-disc list-inside text-sm pl-4\">\n//                                         {uploadResult.final_tax_computation_summary.calculation_details.map((detail, index) => (\n//                                             <li key={index} className=\"mb-1\">{detail}</li>\n//                                         ))}\n//                                     </ul>\n//                                 </div>\n//                             )}\n//                     </div>\n//                 </div>\n//             )}\n\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\n//             {suggestionsResult && !isGeneratingSuggestions && (\n//                 <div className=\"suggestions-output tax-summary-output\">\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\n//                     <div className=\"section-box\">\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\n//                             <>\n//                                 <h4>Based on Gemini AI:</h4>\n//                                 <ul className=\"suggestions-list\">\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\n//                                         <li key={index}>{suggestion}</li>\n//                                     ))}\n//                                 </ul>\n//                             </>\n//                         ) : (\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\n//                         )}\n\n//                         {suggestionsResult.gemini_regime_analysis && (\n//                             <div className=\"gemini-regime-analysis\">\n//                                 <h4>Gemini's Regime Analysis:</h4>\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\n//                             </div>\n//                         )}\n\n//                         {suggestionsResult.ml_prediction_summary && (\n//                             <>\n//                                 <h4>ML Model Prediction:</h4>\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\n//                                 )}\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\n//                                 )}\n//                             </>\n//                         )}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n// export default TaxUploader;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaxUploader = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\n  const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary, aggregated_data, computation_summary)\n  const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\n  const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\n  const [isGeneratingITR, setIsGeneratingITR] = useState(false);\n  const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\n\n  // List of common document types for the dropdown\n  const documentTypes = ['Auto-Detect',\n  // Default option, AI attempts to detect\n  'Form 16', 'Bank Statement', 'Form 26AS', 'Salary Slip', 'Investment Proof', 'Home Loan Statement', 'Other Document'];\n\n  // Helper function to safely format currency values\n  const formatCurrency = value => {\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\n      return 'N/A';\n    }\n    return parseFloat(value).toLocaleString('en-IN', {\n      style: 'currency',\n      currency: 'INR',\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2\n    });\n  };\n  const handleFileChange = event => {\n    setSelectedFiles(Array.from(event.target.files));\n    // Clear all previous results/messages on new file selection\n    setMessage('');\n    setMessageType('');\n    setUploadResult(null);\n    setSuggestionsResult(null);\n    setIsGeneratingSuggestions(false);\n    setIsGeneratingITR(false);\n  };\n  const handleDocumentTypeChange = event => {\n    setDocumentTypeHint(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedFiles.length === 0) {\n      setMessage('Please select at least one file.');\n      setMessageType('error');\n      return;\n    }\n    setLoading(true);\n    setMessage('Uploading and processing documents with AI...');\n    setMessageType('info');\n    setUploadResult(null); // Clear previous results\n    setSuggestionsResult(null);\n    setIsGeneratingSuggestions(false);\n    setIsGeneratingITR(false);\n    const formData = new FormData();\n    selectedFiles.forEach(file => {\n      formData.append('documents', file);\n    });\n    formData.append('document_type', documentTypeHint);\n    const jwt_token = Cookies.get('jwt_token');\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      if (jwt_token) {\n        config.headers['Authorization'] = `Bearer ${jwt_token}`;\n      }\n      const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\n      if (response.data.status === 'success' || response.data.status === 'partial_success') {\n        setMessage(response.data.message || 'Documents processed and data saved successfully!');\n        setMessageType('success');\n        setUploadResult(response.data); // Store the entire response for display\n        setSelectedFiles([]);\n        document.getElementById('file-input').value = '';\n      } else {\n        setMessage(response.data.message || 'An unknown error occurred during processing.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      if (error.response) {\n        if (error.response.status === 401) {\n          setMessage('Authentication required. Please log in.');\n          Cookies.remove('jwt_token');\n          window.location.href = '/login';\n        } else if (error.response.data && error.response.data.message) {\n          setMessage(`Error: ${error.response.data.message}`);\n        } else {\n          setMessage(`Server responded with status ${error.response.status}`);\n        }\n      } else {\n        setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\n      }\n      setMessageType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGetSuggestions = async () => {\n    if (!uploadResult || !uploadResult.record_id) {\n      setMessage('Please upload and process documents first to get suggestions.');\n      setMessageType('error');\n      return;\n    }\n    setIsGeneratingSuggestions(true);\n    setMessage('Generating AI-powered suggestions and ML predictions...');\n    setMessageType('info');\n    setSuggestionsResult(null); // Clear previous suggestions\n\n    const jwt_token = Cookies.get('jwt_token');\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${jwt_token}`\n        }\n      };\n      const payload = {\n        record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\n      };\n      const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\n      if (response.data.status === 'success') {\n        setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\n        setMessageType('success');\n        setSuggestionsResult(response.data); // Store the full suggestions result\n      } else {\n        setMessage(response.data.message || 'Failed to get suggestions.');\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('Suggestions error:', error);\n      if (error.response) {\n        if (error.response.status === 401) {\n          setMessage('Authentication required. Please log in.');\n          Cookies.remove('jwt_token');\n          window.location.href = '/login';\n        } else if (error.response.data && error.response.data.message) {\n          setMessage(`Error: ${error.response.data.message}`);\n        } else {\n          setMessage(`Server responded with status ${error.response.status}`);\n        }\n      } else {\n        setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\n      }\n      setMessageType('error');\n    } finally {\n      setIsGeneratingSuggestions(false);\n    }\n  };\n  const handleGenerateITRForm = async () => {\n    if (!uploadResult || !uploadResult.record_id) {\n      setMessage('Please upload and process documents first to generate ITR form.');\n      setMessageType('error');\n      return;\n    }\n    setIsGeneratingITR(true);\n    setMessage('Generating ITR form...');\n    setMessageType('info');\n    const jwt_token = Cookies.get('jwt_token');\n    try {\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${jwt_token}`\n        },\n        responseType: 'blob' // Important for receiving a file\n      };\n\n      // Fetch the ITR form using the record_id obtained after saving\n      const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\n      if (response.status === 200) {\n        const blob = new Blob([response.data], {\n          type: 'application/pdf'\n        });\n        const downloadUrl = window.URL.createObjectURL(blob);\n        const contentDisposition = response.headers['content-disposition'];\n        let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\n\n        if (contentDisposition) {\n          const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\n          if (filenameMatch && filenameMatch[1]) {\n            filename = filenameMatch[1];\n          }\n        }\n        const link = document.createElement('a');\n        link.href = downloadUrl;\n        link.setAttribute('download', filename);\n        document.body.appendChild(link);\n        link.click();\n        link.remove();\n        window.URL.revokeObjectURL(downloadUrl);\n        setMessage('ITR form generated and downloaded successfully!');\n        setMessageType('success');\n      } else {\n        const errorData = await new Response(response.data).text(); // Read blob as text for error\n        setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\n        setMessageType('error');\n      }\n    } catch (error) {\n      console.error('ITR generation error:', error);\n      if (axios.isAxiosError(error) && error.response && error.response.data) {\n        const reader = new FileReader();\n        reader.onload = () => {\n          try {\n            const errorJson = JSON.parse(reader.result);\n            setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\n          } catch (e) {\n            setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\n          }\n        };\n        reader.readAsText(error.response.data);\n      } else {\n        setMessage('Network error or server unavailable during ITR form generation.');\n      }\n      setMessageType('error');\n    } finally {\n      setIsGeneratingITR(false);\n    }\n  };\n\n  // Helper function to render extracted fields dynamically\n  const renderExtractedFields = fields => {\n    if (!fields) return null;\n    const fieldOrder = [\n    // Personal & Employer Info\n    \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\", \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\n    // Financial Years & Period\n    \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\n    // Income\n    \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\", \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\", \"total_exempt_allowances\", \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\", \"gross_total_income_as_per_document\",\n    // Deductions\n    \"professional_tax\", \"interest_on_housing_loan_self_occupied\", \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\", \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\", \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\", \"epf_contribution\", \"esi_contribution\",\n    // Tax Paid\n    \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\", \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\", \"advance_tax\", \"self_assessment_tax\",\n    // Other Tax Info\n    \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\", \"net_amount_payable\", \"days_present\", \"overtime_hours\",\n    // Bank Statement Details\n    \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\", \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"];\n\n    // Define display names for better readability\n    const displayNames = {\n      \"name_of_employee\": \"Name of Employee\",\n      \"pan_of_employee\": \"PAN of Employee\",\n      \"date_of_birth\": \"Date of Birth\",\n      \"gender\": \"Gender\",\n      \"residential_status\": \"Residential Status\",\n      \"employer_name\": \"Employer Name\",\n      \"employer_address\": \"Employer Address\",\n      \"pan_of_deductor\": \"PAN of Deductor\",\n      \"tan_of_deductor\": \"TAN of Deductor\",\n      \"designation_of_employee\": \"Designation\",\n      \"financial_year\": \"Financial Year\",\n      \"assessment_year\": \"Assessment Year\",\n      \"period_from\": \"Period From\",\n      \"period_to\": \"Period To\",\n      \"statement_start_date\": \"Statement Start Date\",\n      \"statement_end_date\": \"Statement End Date\",\n      \"gross_salary_total\": \"Gross Salary Total\",\n      \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\n      \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\n      \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\n      \"basic_salary\": \"Basic Salary\",\n      \"hra_received\": \"HRA Received\",\n      \"conveyance_allowance\": \"Conveyance Allowance\",\n      \"transport_allowance\": \"Transport Allowance\",\n      \"overtime_pay\": \"Overtime Pay\",\n      \"total_exempt_allowances\": \"Total Exempt Allowances\",\n      \"income_from_house_property\": \"Income from House Property\",\n      \"income_from_other_sources\": \"Income from Other Sources\",\n      \"capital_gains_long_term\": \"Long Term Capital Gains\",\n      \"capital_gains_short_term\": \"Short Term Capital Gains\",\n      \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\n      \"professional_tax\": \"Professional Tax\",\n      \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\n      \"deduction_80c\": \"Deduction 80C\",\n      \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\n      \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\n      \"deduction_80ccc\": \"Deduction 80CCC\",\n      \"deduction_80ccd\": \"Deduction 80CCD\",\n      \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\n      \"deduction_80d\": \"Deduction 80D\",\n      \"deduction_80g\": \"Deduction 80G\",\n      \"deduction_80tta\": \"Deduction 80TTA\",\n      \"deduction_80ttb\": \"Deduction 80TTB\",\n      \"deduction_80e\": \"Deduction 80E\",\n      \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\n      \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\n      \"epf_contribution\": \"EPF Contribution\",\n      \"esi_contribution\": \"ESI Contribution\",\n      \"total_tds\": \"Total TDS\",\n      \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\n      \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\n      \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\n      \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\n      \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\n      \"advance_tax\": \"Advance Tax\",\n      \"self_assessment_tax\": \"Self-Assessment Tax\",\n      \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\n      \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\n      \"refund_status_as_per_document\": \"Refund Status (Doc)\",\n      \"tax_regime_chosen\": \"Tax Regime Chosen\",\n      \"net_amount_payable\": \"Net Amount Payable\",\n      \"days_present\": \"Days Present\",\n      \"overtime_hours\": \"Overtime Hours\",\n      \"account_holder_name\": \"Account Holder Name\",\n      \"account_number\": \"Account Number\",\n      \"ifsc_code\": \"IFSC Code\",\n      \"bank_name\": \"Bank Name\",\n      \"branch_address\": \"Branch Address\",\n      \"opening_balance\": \"Opening Balance\",\n      \"closing_balance\": \"Closing Balance\",\n      \"total_deposits\": \"Total Deposits\",\n      \"total_withdrawals\": \"Total Withdrawals\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        padding: 0\n      },\n      children: fieldOrder.map(key => {\n        let value = fields[key];\n        // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\n        // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\n        if (value === null || value === undefined || typeof value === 'string' && value.toLowerCase() === 'null') {\n          return null;\n        }\n\n        // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\n        if (typeof value === 'number') {\n          if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') || key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') || key.includes('overtime_pay') || key.includes('net_amount_payable')) {\n            // Display 0.0 for actual zero financial values, otherwise format currency\n            value = formatCurrency(value);\n          } else {\n            // For other numeric fields, just display the number directly\n            value = value.toString();\n          }\n        }\n\n        // Special handling for transaction_summary if it's an array and not empty\n        if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [displayNames[key] || key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2416,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n              className: \"extracted-fields-preview mt-2\",\n              children: JSON.stringify(value.map(tx => ({\n                date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\",\n                // Format date\n                description: tx.description,\n                amount: formatCurrency(tx.amount)\n              })), null, 2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2417,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2415,\n            columnNumber: 29\n          }, this);\n        }\n\n        // Filter out empty arrays as well\n        if (Array.isArray(value) && value.length === 0) {\n          return null;\n        }\n\n        // Render other fields if their value is not \"null\" (string) or empty string\n        if (typeof value === 'string' && value.trim() === '') {\n          return null;\n        }\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [displayNames[key] || key, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2440,\n            columnNumber: 29\n          }, this), \" \", value]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2439,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2389,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tax-uploader-container section-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n                /* General Body Styling */\n                body {\n                    font-family: 'Inter', sans-serif;\n                    background-color: #f0f2f5;\n                    margin: 0;\n                    padding: 20px;\n                    color: #333;\n                    line-height: 1.6;\n                }\n\n                /* Section Box Styling */\n                .section-box {\n                    background-color: #ffffff;\n                    padding: 25px;\n                    border-radius: 12px;\n                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n                    margin-bottom: 25px;\n                    border: 1px solid #e0e0e0;\n                }\n\n                /* Tax Uploader Container */\n                .tax-uploader-container {\n                    max-width: 900px;\n                    margin: 30px auto;\n                    padding: 30px;\n                    background-color: #fff;\n                    border-radius: 15px;\n                    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\n                    border: 1px solid #d0d0d0;\n                }\n\n                .tax-uploader-title {\n                    text-align: center;\n                    color: #2c3e50;\n                    margin-bottom: 30px;\n                    font-size: 2.2em;\n                    font-weight: 700;\n                    letter-spacing: -0.5px;\n                }\n\n                /* Form Group */\n                .tax-uploader-form-group {\n                    margin-bottom: 25px;\n                }\n\n                .tax-uploader-label {\n                    display: block;\n                    margin-bottom: 10px;\n                    font-weight: 600;\n                    color: #34495e;\n                    font-size: 1.1em;\n                }\n\n                .tax-uploader-file-input {\n                    display: block;\n                    width: 100%;\n                    padding: 12px;\n                    border: 1px solid #ced4da;\n                    border-radius: 8px;\n                    font-size: 1em;\n                    color: #495057;\n                    background-color: #f8f9fa;\n                    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n                }\n\n                .tax-uploader-file-input:focus {\n                    border-color: #80bdff;\n                    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\n                    outline: none;\n                }\n\n                .selected-files-text {\n                    margin-top: 10px;\n                    font-size: 0.95em;\n                    color: #555;\n                    font-style: italic;\n                }\n\n                /* Buttons */\n                .tax-uploader-button {\n                    display: block;\n                    width: 100%;\n                    padding: 14px 20px;\n                    background-color: #007bff;\n                    color: white;\n                    border: none;\n                    border-radius: 8px;\n                    font-size: 1.1em;\n                    font-weight: 600;\n                    cursor: pointer;\n                    transition: background-color 0.3s ease, transform 0.2s ease;\n                    box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\n                    margin-top: 20px;\n                }\n\n                .tax-uploader-button:hover {\n                    background-color: #0056b3;\n                    transform: translateY(-2px);\n                }\n\n                .tax-uploader-button:disabled {\n                    background-color: #a0c9f1;\n                    cursor: not-allowed;\n                    box-shadow: none;\n                    transform: none;\n                }\n\n                .action-buttons-container {\n                    display: flex;\n                    flex-wrap: wrap;\n                    gap: 15px;\n                    margin-top: 30px;\n                    justify-content: center;\n                }\n\n                .action-buttons-container .tax-uploader-button {\n                    flex: 1;\n                    min-width: 250px;\n                    margin: 0; /* Override default margin */\n                }\n\n                .get-suggestions-button {\n                    background-color: #28a745;\n                    box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\n                }\n\n                .get-suggestions-button:hover {\n                    background-color: #218838;\n                }\n\n                .generate-itr-button {\n                    background-color: #6c757d;\n                    box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\n                }\n\n                .generate-itr-button:hover {\n                    background-color: #5a6268;\n                }\n\n                /* Loading Spinner */\n                .tax-uploader-loading {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    margin-top: 25px;\n                    font-size: 1.1em;\n                    color: #007bff;\n                    font-weight: 500;\n                }\n\n                .tax-uploader-spinner {\n                    border: 4px solid #f3f3f3;\n                    border-top: 4px solid #007bff;\n                    border-radius: 50%;\n                    width: 24px;\n                    height: 24px;\n                    animation: spin 1s linear infinite;\n                    margin-right: 10px;\n                }\n\n                @keyframes spin {\n                    0% { transform: rotate(0deg); }\n                    100% { transform: rotate(360deg); }\n                }\n\n                /* Messages */\n                .tax-uploader-message {\n                    padding: 15px;\n                    margin-top: 25px;\n                    border-radius: 8px;\n                    font-size: 1em;\n                    font-weight: 500;\n                    text-align: center;\n                }\n\n                .tax-uploader-message.info {\n                    background-color: #e7f3ff;\n                    color: #0056b3;\n                    border: 1px solid #b3d7ff;\n                }\n\n                .tax-uploader-message.success {\n                    background-color: #d4edda;\n                    color: #155724;\n                    border: 1px solid #c3e6cb;\n                }\n\n                .tax-uploader-message.error {\n                    background-color: #f8d7da;\n                    color: #721c24;\n                    border: 1px solid #f5c6cb;\n                }\n\n                /* Tax Summary Output */\n                .tax-summary-output {\n                    margin-top: 40px;\n                    background-color: #f9f9f9;\n                    padding: 25px;\n                    border-radius: 12px;\n                    box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\n                    border: 1px solid #eee;\n                }\n\n                .tax-summary-output h3 {\n                    color: #2c3e50;\n                    margin-bottom: 25px;\n                    text-align: center;\n                    font-size: 2em;\n                    font-weight: 700;\n                }\n\n                .document-processing-summary-section,\n                .aggregated-financial-data-section,\n                .final-tax-computation-section,\n                .suggestions-output .section-box {\n                    margin-top: 20px;\n                    padding: 20px;\n                    background-color: #ffffff;\n                    border-radius: 10px;\n                    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\n                    border: 1px solid #e9ecef;\n                }\n\n                .section-title {\n                    color: #34495e;\n                    font-size: 1.6em;\n                    margin-bottom: 20px;\n                    border-bottom: 2px solid #f0f2f5;\n                    padding-bottom: 10px;\n                    text-align: center;\n                }\n\n                .document-status-item {\n                    background-color: #fdfdfd;\n                    padding: 15px;\n                    border-radius: 8px;\n                    margin-bottom: 15px;\n                    border: 1px solid #f0f0f0;\n                    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\n                }\n\n                .document-status-item p {\n                    margin: 5px 0;\n                    font-size: 0.95em;\n                    color: #444;\n                }\n\n                .document-status-item strong {\n                    color: #2c3e50;\n                }\n\n                .status-success {\n                    color: #28a745;\n                    font-weight: 700;\n                }\n\n                .status-warning {\n                    color: #ffc107;\n                    font-weight: 700;\n                }\n\n                .status-error {\n                    color: #dc3545;\n                    font-weight: 700;\n                }\n\n                .extracted-fields-preview, .extracted-raw-text-preview {\n                    background-color: #e9ecef;\n                    border: 1px solid #dee2e6;\n                    padding: 10px;\n                    border-radius: 5px;\n                    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\n                    font-size: 0.85em;\n                    white-space: pre-wrap; /* Ensures text wraps */\n                    word-break: break-all; /* Breaks words if necessary */\n                    max-height: 200px; /* Limit height for long outputs */\n                    overflow-y: auto; /* Add scroll for overflow */\n                }\n\n                .income-details-section,\n                .deductions-section,\n                .taxation-summary-section {\n                    margin-bottom: 25px;\n                    padding: 15px;\n                    border: 1px solid #f0f0f0;\n                    border-radius: 8px;\n                    background-color: #fdfdfd;\n                }\n\n                .income-details-section h5,\n                .deductions-section h5,\n                .taxation-summary-section h5 {\n                    color: #007bff;\n                    font-size: 1.3em;\n                    margin-bottom: 15px;\n                    border-bottom: 1px solid #e0e0e0;\n                    padding-bottom: 8px;\n                }\n\n                .income-details-section p,\n                .deductions-section p,\n                .taxation-summary-section p {\n                    margin: 8px 0;\n                    font-size: 0.98em;\n                    color: #333;\n                }\n\n                .computation-detail {\n                    margin-bottom: 10px;\n                    padding-bottom: 5px;\n                    border-bottom: 1px dashed #e9ecef;\n                }\n\n                .computation-detail:last-child {\n                    border-bottom: none;\n                }\n\n                .computation-detail strong {\n                    color: #2c3e50;\n                }\n\n                .final-amount-box {\n                    margin-top: 20px;\n                    padding: 15px;\n                    border-radius: 8px;\n                    background-color: #e9f7ef; /* Light green for positive outcome */\n                    border: 1px solid #c3e6cb;\n                    text-align: center;\n                    font-size: 1.1em;\n                    font-weight: 600;\n                }\n\n                .final-amount-box .tax-due-amount {\n                    background-color: #f8d7da; /* Light red for tax due */\n                    color: #721c24;\n                    border: 1px solid #f5c6cb;\n                    padding: 10px;\n                    border-radius: 5px;\n                    margin-top: 10px;\n                }\n\n                .final-amount-box .refund-amount {\n                    background-color: #d4edda; /* Light green for refund */\n                    color: #155724;\n                    border: 1px solid #c3e6cb;\n                    padding: 10px;\n                    border-radius: 5px;\n                    margin-top: 10px;\n                }\n\n                .computation-notes {\n                    margin-top: 20px;\n                    padding: 10px;\n                    background-color: #f0f8ff;\n                    border: 1px solid #d1e7fd;\n                    border-radius: 8px;\n                    font-size: 0.9em;\n                    color: #444;\n                    font-style: italic;\n                }\n\n                .highlight-regime {\n                    font-weight: bold;\n                    color: #007bff;\n                }\n\n                /* Suggestions specific styling */\n                .suggestions-list {\n                    list-style-type: disc;\n                    margin-left: 20px;\n                    padding-left: 0;\n                }\n\n                .suggestions-list li {\n                    margin-bottom: 8px;\n                    color: #333;\n                }\n\n                .gemini-regime-analysis {\n                    margin-top: 20px;\n                    padding: 15px;\n                    background-color: #e6f7ff;\n                    border: 1px solid #91d5ff;\n                    border-radius: 8px;\n                }\n\n                .gemini-regime-analysis h4 {\n                    color: #0056b3;\n                    margin-bottom: 10px;\n                }\n\n                /* Responsive Adjustments */\n                @media (max-width: 768px) {\n                    .tax-uploader-container {\n                        margin: 20px 10px;\n                        padding: 20px;\n                    }\n\n                    .tax-uploader-title {\n                        font-size: 1.8em;\n                    }\n\n                    .tax-uploader-button {\n                        padding: 12px 15px;\n                        font-size: 1em;\n                    }\n\n                    .action-buttons-container {\n                        flex-direction: column;\n                        gap: 10px;\n                    }\n\n                    .action-buttons-container .tax-uploader-button {\n                        min-width: unset;\n                    }\n\n                    .tax-summary-output h3 {\n                        font-size: 1.6em;\n                    }\n\n                    .section-title {\n                        font-size: 1.4em;\n                    }\n\n                    .income-details-section h5,\n                    .deductions-section h5,\n                    .taxation-summary-section h5 {\n                        font-size: 1.1em;\n                    }\n                }\n\n                @media (max-width: 480px) {\n                    body {\n                        padding: 10px;\n                    }\n\n                    .tax-uploader-container {\n                        margin: 10px;\n                        padding: 15px;\n                    }\n\n                    .tax-uploader-title {\n                        font-size: 1.5em;\n                    }\n\n                    .tax-uploader-button {\n                        font-size: 0.9em;\n                        padding: 10px 12px;\n                    }\n\n                    .tax-uploader-message {\n                        font-size: 0.9em;\n                        padding: 10px;\n                    }\n                }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2452,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"tax-uploader-title\",\n      children: \"Upload Tax Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2909,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tax-uploader-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"documentType\",\n          className: \"tax-uploader-label\",\n          children: \"Specify Document Type (Optional, for better accuracy):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2913,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"documentType\",\n          value: documentTypeHint,\n          onChange: handleDocumentTypeChange,\n          className: \"tax-uploader-file-input\",\n          disabled: loading || isGeneratingSuggestions || isGeneratingITR,\n          children: documentTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2924,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2916,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2912,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tax-uploader-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-input\",\n          className: \"tax-uploader-label\",\n          children: \"Choose Files (select multiple with Ctrl/Cmd+Click):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2930,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-input\",\n          type: \"file\",\n          multiple: true,\n          onChange: handleFileChange,\n          className: \"tax-uploader-file-input\",\n          disabled: loading || isGeneratingSuggestions || isGeneratingITR,\n          accept: \".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2931,\n          columnNumber: 21\n        }, this), selectedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"selected-files-text\",\n          children: [\"Selected: \", selectedFiles.map(file => file.name).join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2941,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2929,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"tax-uploader-button\",\n        disabled: loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tax-uploader-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2954,\n            columnNumber: 29\n          }, this), \"Processing with AI...\"]\n        }, void 0, true) : 'Upload & Process Documents'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2947,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2910,\n      columnNumber: 13\n    }, this), (loading || isGeneratingSuggestions || isGeneratingITR) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tax-uploader-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tax-uploader-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2965,\n        columnNumber: 21\n      }, this), message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2964,\n      columnNumber: 17\n    }, this), message && !loading && !isGeneratingSuggestions && !isGeneratingITR && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tax-uploader-message ${messageType}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2971,\n      columnNumber: 17\n    }, this), uploadResult && uploadResult.record_id && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGetSuggestions,\n        className: \"tax-uploader-button get-suggestions-button\",\n        disabled: isGeneratingSuggestions || isGeneratingITR,\n        children: isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2979,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGenerateITRForm,\n        className: \"tax-uploader-button generate-itr-button\",\n        disabled: isGeneratingITR || isGeneratingSuggestions,\n        children: isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2987,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2978,\n      columnNumber: 17\n    }, this), uploadResult && uploadResult.document_processing_summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tax-summary-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tax-uploader-title\",\n        style: {\n          marginTop: '30px',\n          fontSize: '1.8em'\n        },\n        children: \"Document Processing Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3001,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"document-processing-summary-section section-box\",\n        children: uploadResult.document_processing_summary.map((doc, index) => {\n          var _doc$status;\n          const statusClass = doc.status === 'success' ? 'status-success' : doc.status === 'warning' ? 'status-warning' : 'status-error';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"document-status-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"File:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3008,\n                columnNumber: 40\n              }, this), \" \", doc.filename, \" (\", doc.stored_path && /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `http://127.0.0.1:5000${doc.stored_path}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"View Stored Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3008,\n                columnNumber: 99\n              }, this), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3008,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3009,\n                columnNumber: 40\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: statusClass,\n                children: ((_doc$status = doc.status) === null || _doc$status === void 0 ? void 0 : _doc$status.toUpperCase()) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3009,\n                columnNumber: 65\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3009,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Identified Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3010,\n                columnNumber: 40\n              }, this), \" \", doc.identified_type || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3010,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Message:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3011,\n                columnNumber: 40\n              }, this), \" \", doc.message || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3011,\n              columnNumber: 37\n            }, this), doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Extracted Fields:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3013,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"extracted-fields-preview\",\n                children: renderExtractedFields(doc.extracted_fields)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3014,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3013,\n              columnNumber: 41\n            }, this), doc.extracted_raw_text && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Extracted Raw Text Snippet:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 3020,\n                columnNumber: 44\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"extracted-raw-text-preview\",\n                children: [doc.extracted_raw_text.substring(0, 200), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 3020,\n                columnNumber: 89\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 3020,\n              columnNumber: 41\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3007,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3002,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3000,\n      columnNumber: 17\n    }, this), uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tax-summary-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tax-uploader-title\",\n        style: {\n          marginTop: '30px',\n          fontSize: '1.8em'\n        },\n        children: \"Aggregated & Rule-Based Computation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3032,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aggregated-financial-data-section section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"section-title\",\n          children: \"Aggregated Financial Data Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3035,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"income-details-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Income Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3037,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Financial Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3038,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.financial_year || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3038,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Assessment Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3039,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.assessment_year || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3039,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3040,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.name_of_employee || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3040,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PAN:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3041,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.pan_of_employee || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3041,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date of Birth:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3042,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? uploadResult.aggregated_financial_data.date_of_birth : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3042,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3043,\n              columnNumber: 32\n            }, this), \" \", uploadResult.aggregated_financial_data.Age || 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3043,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Gross Annual Salary:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3044,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3044,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Exempt Allowances:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3045,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3045,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Income from House Property:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3046,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3046,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Income from Other Sources:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3047,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3047,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Long Term Capital Gains:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3048,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3048,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Short Term Capital Gains:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3049,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3049,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Gross Income (Aggregated):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3050,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3050,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3036,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"deductions-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Deductions Claimed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3053,\n            columnNumber: 29\n          }, this), uploadResult.aggregated_financial_data.standard_deduction > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Standard Deduction:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3055,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3055,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.professional_tax > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Professional Tax:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3058,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.professional_tax)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3058,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.interest_on_housing_loan_24b !== 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Interest on Home Loan (Section 24(b)):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3061,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3061,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80C > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80C Investments:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3064,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3064,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80CCD1B > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80CCD1B:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3067,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3067,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80D > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80D (Health Insurance):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3070,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3070,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80G > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80G:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3073,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3073,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80TTA > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80TTA:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3076,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3076,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80TTB > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80TTB:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3079,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3079,\n            columnNumber: 33\n          }, this), uploadResult.aggregated_financial_data.deduction_80E > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Section 80E (Education Loan Interest):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3082,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3082,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total Deductions (Aggregated for Display):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3084,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.total_deductions)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3084,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3052,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taxation-summary-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Tax Payments & Regime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3087,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Total TDS Credit:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3088,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3088,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Advance Tax Paid:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3089,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.advance_tax)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3089,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Self-Assessment Tax Paid:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3090,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3090,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tax Regime Chosen (from docs):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3091,\n              columnNumber: 32\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight-regime\",\n              children: uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3091,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3091,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3086,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3034,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"final-tax-computation-section section-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"section-title\",\n          children: \"Final Tax Computation Summary (Rule-Based)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3095,\n          columnNumber: 25\n        }, this), uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"computation-details-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Calculation Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3098,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyleType: 'decimal',\n              marginLeft: '20px',\n              paddingLeft: '0'\n            },\n            children: uploadResult.final_tax_computation_summary.calculation_details.map((detail, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"computation-detail-item\",\n              children: detail\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3101,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3099,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3097,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-amount-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Computed Taxable Income:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3107,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Estimated Tax Payable:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3108,\n              columnNumber: 32\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tax Regime Considered for Rule-Based Calculation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3109,\n              columnNumber: 32\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"highlight-regime\",\n              children: uploadResult.final_tax_computation_summary.regime_considered || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3109,\n              columnNumber: 99\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3109,\n            columnNumber: 29\n          }, this), uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"refund-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Refund Due:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3112,\n              columnNumber: 37\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3111,\n            columnNumber: 33\n          }, this), uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tax-due-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Additional Tax Due:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3117,\n              columnNumber: 37\n            }, this), \" \", formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3116,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3106,\n          columnNumber: 25\n        }, this), uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"computation-notes\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3123,\n            columnNumber: 33\n          }, this), \" \", Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3122,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3094,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3031,\n      columnNumber: 17\n    }, this), suggestionsResult && !isGeneratingSuggestions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-output tax-summary-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"tax-uploader-title\",\n        style: {\n          marginTop: '30px',\n          fontSize: '1.8em'\n        },\n        children: \"AI Recommendations & Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 3133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-box\",\n        children: [suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Based on Gemini AI:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"suggestions-list\",\n            children: suggestionsResult.suggestions_from_gemini.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: suggestion\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3140,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3138,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 3145,\n          columnNumber: 29\n        }, this), suggestionsResult.gemini_regime_analysis && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gemini-regime-analysis\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Gemini's Regime Analysis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3149,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: suggestionsResult.gemini_regime_analysis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3150,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 3148,\n          columnNumber: 29\n        }, this), suggestionsResult.ml_prediction_summary && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"ML Model Prediction:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 3155,\n            columnNumber: 33\n          }, this), suggestionsResult.ml_prediction_summary.predicted_tax_regime && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Predicted Tax Regime:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3157,\n              columnNumber: 40\n            }, this), \" \", suggestionsResult.ml_prediction_summary.predicted_tax_regime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3157,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Predicted Tax Liability:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3159,\n              columnNumber: 36\n            }, this), \" \", formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3159,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"refund-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Predicted Refund Due:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3160,\n              columnNumber: 62\n            }, this), \" \", formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"tax-due-amount\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Predicted Additional Tax Due:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3161,\n              columnNumber: 63\n            }, this), \" \", formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3161,\n            columnNumber: 33\n          }, this), suggestionsResult.ml_prediction_summary.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 3163,\n              columnNumber: 40\n            }, this), \" \", suggestionsResult.ml_prediction_summary.notes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 3163,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 3134,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 3132,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2450,\n    columnNumber: 9\n  }, this);\n};\n_s(TaxUploader, \"ab4uFg9cJWr+oIQaOjP+Gl06KFc=\");\n_c = TaxUploader;\nexport default TaxUploader;\nvar _c;\n$RefreshReg$(_c, \"TaxUploader\");","map":{"version":3,"names":["React","useState","axios","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","TaxUploader","_s","selectedFiles","setSelectedFiles","loading","setLoading","message","setMessage","messageType","setMessageType","uploadResult","setUploadResult","suggestionsResult","setSuggestionsResult","isGeneratingSuggestions","setIsGeneratingSuggestions","isGeneratingITR","setIsGeneratingITR","documentTypeHint","setDocumentTypeHint","documentTypes","formatCurrency","value","undefined","isNaN","parseFloat","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","handleFileChange","event","Array","from","target","files","handleDocumentTypeChange","handleSubmit","preventDefault","length","formData","FormData","forEach","file","append","jwt_token","get","config","headers","response","post","data","status","document","getElementById","error","console","remove","window","location","href","handleGetSuggestions","record_id","payload","handleGenerateITRForm","responseType","blob","Blob","type","downloadUrl","URL","createObjectURL","contentDisposition","filename","filenameMatch","match","link","createElement","setAttribute","body","appendChild","click","revokeObjectURL","errorData","Response","text","statusText","isAxiosError","reader","FileReader","onload","errorJson","JSON","parse","result","stringify","e","readAsText","renderExtractedFields","fields","fieldOrder","displayNames","listStyleType","padding","children","map","key","toLowerCase","includes","toString","isArray","fileName","_jsxFileName","lineNumber","columnNumber","className","tx","date","description","amount","trim","onSubmit","htmlFor","id","onChange","disabled","multiple","accept","name","join","onClick","document_processing_summary","marginTop","fontSize","doc","index","_doc$status","statusClass","stored_path","rel","toUpperCase","identified_type","extracted_fields","Object","keys","extracted_raw_text","substring","aggregated_financial_data","final_tax_computation_summary","financial_year","assessment_year","name_of_employee","pan_of_employee","date_of_birth","Age","gross_salary_total","total_exempt_allowances","income_from_house_property","income_from_other_sources","capital_gains_long_term","capital_gains_short_term","calculated_gross_income","standard_deduction","professional_tax","interest_on_housing_loan_24b","deduction_80C","deduction_80CCD1B","deduction_80D","deduction_80G","deduction_80TTA","deduction_80TTB","deduction_80E","total_deductions","total_tds_credit","advance_tax","self_assessment_tax","tax_regime_chosen","calculation_details","marginLeft","paddingLeft","detail","idx","computed_taxable_income","estimated_tax_payable","regime_considered","predicted_refund_due","predicted_additional_due","notes","suggestions_from_gemini","suggestion","gemini_regime_analysis","ml_prediction_summary","predicted_tax_regime","predicted_tax_liability","_c","$RefreshReg$"],"sources":["C:/Users/gumma/Downloads/All_Projects/GarudaTaxAi/src/components/TaxUploader/index.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n// // Header is now passed from Dashboard, so no direct import here\r\n// // The CSS is now inlined within the component's <style> tag to resolve import issues.\r\n\r\n// const TaxUploader = () => {\r\n//     const [selectedFiles, setSelectedFiles] = useState([]);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary)\r\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\r\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\r\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n//     // New state for document type hint\r\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\r\n\r\n//     // List of common document types for the dropdown\r\n//     const documentTypes = [\r\n//         'Auto-Detect', // Default option, AI attempts to detect\r\n//         'Form 16',\r\n//         'Bank Statement',\r\n//         'Form 26AS',\r\n//         'Salary Slip',\r\n//         'Investment Proof',\r\n//         'Home Loan Statement',\r\n//         'Other Document',\r\n//     ];\r\n\r\n\r\n//     // Helper function to safely format currency values\r\n//     const formatCurrency = (value) => {\r\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n//             return 'N/A';\r\n//         }\r\n//         return parseFloat(value).toLocaleString('en-IN', {\r\n//             style: 'currency',\r\n//             currency: 'INR',\r\n//             minimumFractionDigits: 2,\r\n//             maximumFractionDigits: 2,\r\n//         });\r\n//     };\r\n\r\n//     // The formatNumber function was not being used and has been removed to clear the ESLint warning.\r\n//     // If you need general number formatting in the future, you can re-add it or create a new helper.\r\n\r\n//     const handleFileChange = (event) => {\r\n//         setSelectedFiles(Array.from(event.target.files));\r\n//         // Clear all previous results/messages on new file selection\r\n//         setMessage('');\r\n//         setMessageType('');\r\n//         setUploadResult(null);\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n//     };\r\n\r\n//     // Handle document type selection\r\n//     const handleDocumentTypeChange = (event) => {\r\n//         setDocumentTypeHint(event.target.value);\r\n//     };\r\n\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         if (selectedFiles.length === 0) {\r\n//             setMessage('Please select at least one file.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setLoading(true);\r\n//         setMessage('Uploading and processing documents with AI...');\r\n//         setMessageType('info');\r\n//         setUploadResult(null); // Clear previous results\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n\r\n//         const formData = new FormData();\r\n//         selectedFiles.forEach(file => {\r\n//             formData.append('documents', file);\r\n//         });\r\n//         // Append the selected document type hint to the form data\r\n//         formData.append('document_type', documentTypeHint);\r\n\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'multipart/form-data',\r\n//                 }\r\n//             };\r\n//             if (jwt_token) {\r\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\r\n//             }\r\n\r\n//             // API call to process documents (this now only saves and returns record_id)\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\r\n\r\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\r\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\r\n//                 setMessageType('success');\r\n//                 setUploadResult(response.data); // Store the record_id and doc summary\r\n//                 // Clear selected files and file input after successful upload\r\n//                 setSelectedFiles([]);\r\n//                 document.getElementById('file-input').value = ''; // Clear the actual file input\r\n//             } else {\r\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Upload error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token'); // Clear invalid token\r\n//                     window.location.href = '/login'; // Redirect to login\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGetSuggestions = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to get suggestions.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingSuggestions(true);\r\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\r\n//         setMessageType('info');\r\n//         setSuggestionsResult(null); // Clear previous suggestions\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 }\r\n//             };\r\n\r\n//             const payload = {\r\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\r\n//             };\r\n\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\r\n\r\n//             if (response.data.status === 'success') {\r\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\r\n//                 setMessageType('success');\r\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\r\n//             } else {\r\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Suggestions error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token');\r\n//                     window.location.href = '/login';\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingSuggestions(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGenerateITRForm = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to generate ITR form.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingITR(true);\r\n//         setMessage('Generating ITR form...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 },\r\n//                 responseType: 'blob', // Important for receiving a file\r\n//             };\r\n            \r\n//             // Fetch the ITR form using the record_id obtained after saving\r\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\r\n\r\n//             if (response.status === 200) {\r\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\r\n//                 const downloadUrl = window.URL.createObjectURL(blob);\r\n//                 const contentDisposition = response.headers['content-disposition'];\r\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\r\n\r\n//                 if (contentDisposition) {\r\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\r\n//                     if (filenameMatch && filenameMatch[1]) {\r\n//                         filename = filenameMatch[1];\r\n//                     }\r\n//                 }\r\n                \r\n//                 const link = document.createElement('a');\r\n//                 link.href = downloadUrl;\r\n//                 link.setAttribute('download', filename);\r\n//                 document.body.appendChild(link);\r\n//                 link.click();\r\n//                 link.remove();\r\n//                 window.URL.revokeObjectURL(downloadUrl);\r\n\r\n//                 setMessage('ITR form generated and downloaded successfully!');\r\n//                 setMessageType('success');\r\n//             } else {\r\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\r\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('ITR generation error:', error);\r\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n//                 const reader = new FileReader();\r\n//                 reader.onload = () => {\r\n//                     try {\r\n//                         const errorJson = JSON.parse(reader.result);\r\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\r\n//                     } catch (e) {\r\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\r\n//                     }\r\n//                 };\r\n//                 reader.readAsText(error.response.data);\r\n//             } else {\r\n//                 setMessage('Network error or server unavailable during ITR form generation.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingITR(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"tax-uploader-container section-box\">\r\n//             {/* Inlined CSS for styling the component */}\r\n//             <style>{`\r\n//                 /* General Body Styling */\r\n//                 body {\r\n//                     font-family: 'Inter', sans-serif;\r\n//                     background-color: #f0f2f5;\r\n//                     margin: 0;\r\n//                     padding: 20px;\r\n//                     color: #333;\r\n//                     line-height: 1.6;\r\n//                 }\r\n\r\n//                 /* Section Box Styling */\r\n//                 .section-box {\r\n//                     background-color: #ffffff;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n//                     margin-bottom: 25px;\r\n//                     border: 1px solid #e0e0e0;\r\n//                 }\r\n\r\n//                 /* Tax Uploader Container */\r\n//                 .tax-uploader-container {\r\n//                     max-width: 900px;\r\n//                     margin: 30px auto;\r\n//                     padding: 30px;\r\n//                     background-color: #fff;\r\n//                     border-radius: 15px;\r\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n//                     border: 1px solid #d0d0d0;\r\n//                 }\r\n\r\n//                 .tax-uploader-title {\r\n//                     text-align: center;\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 30px;\r\n//                     font-size: 2.2em;\r\n//                     font-weight: 700;\r\n//                     letter-spacing: -0.5px;\r\n//                 }\r\n\r\n//                 /* Form Group */\r\n//                 .tax-uploader-form-group {\r\n//                     margin-bottom: 25px;\r\n//                 }\r\n\r\n//                 .tax-uploader-label {\r\n//                     display: block;\r\n//                     margin-bottom: 10px;\r\n//                     font-weight: 600;\r\n//                     color: #34495e;\r\n//                     font-size: 1.1em;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 12px;\r\n//                     border: 1px solid #ced4da;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     color: #495057;\r\n//                     background-color: #f8f9fa;\r\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input:focus {\r\n//                     border-color: #80bdff;\r\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n//                     outline: none;\r\n//                 }\r\n\r\n//                 .selected-files-text {\r\n//                     margin-top: 10px;\r\n//                     font-size: 0.95em;\r\n//                     color: #555;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 /* Buttons */\r\n//                 .tax-uploader-button {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 14px 20px;\r\n//                     background-color: #007bff;\r\n//                     color: white;\r\n//                     border: none;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                     cursor: pointer;\r\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\r\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\r\n//                     margin-top: 20px;\r\n//                 }\r\n\r\n//                 .tax-uploader-button:hover {\r\n//                     background-color: #0056b3;\r\n//                     transform: translateY(-2px);\r\n//                 }\r\n\r\n//                 .tax-uploader-button:disabled {\r\n//                     background-color: #a0c9f1;\r\n//                     cursor: not-allowed;\r\n//                     box-shadow: none;\r\n//                     transform: none;\r\n//                 }\r\n\r\n//                 .action-buttons-container {\r\n//                     display: flex;\r\n//                     flex-wrap: wrap;\r\n//                     gap: 15px;\r\n//                     margin-top: 30px;\r\n//                     justify-content: center;\r\n//                 }\r\n\r\n//                 .action-buttons-container .tax-uploader-button {\r\n//                     flex: 1;\r\n//                     min-width: 250px;\r\n//                     margin: 0; /* Override default margin */\r\n//                 }\r\n\r\n//                 .get-suggestions-button {\r\n//                     background-color: #28a745;\r\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\r\n//                 }\r\n\r\n//                 .get-suggestions-button:hover {\r\n//                     background-color: #218838;\r\n//                 }\r\n\r\n//                 .generate-itr-button {\r\n//                     background-color: #6c757d;\r\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\r\n//                 }\r\n\r\n//                 .generate-itr-button:hover {\r\n//                     background-color: #5a6268;\r\n//                 }\r\n\r\n//                 /* Loading Spinner */\r\n//                 .tax-uploader-loading {\r\n//                     display: flex;\r\n//                     align-items: center;\r\n//                     justify-content: center;\r\n//                     margin-top: 25px;\r\n//                     font-size: 1.1em;\r\n//                     color: #007bff;\r\n//                     font-weight: 500;\r\n//                 }\r\n\r\n//                 .tax-uploader-spinner {\r\n//                     border: 4px solid #f3f3f3;\r\n//                     border-top: 4px solid #007bff;\r\n//                     border-radius: 50%;\r\n//                     width: 24px;\r\n//                     height: 24px;\r\n//                     animation: spin 1s linear infinite;\r\n//                     margin-right: 10px;\r\n//                 }\r\n\r\n//                 @keyframes spin {\r\n//                     0% { transform: rotate(0deg); }\r\n//                     100% { transform: rotate(360deg); }\r\n//                 }\r\n\r\n//                 /* Messages */\r\n//                 .tax-uploader-message {\r\n//                     padding: 15px;\r\n//                     margin-top: 25px;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     font-weight: 500;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.info {\r\n//                     background-color: #e7f3ff;\r\n//                     color: #0056b3;\r\n//                     border: 1px solid #b3d7ff;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.success {\r\n//                     background-color: #d4edda;\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.error {\r\n//                     background-color: #f8d7da;\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                 }\r\n\r\n//                 /* Tax Summary Output */\r\n//                 .tax-summary-output {\r\n//                     margin-top: 40px;\r\n//                     background-color: #f9f9f9;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\r\n//                     border: 1px solid #eee;\r\n//                 }\r\n\r\n//                 .tax-summary-output h3 {\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 25px;\r\n//                     text-align: center;\r\n//                     font-size: 2em;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .document-processing-summary-section,\r\n//                 .aggregated-financial-data-section,\r\n//                 .final-tax-computation-section,\r\n//                 .suggestions-output .section-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 20px;\r\n//                     background-color: #ffffff;\r\n//                     border-radius: 10px;\r\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n//                     border: 1px solid #e9ecef;\r\n//                 }\r\n\r\n//                 .section-title {\r\n//                     color: #34495e;\r\n//                     font-size: 1.6em;\r\n//                     margin-bottom: 20px;\r\n//                     border-bottom: 2px solid #f0f2f5;\r\n//                     padding-bottom: 10px;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .document-status-item {\r\n//                     background-color: #fdfdfd;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     margin-bottom: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\r\n//                 }\r\n\r\n//                 .document-status-item p {\r\n//                     margin: 5px 0;\r\n//                     font-size: 0.95em;\r\n//                     color: #444;\r\n//                 }\r\n\r\n//                 .document-status-item strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .status-success {\r\n//                     color: #28a745;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-warning {\r\n//                     color: #ffc107;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-error {\r\n//                     color: #dc3545;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\r\n//                     background-color: #e9ecef;\r\n//                     border: 1px solid #dee2e6;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n//                     font-size: 0.85em;\r\n//                     white-space: pre-wrap; /* Ensures text wraps */\r\n//                     word-break: break-all; /* Breaks words if necessary */\r\n//                     max-height: 200px; /* Limit height for long outputs */\r\n//                     overflow-y: auto; /* Add scroll for overflow */\r\n//                 }\r\n\r\n//                 .income-details-section,\r\n//                 .deductions-section,\r\n//                 .taxation-summary-section {\r\n//                     margin-bottom: 25px;\r\n//                     padding: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     border-radius: 8px;\r\n//                     background-color: #fdfdfd;\r\n//                 }\r\n\r\n//                 .income-details-section h5,\r\n//                 .deductions-section h5,\r\n//                 .taxation-summary-section h5 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.3em;\r\n//                     margin-bottom: 15px;\r\n//                     border-bottom: 1px solid #e0e0e0;\r\n//                     padding-bottom: 8px;\r\n//                 }\r\n\r\n//                 .income-details-section p,\r\n//                 .deductions-section p,\r\n//                 .taxation-summary-section p {\r\n//                     margin: 8px 0;\r\n//                     font-size: 0.98em;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .computation-detail {\r\n//                     margin-bottom: 10px;\r\n//                     padding-bottom: 5px;\r\n//                     border-bottom: 1px dashed #e9ecef;\r\n//                 }\r\n\r\n//                 .computation-detail:last-child {\r\n//                     border-bottom: none;\r\n//                 }\r\n\r\n//                 .computation-detail strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .final-amount-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\r\n//                     border: 1px solid #c3e6cb;\r\n//                     text-align: center;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                 }\r\n\r\n//                 .final-amount-box .tax-due-amount {\r\n//                     background-color: #f8d7da; /* Light red for tax due */\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .final-amount-box .refund-amount {\r\n//                     background-color: #d4edda; /* Light green for refund */\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .computation-notes {\r\n//                     margin-top: 20px;\r\n//                     padding: 10px;\r\n//                     background-color: #f0f8ff;\r\n//                     border: 1px solid #d1e7fd;\r\n//                     border-radius: 8px;\r\n//                     font-size: 0.9em;\r\n//                     color: #444;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 .highlight-regime {\r\n//                     font-weight: bold;\r\n//                     color: #007bff;\r\n//                 }\r\n\r\n//                 /* Suggestions specific styling */\r\n//                 .suggestions-list {\r\n//                     list-style-type: disc;\r\n//                     margin-left: 20px;\r\n//                     padding-left: 0;\r\n//                 }\r\n\r\n//                 .suggestions-list li {\r\n//                     margin-bottom: 8px;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     background-color: #e6f7ff;\r\n//                     border: 1px solid #91d5ff;\r\n//                     border-radius: 8px;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis h4 {\r\n//                     color: #0056b3;\r\n//                     margin-bottom: 10px;\r\n//                 }\r\n\r\n//                 /* Responsive Adjustments */\r\n//                 @media (max-width: 768px) {\r\n//                     .tax-uploader-container {\r\n//                         margin: 20px 10px;\r\n//                         padding: 20px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.8em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         padding: 12px 15px;\r\n//                         font-size: 1em;\r\n//                     }\r\n\r\n//                     .action-buttons-container {\r\n//                         flex-direction: column;\r\n//                         gap: 10px;\r\n//                     }\r\n\r\n//                     .action-buttons-container .tax-uploader-button {\r\n//                         min-width: unset;\r\n//                     }\r\n\r\n//                     .tax-summary-output h3 {\r\n//                         font-size: 1.6em;\r\n//                     }\r\n\r\n//                     .section-title {\r\n//                         font-size: 1.4em;\r\n//                     }\r\n\r\n//                     .income-details-section h5,\r\n//                     .deductions-section h5,\r\n//                     .taxation-summary-section h5 {\r\n//                         font-size: 1.1em;\r\n//                     }\r\n//                 }\r\n\r\n//                 @media (max-width: 480px) {\r\n//                     body {\r\n//                         padding: 10px;\r\n//                     }\r\n\r\n//                     .tax-uploader-container {\r\n//                         margin: 10px;\r\n//                         padding: 15px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.5em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px 12px;\r\n//                     }\r\n\r\n//                     .tax-uploader-message {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px;\r\n//                     }\r\n//                 }\r\n//             `}</style>\r\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 {/* Document Type Selection */}\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\r\n//                         Specify Document Type (Optional, for better accuracy):\r\n//                     </label>\r\n//                     <select\r\n//                         id=\"documentType\"\r\n//                         value={documentTypeHint}\r\n//                         onChange={handleDocumentTypeChange}\r\n//                         className=\"tax-uploader-file-input\" // Removed the problematic comment\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {documentTypes.map(type => (\r\n//                             <option key={type} value={type}>{type}</option>\r\n//                         ))}\r\n//                     </select>\r\n//                 </div>\r\n\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\r\n//                     <input\r\n//                         id=\"file-input\"\r\n//                         type=\"file\"\r\n//                         multiple\r\n//                         onChange={handleFileChange}\r\n//                         className=\"tax-uploader-file-input\"\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\r\n//                     />\r\n//                     {selectedFiles.length > 0 && (\r\n//                         <p className=\"selected-files-text\">\r\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\r\n//                         </p>\r\n//                     )}\r\n//                 </div>\r\n\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     className=\"tax-uploader-button\"\r\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\r\n//                 >\r\n//                     {loading ? (\r\n//                         <>\r\n//                             <div className=\"tax-uploader-spinner\"></div>\r\n//                             Processing with AI...\r\n//                         </>\r\n//                     ) : (\r\n//                         'Upload & Process Documents'\r\n//                     )}\r\n//                 </button>\r\n//             </form>\r\n\r\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\r\n//                 <div className=\"tax-uploader-loading\">\r\n//                     <div className=\"tax-uploader-spinner\"></div>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\r\n//                 <div className={`tax-uploader-message ${messageType}`}>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Action buttons appear only after initial document processing is successful */}\r\n//             {uploadResult && uploadResult.record_id && !loading && (\r\n//                 <div className=\"action-buttons-container\">\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGetSuggestions}\r\n//                         className=\"tax-uploader-button get-suggestions-button\"\r\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\r\n//                     </button>\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGenerateITRForm}\r\n//                         className=\"tax-uploader-button generate-itr-button\"\r\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\r\n//                     >\r\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\r\n//                     </button>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Document Processing Summary (from initial upload) */}\r\n//             {uploadResult && uploadResult.document_processing_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\r\n//                     <div className=\"document-processing-summary-section section-box\">\r\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\r\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\r\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\r\n//                             return (\r\n//                                 <div key={index} className=\"document-status-item\">\r\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\r\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\r\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\r\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\r\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n//                                         <p><strong>Extracted Fields (Partial):</strong>\r\n//                                             <pre className=\"extracted-fields-preview\">\r\n//                                                 {JSON.stringify(doc.extracted_fields, null, 2)}\r\n//                                             </pre>\r\n//                                         </p>\r\n//                                     )}\r\n//                                     {doc.extracted_raw_text && (\r\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\r\n//                                     )}\r\n//                                 </div>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\r\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\r\n\r\n//                     <div className=\"aggregated-financial-data-section section-box\">\r\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\r\n//                         <div className=\"income-details-section\">\r\n//                             <h5>Income Details</h5>\r\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth || 'N/A'}</p>\r\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p> {/* Corrected to 'Age' based on app1.py aggregation */}\r\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\r\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\r\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\r\n//                             {/* The following fields were not in the schema I previously used for frontend rendering,\r\n//                                 so I'm removing them to prevent undefined access, unless your Gemini prompt \r\n//                                 specifically extracts these as separate fields.\r\n//                                 The backend aggregates these into `income_from_other_sources`.\r\n//                             <p><strong>Interest from Savings:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_interest_savings)}</p>\r\n//                             <p><strong>Interest from FD:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_interest_fd)}</p>\r\n//                             <p><strong>Dividend Income:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_dividend)}</p>\r\n//                             <p><strong>Miscellaneous Income:</strong> {formatCurrency(uploadResult.aggregated_financial_data.other_income_misc)}</p>\r\n//                             */}\r\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\r\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\r\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\r\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p> {/* Changed from gross_total_income to calculated_gross_income matching backend output */}\r\n//                         </div>\r\n\r\n//                         <div className=\"deductions-section\">\r\n//                             <h5>Deductions Claimed</h5>\r\n//                             <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p> {/* Now correctly linked to aggregated_data */}\r\n//                             <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\r\n//                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n//                             <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\r\n//                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n//                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\r\n//                             <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\r\n//                             <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\r\n//                             <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\r\n//                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\r\n//                             <p><strong>Total Deductions (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p> {/* Changed to calculated_total_deductions matching backend output */}\r\n//                         </div>\r\n\r\n//                         <div className=\"taxation-summary-section\">\r\n//                             <h5>Tax Payments & Regime</h5>\r\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p> {/* Now correctly mapped to computation summary */}\r\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\r\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\r\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=\"final-tax-computation-section section-box\">\r\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Calculated Gross Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Calculated Total Deductions:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Estimated Tax Payable (Before TDS):</strong> {formatCurrency(suggestionsResult?.ml_prediction_summary?.predicted_tax_liability ?? uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Total Tax Paid Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p> {/* Corrected to total_tds_credit */}\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.regime_considered || 'N/A'}</span></p> {/* Corrected to regime_considered */}\r\n//                         </div>\r\n//                         <div className=\"final-amount-box\">\r\n//                             {uploadResult.final_tax_computation_summary.refund_due_from_tax > 0 && (\r\n//                                 <p className=\"refund-amount\">\r\n//                                     <strong>Refund Due from Tax:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.refund_due_from_tax)}\r\n//                                 </p>\r\n//                             )}\r\n//                             {uploadResult.final_tax_computation_summary.tax_due_to_government > 0 && (\r\n//                                 <p className=\"tax-due-amount\">\r\n//                                     <strong>Tax Due to Government:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.tax_due_to_government)}\r\n//                                 </p>\r\n//                             )}\r\n//                         </div>\r\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\r\n//                             <p className=\"computation-notes\">\r\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\r\n//                             </p>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\r\n//             {suggestionsResult && !isGeneratingSuggestions && (\r\n//                 <div className=\"suggestions-output tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\r\n//                     <div className=\"section-box\">\r\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\r\n//                             <>\r\n//                                 <h4>Based on Gemini AI:</h4>\r\n//                                 <ul className=\"suggestions-list\">\r\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\r\n//                                         <li key={index}>{suggestion}</li>\r\n//                                     ))}\r\n//                                 </ul>\r\n//                             </>\r\n//                         ) : (\r\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\r\n//                         )}\r\n\r\n//                         {suggestionsResult.gemini_regime_analysis && (\r\n//                             <div className=\"gemini-regime-analysis\">\r\n//                                 <h4>Gemini's Regime Analysis:</h4>\r\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\r\n//                             </div>\r\n//                         )}\r\n\r\n//                         {suggestionsResult.ml_prediction_summary && (\r\n//                             <>\r\n//                                 <h4>ML Model Prediction:</h4>\r\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\r\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\r\n//                                 )}\r\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\r\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\r\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\r\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\r\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\r\n//                                 )}\r\n//                             </>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n// export default TaxUploader;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n// // Header is now passed from Dashboard, so no direct import here\r\n// // The CSS is now inlined within the component's <style> tag to resolve import issues.\r\n\r\n// const TaxUploader = () => {\r\n//     const [selectedFiles, setSelectedFiles] = useState([]);\r\n//     const [loading, setLoading] = useState(false);\r\n//     const [message, setMessage] = useState('');\r\n//     const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n//     const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary)\r\n//     const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\r\n//     const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\r\n//     const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n//     // New state for document type hint\r\n//     const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\r\n\r\n//     // List of common document types for the dropdown\r\n//     const documentTypes = [\r\n//         'Auto-Detect', // Default option, AI attempts to detect\r\n//         'Form 16',\r\n//         'Bank Statement',\r\n//         'Form 26AS',\r\n//         'Salary Slip',\r\n//         'Investment Proof',\r\n//         'Home Loan Statement',\r\n//         'Other Document',\r\n//     ];\r\n\r\n\r\n//     // Helper function to safely format currency values\r\n//     const formatCurrency = (value) => {\r\n//         if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n//             return 'N/A';\r\n//         }\r\n//         return parseFloat(value).toLocaleString('en-IN', {\r\n//             style: 'currency',\r\n//             currency: 'INR',\r\n//             minimumFractionDigits: 2,\r\n//             maximumFractionDigits: 2,\r\n//         });\r\n//     };\r\n\r\n//     // The formatNumber function was not being used and has been removed to clear the ESLint warning.\r\n//     // If you need general number formatting in the future, you can re-add it or create a new helper.\r\n\r\n//     const handleFileChange = (event) => {\r\n//         setSelectedFiles(Array.from(event.target.files));\r\n//         // Clear all previous results/messages on new file selection\r\n//         setMessage('');\r\n//         setMessageType('');\r\n//         setUploadResult(null);\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n//     };\r\n\r\n//     // Handle document type selection\r\n//     const handleDocumentTypeChange = (event) => {\r\n//         setDocumentTypeHint(event.target.value);\r\n//     };\r\n\r\n\r\n//     const handleSubmit = async (event) => {\r\n//         event.preventDefault();\r\n//         if (selectedFiles.length === 0) {\r\n//             setMessage('Please select at least one file.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setLoading(true);\r\n//         setMessage('Uploading and processing documents with AI...');\r\n//         setMessageType('info');\r\n//         setUploadResult(null); // Clear previous results\r\n//         setSuggestionsResult(null);\r\n//         setIsGeneratingSuggestions(false);\r\n//         setIsGeneratingITR(false);\r\n\r\n//         const formData = new FormData();\r\n//         selectedFiles.forEach(file => {\r\n//             formData.append('documents', file);\r\n//         });\r\n//         // Append the selected document type hint to the form data\r\n//         formData.append('document_type', documentTypeHint);\r\n\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'multipart/form-data',\r\n//                 }\r\n//             };\r\n//             if (jwt_token) {\r\n//                 config.headers['Authorization'] = `Bearer ${jwt_token}`;\r\n//             }\r\n\r\n//             // API call to process documents (this now only saves and returns record_id)\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\r\n\r\n//             if (response.data.status === 'success' || response.data.status === 'partial_success') {\r\n//                 setMessage(response.data.message || 'Documents processed and data saved successfully!');\r\n//                 setMessageType('success');\r\n//                 setUploadResult(response.data); // Store the record_id and doc summary\r\n//                 // Clear selected files and file input after successful upload\r\n//                 setSelectedFiles([]);\r\n//                 document.getElementById('file-input').value = ''; // Clear the actual file input\r\n//             } else {\r\n//                 setMessage(response.data.message || 'An unknown error occurred during processing.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Upload error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token'); // Clear invalid token\r\n//                     window.location.href = '/login'; // Redirect to login\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGetSuggestions = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to get suggestions.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingSuggestions(true);\r\n//         setMessage('Generating AI-powered suggestions and ML predictions...');\r\n//         setMessageType('info');\r\n//         setSuggestionsResult(null); // Clear previous suggestions\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 }\r\n//             };\r\n\r\n//             const payload = {\r\n//                 record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\r\n//             };\r\n\r\n//             const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\r\n\r\n//             if (response.data.status === 'success') {\r\n//                 setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\r\n//                 setMessageType('success');\r\n//                 setSuggestionsResult(response.data); // Store the full suggestions result\r\n//             } else {\r\n//                 setMessage(response.data.message || 'Failed to get suggestions.');\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('Suggestions error:', error);\r\n//             if (error.response) {\r\n//                 if (error.response.status === 401) {\r\n//                     setMessage('Authentication required. Please log in.');\r\n//                     Cookies.remove('jwt_token');\r\n//                     window.location.href = '/login';\r\n//                 } else if (error.response.data && error.response.data.message) {\r\n//                     setMessage(`Error: ${error.response.data.message}`);\r\n//                 } else {\r\n//                     setMessage(`Server responded with status ${error.response.status}`);\r\n//                 }\r\n//             } else {\r\n//                 setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingSuggestions(false);\r\n//         }\r\n//     };\r\n\r\n//     const handleGenerateITRForm = async () => {\r\n//         if (!uploadResult || !uploadResult.record_id) {\r\n//             setMessage('Please upload and process documents first to generate ITR form.');\r\n//             setMessageType('error');\r\n//             return;\r\n//         }\r\n\r\n//         setIsGeneratingITR(true);\r\n//         setMessage('Generating ITR form...');\r\n//         setMessageType('info');\r\n\r\n//         const jwt_token = Cookies.get('jwt_token');\r\n\r\n//         try {\r\n//             const config = {\r\n//                 headers: {\r\n//                     'Authorization': `Bearer ${jwt_token}`,\r\n//                 },\r\n//                 responseType: 'blob', // Important for receiving a file\r\n//             };\r\n            \r\n//             // Fetch the ITR form using the record_id obtained after saving\r\n//             const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\r\n\r\n//             if (response.status === 200) {\r\n//                 const blob = new Blob([response.data], { type: 'application/pdf' });\r\n//                 const downloadUrl = window.URL.createObjectURL(blob);\r\n//                 const contentDisposition = response.headers['content-disposition'];\r\n//                 let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\r\n\r\n//                 if (contentDisposition) {\r\n//                     const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\r\n//                     if (filenameMatch && filenameMatch[1]) {\r\n//                         filename = filenameMatch[1];\r\n//                     }\r\n//                 }\r\n                \r\n//                 const link = document.createElement('a');\r\n//                 link.href = downloadUrl;\r\n//                 link.setAttribute('download', filename);\r\n//                 document.body.appendChild(link);\r\n//                 link.click();\r\n//                 link.remove();\r\n//                 window.URL.revokeObjectURL(downloadUrl);\r\n\r\n//                 setMessage('ITR form generated and downloaded successfully!');\r\n//                 setMessageType('success');\r\n//             } else {\r\n//                 const errorData = await new Response(response.data).text(); // Read blob as text for error\r\n//                 setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\r\n//                 setMessageType('error');\r\n//             }\r\n//         } catch (error) {\r\n//             console.error('ITR generation error:', error);\r\n//             if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n//                 const reader = new FileReader();\r\n//                 reader.onload = () => {\r\n//                     try {\r\n//                         const errorJson = JSON.parse(reader.result);\r\n//                         setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\r\n//                     } catch (e) {\r\n//                         setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\r\n//                     }\r\n//                 };\r\n//                 reader.readAsText(error.response.data);\r\n//             } else {\r\n//                 setMessage('Network error or server unavailable during ITR form generation.');\r\n//             }\r\n//             setMessageType('error');\r\n//         } finally {\r\n//             setIsGeneratingITR(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"tax-uploader-container section-box\">\r\n//             {/* Inlined CSS for styling the component */}\r\n//             <style>{`\r\n//                 /* General Body Styling */\r\n//                 body {\r\n//                     font-family: 'Inter', sans-serif;\r\n//                     background-color: #f0f2f5;\r\n//                     margin: 0;\r\n//                     padding: 20px;\r\n//                     color: #333;\r\n//                     line-height: 1.6;\r\n//                 }\r\n\r\n//                 /* Section Box Styling */\r\n//                 .section-box {\r\n//                     background-color: #ffffff;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n//                     margin-bottom: 25px;\r\n//                     border: 1px solid #e0e0e0;\r\n//                 }\r\n\r\n//                 /* Tax Uploader Container */\r\n//                 .tax-uploader-container {\r\n//                     max-width: 900px;\r\n//                     margin: 30px auto;\r\n//                     padding: 30px;\r\n//                     background-color: #fff;\r\n//                     border-radius: 15px;\r\n//                     box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n//                     border: 1px solid #d0d0d0;\r\n//                 }\r\n\r\n//                 .tax-uploader-title {\r\n//                     text-align: center;\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 30px;\r\n//                     font-size: 2.2em;\r\n//                     font-weight: 700;\r\n//                     letter-spacing: -0.5px;\r\n//                 }\r\n\r\n//                 /* Form Group */\r\n//                 .tax-uploader-form-group {\r\n//                     margin-bottom: 25px;\r\n//                 }\r\n\r\n//                 .tax-uploader-label {\r\n//                     display: block;\r\n//                     margin-bottom: 10px;\r\n//                     font-weight: 600;\r\n//                     color: #34495e;\r\n//                     font-size: 1.1em;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 12px;\r\n//                     border: 1px solid #ced4da;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     color: #495057;\r\n//                     background-color: #f8f9fa;\r\n//                     transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n//                 }\r\n\r\n//                 .tax-uploader-file-input:focus {\r\n//                     border-color: #80bdff;\r\n//                     box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n//                     outline: none;\r\n//                 }\r\n\r\n//                 .selected-files-text {\r\n//                     margin-top: 10px;\r\n//                     font-size: 0.95em;\r\n//                     color: #555;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 /* Buttons */\r\n//                 .tax-uploader-button {\r\n//                     display: block;\r\n//                     width: 100%;\r\n//                     padding: 14px 20px;\r\n//                     background-color: #007bff;\r\n//                     color: white;\r\n//                     border: none;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                     cursor: pointer;\r\n//                     transition: background-color 0.3s ease, transform 0.2s ease;\r\n//                     box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\r\n//                     margin-top: 20px;\r\n//                 }\r\n\r\n//                 .tax-uploader-button:hover {\r\n//                     background-color: #0056b3;\r\n//                     transform: translateY(-2px);\r\n//                 }\r\n\r\n//                 .tax-uploader-button:disabled {\r\n//                     background-color: #a0c9f1;\r\n//                     cursor: not-allowed;\r\n//                     box-shadow: none;\r\n//                     transform: none;\r\n//                 }\r\n\r\n//                 .action-buttons-container {\r\n//                     display: flex;\r\n//                     flex-wrap: wrap;\r\n//                     gap: 15px;\r\n//                     margin-top: 30px;\r\n//                     justify-content: center;\r\n//                 }\r\n\r\n//                 .action-buttons-container .tax-uploader-button {\r\n//                     flex: 1;\r\n//                     min-width: 250px;\r\n//                     margin: 0; /* Override default margin */\r\n//                 }\r\n\r\n//                 .get-suggestions-button {\r\n//                     background-color: #28a745;\r\n//                     box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\r\n//                 }\r\n\r\n//                 .get-suggestions-button:hover {\r\n//                     background-color: #218838;\r\n//                 }\r\n\r\n//                 .generate-itr-button {\r\n//                     background-color: #6c757d;\r\n//                     box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\r\n//                 }\r\n\r\n//                 .generate-itr-button:hover {\r\n//                     background-color: #5a6268;\r\n//                 }\r\n\r\n//                 /* Loading Spinner */\r\n//                 .tax-uploader-loading {\r\n//                     display: flex;\r\n//                     align-items: center;\r\n//                     justify-content: center;\r\n//                     margin-top: 25px;\r\n//                     font-size: 1.1em;\r\n//                     color: #007bff;\r\n//                     font-weight: 500;\r\n//                 }\r\n\r\n//                 .tax-uploader-spinner {\r\n//                     border: 4px solid #f3f3f3;\r\n//                     border-top: 4px solid #007bff;\r\n//                     border-radius: 50%;\r\n//                     width: 24px;\r\n//                     height: 24px;\r\n//                     animation: spin 1s linear infinite;\r\n//                     margin-right: 10px;\r\n//                 }\r\n\r\n//                 @keyframes spin {\r\n//                     0% { transform: rotate(0deg); }\r\n//                     100% { transform: rotate(360deg); }\r\n//                 }\r\n\r\n//                 /* Messages */\r\n//                 .tax-uploader-message {\r\n//                     padding: 15px;\r\n//                     margin-top: 25px;\r\n//                     border-radius: 8px;\r\n//                     font-size: 1em;\r\n//                     font-weight: 500;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.info {\r\n//                     background-color: #e7f3ff;\r\n//                     color: #0056b3;\r\n//                     border: 1px solid #b3d7ff;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.success {\r\n//                     background-color: #d4edda;\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                 }\r\n\r\n//                 .tax-uploader-message.error {\r\n//                     background-color: #f8d7da;\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                 }\r\n\r\n//                 /* Tax Summary Output */\r\n//                 .tax-summary-output {\r\n//                     margin-top: 40px;\r\n//                     background-color: #f9f9f9;\r\n//                     padding: 25px;\r\n//                     border-radius: 12px;\r\n//                     box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\r\n//                     border: 1px solid #eee;\r\n//                 }\r\n\r\n//                 .tax-summary-output h3 {\r\n//                     color: #2c3e50;\r\n//                     margin-bottom: 25px;\r\n//                     text-align: center;\r\n//                     font-size: 2em;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .document-processing-summary-section,\r\n//                 .aggregated-financial-data-section,\r\n//                 .final-tax-computation-section,\r\n//                 .suggestions-output .section-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 20px;\r\n//                     background-color: #ffffff;\r\n//                     border-radius: 10px;\r\n//                     box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n//                     border: 1px solid #e9ecef;\r\n//                 }\r\n\r\n//                 .section-title {\r\n//                     color: #34495e;\r\n//                     font-size: 1.6em;\r\n//                     margin-bottom: 20px;\r\n//                     border-bottom: 2px solid #f0f2f5;\r\n//                     padding-bottom: 10px;\r\n//                     text-align: center;\r\n//                 }\r\n\r\n//                 .document-status-item {\r\n//                     background-color: #fdfdfd;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     margin-bottom: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\r\n//                 }\r\n\r\n//                 .document-status-item p {\r\n//                     margin: 5px 0;\r\n//                     font-size: 0.95em;\r\n//                     color: #444;\r\n//                 }\r\n\r\n//                 .document-status-item strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .status-success {\r\n//                     color: #28a745;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-warning {\r\n//                     color: #ffc107;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .status-error {\r\n//                     color: #dc3545;\r\n//                     font-weight: 700;\r\n//                 }\r\n\r\n//                 .extracted-fields-preview, .extracted-raw-text-preview {\r\n//                     background-color: #e9ecef;\r\n//                     border: 1px solid #dee2e6;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n//                     font-size: 0.85em;\r\n//                     white-space: pre-wrap; /* Ensures text wraps */\r\n//                     word-break: break-all; /* Breaks words if necessary */\r\n//                     max-height: 200px; /* Limit height for long outputs */\r\n//                     overflow-y: auto; /* Add scroll for overflow */\r\n//                 }\r\n\r\n//                 .income-details-section,\r\n//                 .deductions-section,\r\n//                 .taxation-summary-section {\r\n//                     margin-bottom: 25px;\r\n//                     padding: 15px;\r\n//                     border: 1px solid #f0f0f0;\r\n//                     border-radius: 8px;\r\n//                     background-color: #fdfdfd;\r\n//                 }\r\n\r\n//                 .income-details-section h5,\r\n//                 .deductions-section h5,\r\n//                 .taxation-summary-section h5 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.3em;\r\n//                     margin-bottom: 15px;\r\n//                     border-bottom: 1px solid #e0e0e0;\r\n//                     padding-bottom: 8px;\r\n//                 }\r\n\r\n//                 .income-details-section p,\r\n//                 .deductions-section p,\r\n//                 .taxation-summary-section p {\r\n//                     margin: 8px 0;\r\n//                     font-size: 0.98em;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .computation-detail {\r\n//                     margin-bottom: 10px;\r\n//                     padding-bottom: 5px;\r\n//                     border-bottom: 1px dashed #e9ecef;\r\n//                 }\r\n\r\n//                 .computation-detail:last-child {\r\n//                     border-bottom: none;\r\n//                 }\r\n\r\n//                 .computation-detail strong {\r\n//                     color: #2c3e50;\r\n//                 }\r\n\r\n//                 .final-amount-box {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     border-radius: 8px;\r\n//                     background-color: #e9f7ef; /* Light green for positive outcome */\r\n//                     border: 1px solid #c3e6cb;\r\n//                     text-align: center;\r\n//                     font-size: 1.1em;\r\n//                     font-weight: 600;\r\n//                 }\r\n\r\n//                 .final-amount-box .tax-due-amount {\r\n//                     background-color: #f8d7da; /* Light red for tax due */\r\n//                     color: #721c24;\r\n//                     border: 1px solid #f5c6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .final-amount-box .refund-amount {\r\n//                     background-color: #d4edda; /* Light green for refund */\r\n//                     color: #155724;\r\n//                     border: 1px solid #c3e6cb;\r\n//                     padding: 10px;\r\n//                     border-radius: 5px;\r\n//                     margin-top: 10px;\r\n//                 }\r\n\r\n//                 .computation-notes {\r\n//                     margin-top: 20px;\r\n//                     padding: 10px;\r\n//                     background-color: #f0f8ff;\r\n//                     border: 1px solid #d1e7fd;\r\n//                     border-radius: 8px;\r\n//                     font-size: 0.9em;\r\n//                     color: #444;\r\n//                     font-style: italic;\r\n//                 }\r\n\r\n//                 .highlight-regime {\r\n//                     font-weight: bold;\r\n//                     color: #007bff;\r\n//                 }\r\n\r\n//                 /* Suggestions specific styling */\r\n//                 .suggestions-list {\r\n//                     list-style-type: disc;\r\n//                     margin-left: 20px;\r\n//                     padding-left: 0;\r\n//                 }\r\n\r\n//                 .suggestions-list li {\r\n//                     margin-bottom: 8px;\r\n//                     color: #333;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis {\r\n//                     margin-top: 20px;\r\n//                     padding: 15px;\r\n//                     background-color: #e6f7ff;\r\n//                     border: 1px solid #91d5ff;\r\n//                     border-radius: 8px;\r\n//                 }\r\n\r\n//                 .gemini-regime-analysis h4 {\r\n//                     color: #0056b3;\r\n//                     margin-bottom: 10px;\r\n//                 }\r\n\r\n//                 .detailed-calculation-section {\r\n//                     margin-top: 20px;\r\n//                     padding-top: 15px;\r\n//                     border-top: 1px dashed #e9ecef;\r\n//                 }\r\n\r\n//                 .detailed-calculation-section h5 {\r\n//                     color: #007bff;\r\n//                     font-size: 1.2em;\r\n//                     margin-bottom: 10px;\r\n//                 }\r\n\r\n//                 .detailed-calculation-section ul {\r\n//                     list-style-type: none; /* Remove default bullet */\r\n//                     padding-left: 0;\r\n//                 }\r\n\r\n//                 .detailed-calculation-section li {\r\n//                     margin-bottom: 5px;\r\n//                     padding-left: 15px;\r\n//                     text-indent: -15px;\r\n//                     position: relative;\r\n//                 }\r\n\r\n//                 .detailed-calculation-section li::before {\r\n//                     content: '•'; /* Custom bullet */\r\n//                     color: #007bff;\r\n//                     position: absolute;\r\n//                     left: 0;\r\n//                 }\r\n\r\n\r\n//                 /* Responsive Adjustments */\r\n//                 @media (max-width: 768px) {\r\n//                     .tax-uploader-container {\r\n//                         margin: 20px 10px;\r\n//                         padding: 20px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.8em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         padding: 12px 15px;\r\n//                         font-size: 1em;\r\n//                     }\r\n\r\n//                     .action-buttons-container {\r\n//                         flex-direction: column;\r\n//                         gap: 10px;\r\n//                     }\r\n\r\n//                     .action-buttons-container .tax-uploader-button {\r\n//                         min-width: unset;\r\n//                     }\r\n\r\n//                     .tax-summary-output h3 {\r\n//                         font-size: 1.6em;\r\n//                     }\r\n\r\n//                     .section-title {\r\n//                         font-size: 1.4em;\r\n//                     }\r\n\r\n//                     .income-details-section h5,\r\n//                     .deductions-section h5,\r\n//                     .taxation-summary-section h5 {\r\n//                         font-size: 1.1em;\r\n//                     }\r\n//                 }\r\n\r\n//                 @media (max-width: 480px) {\r\n//                     body {\r\n//                         padding: 10px;\r\n//                     }\r\n\r\n//                     .tax-uploader-container {\r\n//                         margin: 10px;\r\n//                         padding: 15px;\r\n//                     }\r\n\r\n//                     .tax-uploader-title {\r\n//                         font-size: 1.5em;\r\n//                     }\r\n\r\n//                     .tax-uploader-button {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px 12px;\r\n//                     }\r\n\r\n//                     .tax-uploader-message {\r\n//                         font-size: 0.9em;\r\n//                         padding: 10px;\r\n//                     }\r\n//                 }\r\n//             `}</style>\r\n//             <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 {/* Document Type Selection */}\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\r\n//                         Specify Document Type (Optional, for better accuracy):\r\n//                     </label>\r\n//                     <select\r\n//                         id=\"documentType\"\r\n//                         value={documentTypeHint}\r\n//                         onChange={handleDocumentTypeChange}\r\n//                         className=\"tax-uploader-file-input\"\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {documentTypes.map(type => (\r\n//                             <option key={type} value={type}>{type}</option>\r\n//                         ))}\r\n//                     </select>\r\n//                 </div>\r\n\r\n//                 <div className=\"tax-uploader-form-group\">\r\n//                     <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\r\n//                     <input\r\n//                         id=\"file-input\"\r\n//                         type=\"file\"\r\n//                         multiple\r\n//                         onChange={handleFileChange}\r\n//                         className=\"tax-uploader-file-input\"\r\n//                         disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n//                         accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\r\n//                     />\r\n//                     {selectedFiles.length > 0 && (\r\n//                         <p className=\"selected-files-text\">\r\n//                             Selected: {selectedFiles.map(file => file.name).join(', ')}\r\n//                         </p>\r\n//                     )}\r\n//                 </div>\r\n\r\n//                 <button\r\n//                     type=\"submit\"\r\n//                     className=\"tax-uploader-button\"\r\n//                     disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\r\n//                 >\r\n//                     {loading ? (\r\n//                         <>\r\n//                             <div className=\"tax-uploader-spinner\"></div>\r\n//                             Processing with AI...\r\n//                         </>\r\n//                     ) : (\r\n//                         'Upload & Process Documents'\r\n//                     )}\r\n//                 </button>\r\n//             </form>\r\n\r\n//             {(loading || isGeneratingSuggestions || isGeneratingITR) && (\r\n//                 <div className=\"tax-uploader-loading\">\r\n//                     <div className=\"tax-uploader-spinner\"></div>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\r\n//                 <div className={`tax-uploader-message ${messageType}`}>\r\n//                     {message}\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Action buttons appear only after initial document processing is successful */}\r\n//             {uploadResult && uploadResult.record_id && !loading && (\r\n//                 <div className=\"action-buttons-container\">\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGetSuggestions}\r\n//                         className=\"tax-uploader-button get-suggestions-button\"\r\n//                         disabled={isGeneratingSuggestions || isGeneratingITR}\r\n//                     >\r\n//                         {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\r\n//                     </button>\r\n//                     <button\r\n//                         type=\"button\"\r\n//                         onClick={handleGenerateITRForm}\r\n//                         className=\"tax-uploader-button generate-itr-button\"\r\n//                         disabled={isGeneratingITR || isGeneratingSuggestions}\r\n//                     >\r\n//                         {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\r\n//                     </button>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Document Processing Summary (from initial upload) */}\r\n//             {uploadResult && uploadResult.document_processing_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\r\n//                     <div className=\"document-processing-summary-section section-box\">\r\n//                         {uploadResult.document_processing_summary.map((doc, index) => {\r\n//                             const statusClass = doc.status === 'success' ? 'status-success' :\r\n//                                                 doc.status === 'warning' ? 'status-warning' : 'status-error';\r\n//                             return (\r\n//                                 <div key={index} className=\"document-status-item\">\r\n//                                     <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\r\n//                                     <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\r\n//                                     <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\r\n//                                     <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\r\n//                                     {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n//                                         <p><strong>Extracted Fields (Partial):</strong>\r\n//                                             <pre className=\"extracted-fields-preview\">\r\n//                                                 {JSON.stringify(doc.extracted_fields, null, 2)}\r\n//                                             </pre>\r\n//                                         </p>\r\n//                                     )}\r\n//                                     {doc.extracted_raw_text && (\r\n//                                         <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\r\n//                                     )}\r\n//                                 </div>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\r\n//             {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\r\n//                 <div className=\"tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\r\n\r\n//                     <div className=\"aggregated-financial-data-section section-box\">\r\n//                         <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\r\n//                         <div className=\"income-details-section\">\r\n//                             <h5>Income Details</h5>\r\n//                             <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n//                             <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n//                             <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n//                             <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n//                             <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth || 'N/A'}</p>\r\n//                             <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p>\r\n//                             <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\r\n//                             <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\r\n//                             <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\r\n//                             <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\r\n//                             <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\r\n//                             <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\r\n//                             <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_gross_income)}</p>\r\n//                         </div>\r\n\r\n//                         <div className=\"deductions-section\">\r\n//                             <h5>Deductions Claimed</h5>\r\n//                             <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p>\r\n//                             <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\r\n//                             <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n//                             <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\r\n//                             <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n//                             <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\r\n//                             <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\r\n//                             <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\r\n//                             <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\r\n//                             <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\r\n//                             <p><strong>Total Deductions (Aggregated):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_deductions)}</p>\r\n//                         </div>\r\n\r\n//                         <div className=\"taxation-summary-section\">\r\n//                             <h5>Tax Payments & Regime</h5>\r\n//                             <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tax_paid_credit)}</p>\r\n//                             <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\r\n//                             <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\r\n//                             <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n//                         </div>\r\n//                     </div>\r\n\r\n//                     <div className=\"final-tax-computation-section section-box\">\r\n//                         <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Calculated Gross Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Calculated Total Deductions:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_total_deductions)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Estimated Tax Payable (Before Credits):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Total Tax Paid Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tax_paid_credit)}</p>\r\n//                         </div>\r\n//                         <div className=\"computation-detail\">\r\n//                             <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.predicted_tax_regime || 'N/A'}</span></p>\r\n//                         </div>\r\n//                         <div className=\"final-amount-box\">\r\n//                             {uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && (\r\n//                                 <p className=\"refund-amount\">\r\n//                                     <strong>Refund Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)}\r\n//                                 </p>\r\n//                             )}\r\n//                             {uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && (\r\n//                                 <p className=\"tax-due-amount\">\r\n//                                     <strong>Additional Tax Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)}\r\n//                                 </p>\r\n//                             )}\r\n//                         </div>\r\n//                         {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\r\n//                             <p className=\"computation-notes\">\r\n//                                 <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\r\n//                             </p>\r\n//                         )}\r\n//                         {uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && (\r\n//                                 <div className=\"detailed-calculation-section mt-4\">\r\n//                                     <h5>Detailed Calculation Steps:</h5>\r\n//                                     <ul className=\"list-disc list-inside text-sm pl-4\">\r\n//                                         {uploadResult.final_tax_computation_summary.calculation_details.map((detail, index) => (\r\n//                                             <li key={index} className=\"mb-1\">{detail}</li>\r\n//                                         ))}\r\n//                                     </ul>\r\n//                                 </div>\r\n//                             )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\r\n//             {suggestionsResult && !isGeneratingSuggestions && (\r\n//                 <div className=\"suggestions-output tax-summary-output\">\r\n//                     <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\r\n//                     <div className=\"section-box\">\r\n//                         {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\r\n//                             <>\r\n//                                 <h4>Based on Gemini AI:</h4>\r\n//                                 <ul className=\"suggestions-list\">\r\n//                                     {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\r\n//                                         <li key={index}>{suggestion}</li>\r\n//                                     ))}\r\n//                                 </ul>\r\n//                             </>\r\n//                         ) : (\r\n//                             <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\r\n//                         )}\r\n\r\n//                         {suggestionsResult.gemini_regime_analysis && (\r\n//                             <div className=\"gemini-regime-analysis\">\r\n//                                 <h4>Gemini's Regime Analysis:</h4>\r\n//                                 <p>{suggestionsResult.gemini_regime_analysis}</p>\r\n//                             </div>\r\n//                         )}\r\n\r\n//                         {suggestionsResult.ml_prediction_summary && (\r\n//                             <>\r\n//                                 <h4>ML Model Prediction:</h4>\r\n//                                 {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\r\n//                                     <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\r\n//                                 )}\r\n//                                 <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\r\n//                                 <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\r\n//                                 <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\r\n//                                 {suggestionsResult.ml_prediction_summary.notes && (\r\n//                                     <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\r\n//                                 )}\r\n//                             </>\r\n//                         )}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n// export default TaxUploader;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst TaxUploader = () => {\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState(''); // 'info', 'success', 'error'\r\n    const [uploadResult, setUploadResult] = useState(null); // Stores initial processing result (record_id, doc summary, aggregated_data, computation_summary)\r\n    const [suggestionsResult, setSuggestionsResult] = useState(null); // Stores suggestions and ML predictions\r\n    const [isGeneratingSuggestions, setIsGeneratingSuggestions] = useState(false);\r\n    const [isGeneratingITR, setIsGeneratingITR] = useState(false);\r\n    const [documentTypeHint, setDocumentTypeHint] = useState('Auto-Detect'); // Default value\r\n\r\n    // List of common document types for the dropdown\r\n    const documentTypes = [\r\n        'Auto-Detect', // Default option, AI attempts to detect\r\n        'Form 16',\r\n        'Bank Statement',\r\n        'Form 26AS',\r\n        'Salary Slip',\r\n        'Investment Proof',\r\n        'Home Loan Statement',\r\n        'Other Document',\r\n    ];\r\n\r\n    // Helper function to safely format currency values\r\n    const formatCurrency = (value) => {\r\n        if (value === null || value === undefined || isNaN(parseFloat(value))) {\r\n            return 'N/A';\r\n        }\r\n        return parseFloat(value).toLocaleString('en-IN', {\r\n            style: 'currency',\r\n            currency: 'INR',\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (event) => {\r\n        setSelectedFiles(Array.from(event.target.files));\r\n        // Clear all previous results/messages on new file selection\r\n        setMessage('');\r\n        setMessageType('');\r\n        setUploadResult(null);\r\n        setSuggestionsResult(null);\r\n        setIsGeneratingSuggestions(false);\r\n        setIsGeneratingITR(false);\r\n    };\r\n\r\n    const handleDocumentTypeChange = (event) => {\r\n        setDocumentTypeHint(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (selectedFiles.length === 0) {\r\n            setMessage('Please select at least one file.');\r\n            setMessageType('error');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setMessage('Uploading and processing documents with AI...');\r\n        setMessageType('info');\r\n        setUploadResult(null); // Clear previous results\r\n        setSuggestionsResult(null);\r\n        setIsGeneratingSuggestions(false);\r\n        setIsGeneratingITR(false);\r\n\r\n        const formData = new FormData();\r\n        selectedFiles.forEach(file => {\r\n            formData.append('documents', file);\r\n        });\r\n        formData.append('document_type', documentTypeHint);\r\n\r\n        const jwt_token = Cookies.get('jwt_token');\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            };\r\n            if (jwt_token) {\r\n                config.headers['Authorization'] = `Bearer ${jwt_token}`;\r\n            }\r\n\r\n            const response = await axios.post('http://127.0.0.1:5000/api/process_documents', formData, config);\r\n\r\n            if (response.data.status === 'success' || response.data.status === 'partial_success') {\r\n                setMessage(response.data.message || 'Documents processed and data saved successfully!');\r\n                setMessageType('success');\r\n                setUploadResult(response.data); // Store the entire response for display\r\n                setSelectedFiles([]);\r\n                document.getElementById('file-input').value = '';\r\n            } else {\r\n                setMessage(response.data.message || 'An unknown error occurred during processing.');\r\n                setMessageType('error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Upload error:', error);\r\n            if (error.response) {\r\n                if (error.response.status === 401) {\r\n                    setMessage('Authentication required. Please log in.');\r\n                    Cookies.remove('jwt_token');\r\n                    window.location.href = '/login';\r\n                } else if (error.response.data && error.response.data.message) {\r\n                    setMessage(`Error: ${error.response.data.message}`);\r\n                } else {\r\n                    setMessage(`Server responded with status ${error.response.status}`);\r\n                }\r\n            } else {\r\n                setMessage('An error occurred while uploading or processing documents. Check network connection and backend server.');\r\n            }\r\n            setMessageType('error');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleGetSuggestions = async () => {\r\n        if (!uploadResult || !uploadResult.record_id) {\r\n            setMessage('Please upload and process documents first to get suggestions.');\r\n            setMessageType('error');\r\n            return;\r\n        }\r\n\r\n        setIsGeneratingSuggestions(true);\r\n        setMessage('Generating AI-powered suggestions and ML predictions...');\r\n        setMessageType('info');\r\n        setSuggestionsResult(null); // Clear previous suggestions\r\n\r\n        const jwt_token = Cookies.get('jwt_token');\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${jwt_token}`,\r\n                }\r\n            };\r\n\r\n            const payload = {\r\n                record_id: uploadResult.record_id // Send the record_id to fetch data for suggestions\r\n            };\r\n\r\n            const response = await axios.post('http://127.0.0.1:5000/api/get_suggestions', payload, config);\r\n\r\n            if (response.data.status === 'success') {\r\n                setMessage(response.data.message || 'AI suggestions and ML predictions generated.');\r\n                setMessageType('success');\r\n                setSuggestionsResult(response.data); // Store the full suggestions result\r\n            } else {\r\n                setMessage(response.data.message || 'Failed to get suggestions.');\r\n                setMessageType('error');\r\n            }\r\n        } catch (error) {\r\n            console.error('Suggestions error:', error);\r\n            if (error.response) {\r\n                if (error.response.status === 401) {\r\n                    setMessage('Authentication required. Please log in.');\r\n                    Cookies.remove('jwt_token');\r\n                    window.location.href = '/login';\r\n                } else if (error.response.data && error.response.data.message) {\r\n                    setMessage(`Error: ${error.response.data.message}`);\r\n                } else {\r\n                    setMessage(`Server responded with status ${error.response.status}`);\r\n                }\r\n            } else {\r\n                setMessage('Error fetching AI suggestions. Check backend connection and API keys.');\r\n            }\r\n            setMessageType('error');\r\n        } finally {\r\n            setIsGeneratingSuggestions(false);\r\n        }\r\n    };\r\n\r\n    const handleGenerateITRForm = async () => {\r\n        if (!uploadResult || !uploadResult.record_id) {\r\n            setMessage('Please upload and process documents first to generate ITR form.');\r\n            setMessageType('error');\r\n            return;\r\n        }\r\n\r\n        setIsGeneratingITR(true);\r\n        setMessage('Generating ITR form...');\r\n        setMessageType('info');\r\n\r\n        const jwt_token = Cookies.get('jwt_token');\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt_token}`,\r\n                },\r\n                responseType: 'blob', // Important for receiving a file\r\n            };\r\n            \r\n            // Fetch the ITR form using the record_id obtained after saving\r\n            const response = await axios.get(`http://127.0.0.1:5000/api/generate-itr/${uploadResult.record_id}`, config);\r\n\r\n            if (response.status === 200) {\r\n                const blob = new Blob([response.data], { type: 'application/pdf' });\r\n                const downloadUrl = window.URL.createObjectURL(blob);\r\n                const contentDisposition = response.headers['content-disposition'];\r\n                let filename = `ITR_Form_${uploadResult.record_id}.pdf`; // Default filename\r\n\r\n                if (contentDisposition) {\r\n                    const filenameMatch = contentDisposition.match(/filename=\"([^\"]+)\"/);\r\n                    if (filenameMatch && filenameMatch[1]) {\r\n                        filename = filenameMatch[1];\r\n                    }\r\n                }\r\n                \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.setAttribute('download', filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.remove();\r\n                window.URL.revokeObjectURL(downloadUrl);\r\n\r\n                setMessage('ITR form generated and downloaded successfully!');\r\n                setMessageType('success');\r\n            } else {\r\n                const errorData = await new Response(response.data).text(); // Read blob as text for error\r\n                setMessage(`Failed to generate ITR form: ${errorData || response.statusText}`);\r\n                setMessageType('error');\r\n            }\r\n        } catch (error) {\r\n            console.error('ITR generation error:', error);\r\n            if (axios.isAxiosError(error) && error.response && error.response.data) {\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    try {\r\n                        const errorJson = JSON.parse(reader.result);\r\n                        setMessage(`Error generating ITR form: ${errorJson.message || JSON.stringify(errorJson)}`);\r\n                    } catch (e) {\r\n                        setMessage(`Error generating ITR form: ${reader.result || error.response.statusText}`);\r\n                    }\r\n                };\r\n                reader.readAsText(error.response.data);\r\n            } else {\r\n                setMessage('Network error or server unavailable during ITR form generation.');\r\n            }\r\n            setMessageType('error');\r\n        } finally {\r\n            setIsGeneratingITR(false);\r\n        }\r\n    };\r\n\r\n    // Helper function to render extracted fields dynamically\r\n    const renderExtractedFields = (fields) => {\r\n        if (!fields) return null;\r\n\r\n        const fieldOrder = [\r\n            // Personal & Employer Info\r\n            \"name_of_employee\", \"pan_of_employee\", \"date_of_birth\", \"gender\", \"residential_status\",\r\n            \"employer_name\", \"employer_address\", \"pan_of_deductor\", \"tan_of_deductor\", \"designation_of_employee\",\r\n            // Financial Years & Period\r\n            \"financial_year\", \"assessment_year\", \"period_from\", \"period_to\", \"statement_start_date\", \"statement_end_date\",\r\n            // Income\r\n            \"gross_salary_total\", \"salary_as_per_sec_17_1\", \"value_of_perquisites_u_s_17_2\", \"profits_in_lieu_of_salary_u_s_17_3\",\r\n            \"basic_salary\", \"hra_received\", \"conveyance_allowance\", \"transport_allowance\", \"overtime_pay\",\r\n            \"total_exempt_allowances\",\r\n            \"income_from_house_property\", \"income_from_other_sources\", \"capital_gains_long_term\", \"capital_gains_short_term\",\r\n            \"gross_total_income_as_per_document\",\r\n            // Deductions\r\n            \"professional_tax\", \"interest_on_housing_loan_self_occupied\",\r\n            \"deduction_80c\", \"deduction_80c_epf\", \"deduction_80c_insurance_premium\", \"deduction_80ccc\",\r\n            \"deduction_80ccd\", \"deduction_80ccd1b\", \"deduction_80d\", \"deduction_80g\", \"deduction_80tta\",\r\n            \"deduction_80ttb\", \"deduction_80e\", \"total_deductions_chapter_via\", \"aggregate_of_deductions_from_salary\",\r\n            \"epf_contribution\", \"esi_contribution\",\r\n            // Tax Paid\r\n            \"total_tds\", \"total_tds_deducted_summary\", \"total_tds_deposited_summary\",\r\n            \"quarter_1_receipt_number\", \"quarter_1_tds_deducted\", \"quarter_1_tds_deposited\",\r\n            \"advance_tax\", \"self_assessment_tax\",\r\n            // Other Tax Info\r\n            \"taxable_income_as_per_document\", \"tax_payable_as_per_document\", \"refund_status_as_per_document\", \"tax_regime_chosen\",\r\n            \"net_amount_payable\", \"days_present\", \"overtime_hours\",\r\n            // Bank Statement Details\r\n            \"account_holder_name\", \"account_number\", \"ifsc_code\", \"bank_name\", \"branch_address\",\r\n            \"opening_balance\", \"closing_balance\", \"total_deposits\", \"total_withdrawals\"\r\n        ];\r\n        \r\n        // Define display names for better readability\r\n        const displayNames = {\r\n            \"name_of_employee\": \"Name of Employee\",\r\n            \"pan_of_employee\": \"PAN of Employee\",\r\n            \"date_of_birth\": \"Date of Birth\",\r\n            \"gender\": \"Gender\",\r\n            \"residential_status\": \"Residential Status\",\r\n            \"employer_name\": \"Employer Name\",\r\n            \"employer_address\": \"Employer Address\",\r\n            \"pan_of_deductor\": \"PAN of Deductor\",\r\n            \"tan_of_deductor\": \"TAN of Deductor\",\r\n            \"designation_of_employee\": \"Designation\",\r\n            \"financial_year\": \"Financial Year\",\r\n            \"assessment_year\": \"Assessment Year\",\r\n            \"period_from\": \"Period From\",\r\n            \"period_to\": \"Period To\",\r\n            \"statement_start_date\": \"Statement Start Date\",\r\n            \"statement_end_date\": \"Statement End Date\",\r\n            \"gross_salary_total\": \"Gross Salary Total\",\r\n            \"salary_as_per_sec_17_1\": \"Salary U/S 17(1)\",\r\n            \"value_of_perquisites_u_s_17_2\": \"Perquisites U/S 17(2)\",\r\n            \"profits_in_lieu_of_salary_u_s_17_3\": \"Profits in Lieu of Salary U/S 17(3)\",\r\n            \"basic_salary\": \"Basic Salary\",\r\n            \"hra_received\": \"HRA Received\",\r\n            \"conveyance_allowance\": \"Conveyance Allowance\",\r\n            \"transport_allowance\": \"Transport Allowance\",\r\n            \"overtime_pay\": \"Overtime Pay\",\r\n            \"total_exempt_allowances\": \"Total Exempt Allowances\",\r\n            \"income_from_house_property\": \"Income from House Property\",\r\n            \"income_from_other_sources\": \"Income from Other Sources\",\r\n            \"capital_gains_long_term\": \"Long Term Capital Gains\",\r\n            \"capital_gains_short_term\": \"Short Term Capital Gains\",\r\n            \"gross_total_income_as_per_document\": \"Gross Total Income (Doc)\",\r\n            \"professional_tax\": \"Professional Tax\",\r\n            \"interest_on_housing_loan_self_occupied\": \"Interest on Home Loan (Self Occupied)\",\r\n            \"deduction_80c\": \"Deduction 80C\",\r\n            \"deduction_80c_epf\": \"Deduction 80C (EPF)\",\r\n            \"deduction_80c_insurance_premium\": \"Deduction 80C (Insurance Premium)\",\r\n            \"deduction_80ccc\": \"Deduction 80CCC\",\r\n            \"deduction_80ccd\": \"Deduction 80CCD\",\r\n            \"deduction_80ccd1b\": \"Deduction 80CCD(1B)\",\r\n            \"deduction_80d\": \"Deduction 80D\",\r\n            \"deduction_80g\": \"Deduction 80G\",\r\n            \"deduction_80tta\": \"Deduction 80TTA\",\r\n            \"deduction_80ttb\": \"Deduction 80TTB\",\r\n            \"deduction_80e\": \"Deduction 80E\",\r\n            \"total_deductions_chapter_via\": \"Total Chapter VI-A Deductions\",\r\n            \"aggregate_of_deductions_from_salary\": \"Aggregate Deductions from Salary\",\r\n            \"epf_contribution\": \"EPF Contribution\",\r\n            \"esi_contribution\": \"ESI Contribution\",\r\n            \"total_tds\": \"Total TDS\",\r\n            \"total_tds_deducted_summary\": \"Total TDS Deducted (Summary)\",\r\n            \"total_tds_deposited_summary\": \"Total TDS Deposited (Summary)\",\r\n            \"quarter_1_receipt_number\": \"Q1 Receipt Number\",\r\n            \"quarter_1_tds_deducted\": \"Q1 TDS Deducted\",\r\n            \"quarter_1_tds_deposited\": \"Q1 TDS Deposited\",\r\n            \"advance_tax\": \"Advance Tax\",\r\n            \"self_assessment_tax\": \"Self-Assessment Tax\",\r\n            \"taxable_income_as_per_document\": \"Taxable Income (Doc)\",\r\n            \"tax_payable_as_per_document\": \"Tax Payable (Doc)\",\r\n            \"refund_status_as_per_document\": \"Refund Status (Doc)\",\r\n            \"tax_regime_chosen\": \"Tax Regime Chosen\",\r\n            \"net_amount_payable\": \"Net Amount Payable\",\r\n            \"days_present\": \"Days Present\",\r\n            \"overtime_hours\": \"Overtime Hours\",\r\n            \"account_holder_name\": \"Account Holder Name\",\r\n            \"account_number\": \"Account Number\",\r\n            \"ifsc_code\": \"IFSC Code\",\r\n            \"bank_name\": \"Bank Name\",\r\n            \"branch_address\": \"Branch Address\",\r\n            \"opening_balance\": \"Opening Balance\",\r\n            \"closing_balance\": \"Closing Balance\",\r\n            \"total_deposits\": \"Total Deposits\",\r\n            \"total_withdrawals\": \"Total Withdrawals\"\r\n        };\r\n        \r\n        return (\r\n            <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                {fieldOrder.map(key => {\r\n                    let value = fields[key];\r\n                    // Skip if value is null, undefined, \"null\", or 0 for numbers (unless it's a critical zero like a balance)\r\n                    // We'll display 0.0 for key financial figures explicitly, but filter \"null\" strings\r\n                    if (value === null || value === undefined || (typeof value === 'string' && value.toLowerCase() === 'null')) {\r\n                        return null;\r\n                    }\r\n\r\n                    // For numbers, convert to currency if applicable and not 0, or just display 0 if it's a financial figure\r\n                    if (typeof value === 'number') {\r\n                        if (key.includes('balance') || key.includes('total_deposits') || key.includes('total_withdrawals') || \r\n                            key.includes('tax') || key.includes('income') || key.includes('deduction') || key.includes('salary') ||\r\n                            key.includes('allowance') || key.includes('perquisites') || key.includes('epf') || key.includes('esi') ||\r\n                            key.includes('overtime_pay') || key.includes('net_amount_payable')) {\r\n                            // Display 0.0 for actual zero financial values, otherwise format currency\r\n                            value = formatCurrency(value);\r\n                        } else {\r\n                            // For other numeric fields, just display the number directly\r\n                            value = value.toString();\r\n                        }\r\n                    }\r\n\r\n                    // Special handling for transaction_summary if it's an array and not empty\r\n                    if (key === \"transaction_summary\" && Array.isArray(value) && value.length > 0) {\r\n                        return (\r\n                            <li key={key}>\r\n                                <strong>{displayNames[key] || key}:</strong>\r\n                                <pre className=\"extracted-fields-preview mt-2\">\r\n                                    {JSON.stringify(value.map(tx => ({\r\n                                        date: tx.date !== \"0000-01-01\" ? tx.date : \"N/A\", // Format date\r\n                                        description: tx.description,\r\n                                        amount: formatCurrency(tx.amount)\r\n                                    })), null, 2)}\r\n                                </pre>\r\n                            </li>\r\n                        );\r\n                    }\r\n                    \r\n                    // Filter out empty arrays as well\r\n                    if (Array.isArray(value) && value.length === 0) {\r\n                        return null;\r\n                    }\r\n\r\n                    // Render other fields if their value is not \"null\" (string) or empty string\r\n                    if (typeof value === 'string' && value.trim() === '') {\r\n                        return null;\r\n                    }\r\n\r\n                    return (\r\n                        <li key={key}>\r\n                            <strong>{displayNames[key] || key}:</strong> {value}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"tax-uploader-container section-box\">\r\n            {/* Inlined CSS for styling the component */}\r\n            <style>{`\r\n                /* General Body Styling */\r\n                body {\r\n                    font-family: 'Inter', sans-serif;\r\n                    background-color: #f0f2f5;\r\n                    margin: 0;\r\n                    padding: 20px;\r\n                    color: #333;\r\n                    line-height: 1.6;\r\n                }\r\n\r\n                /* Section Box Styling */\r\n                .section-box {\r\n                    background-color: #ffffff;\r\n                    padding: 25px;\r\n                    border-radius: 12px;\r\n                    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n                    margin-bottom: 25px;\r\n                    border: 1px solid #e0e0e0;\r\n                }\r\n\r\n                /* Tax Uploader Container */\r\n                .tax-uploader-container {\r\n                    max-width: 900px;\r\n                    margin: 30px auto;\r\n                    padding: 30px;\r\n                    background-color: #fff;\r\n                    border-radius: 15px;\r\n                    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);\r\n                    border: 1px solid #d0d0d0;\r\n                }\r\n\r\n                .tax-uploader-title {\r\n                    text-align: center;\r\n                    color: #2c3e50;\r\n                    margin-bottom: 30px;\r\n                    font-size: 2.2em;\r\n                    font-weight: 700;\r\n                    letter-spacing: -0.5px;\r\n                }\r\n\r\n                /* Form Group */\r\n                .tax-uploader-form-group {\r\n                    margin-bottom: 25px;\r\n                }\r\n\r\n                .tax-uploader-label {\r\n                    display: block;\r\n                    margin-bottom: 10px;\r\n                    font-weight: 600;\r\n                    color: #34495e;\r\n                    font-size: 1.1em;\r\n                }\r\n\r\n                .tax-uploader-file-input {\r\n                    display: block;\r\n                    width: 100%;\r\n                    padding: 12px;\r\n                    border: 1px solid #ced4da;\r\n                    border-radius: 8px;\r\n                    font-size: 1em;\r\n                    color: #495057;\r\n                    background-color: #f8f9fa;\r\n                    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n                }\r\n\r\n                .tax-uploader-file-input:focus {\r\n                    border-color: #80bdff;\r\n                    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n                    outline: none;\r\n                }\r\n\r\n                .selected-files-text {\r\n                    margin-top: 10px;\r\n                    font-size: 0.95em;\r\n                    color: #555;\r\n                    font-style: italic;\r\n                }\r\n\r\n                /* Buttons */\r\n                .tax-uploader-button {\r\n                    display: block;\r\n                    width: 100%;\r\n                    padding: 14px 20px;\r\n                    background-color: #007bff;\r\n                    color: white;\r\n                    border: none;\r\n                    border-radius: 8px;\r\n                    font-size: 1.1em;\r\n                    font-weight: 600;\r\n                    cursor: pointer;\r\n                    transition: background-color 0.3s ease, transform 0.2s ease;\r\n                    box-shadow: 0 4px 10px rgba(0, 123, 255, 0.2);\r\n                    margin-top: 20px;\r\n                }\r\n\r\n                .tax-uploader-button:hover {\r\n                    background-color: #0056b3;\r\n                    transform: translateY(-2px);\r\n                }\r\n\r\n                .tax-uploader-button:disabled {\r\n                    background-color: #a0c9f1;\r\n                    cursor: not-allowed;\r\n                    box-shadow: none;\r\n                    transform: none;\r\n                }\r\n\r\n                .action-buttons-container {\r\n                    display: flex;\r\n                    flex-wrap: wrap;\r\n                    gap: 15px;\r\n                    margin-top: 30px;\r\n                    justify-content: center;\r\n                }\r\n\r\n                .action-buttons-container .tax-uploader-button {\r\n                    flex: 1;\r\n                    min-width: 250px;\r\n                    margin: 0; /* Override default margin */\r\n                }\r\n\r\n                .get-suggestions-button {\r\n                    background-color: #28a745;\r\n                    box-shadow: 0 4px 10px rgba(40, 167, 69, 0.2);\r\n                }\r\n\r\n                .get-suggestions-button:hover {\r\n                    background-color: #218838;\r\n                }\r\n\r\n                .generate-itr-button {\r\n                    background-color: #6c757d;\r\n                    box-shadow: 0 4px 10px rgba(108, 117, 125, 0.2);\r\n                }\r\n\r\n                .generate-itr-button:hover {\r\n                    background-color: #5a6268;\r\n                }\r\n\r\n                /* Loading Spinner */\r\n                .tax-uploader-loading {\r\n                    display: flex;\r\n                    align-items: center;\r\n                    justify-content: center;\r\n                    margin-top: 25px;\r\n                    font-size: 1.1em;\r\n                    color: #007bff;\r\n                    font-weight: 500;\r\n                }\r\n\r\n                .tax-uploader-spinner {\r\n                    border: 4px solid #f3f3f3;\r\n                    border-top: 4px solid #007bff;\r\n                    border-radius: 50%;\r\n                    width: 24px;\r\n                    height: 24px;\r\n                    animation: spin 1s linear infinite;\r\n                    margin-right: 10px;\r\n                }\r\n\r\n                @keyframes spin {\r\n                    0% { transform: rotate(0deg); }\r\n                    100% { transform: rotate(360deg); }\r\n                }\r\n\r\n                /* Messages */\r\n                .tax-uploader-message {\r\n                    padding: 15px;\r\n                    margin-top: 25px;\r\n                    border-radius: 8px;\r\n                    font-size: 1em;\r\n                    font-weight: 500;\r\n                    text-align: center;\r\n                }\r\n\r\n                .tax-uploader-message.info {\r\n                    background-color: #e7f3ff;\r\n                    color: #0056b3;\r\n                    border: 1px solid #b3d7ff;\r\n                }\r\n\r\n                .tax-uploader-message.success {\r\n                    background-color: #d4edda;\r\n                    color: #155724;\r\n                    border: 1px solid #c3e6cb;\r\n                }\r\n\r\n                .tax-uploader-message.error {\r\n                    background-color: #f8d7da;\r\n                    color: #721c24;\r\n                    border: 1px solid #f5c6cb;\r\n                }\r\n\r\n                /* Tax Summary Output */\r\n                .tax-summary-output {\r\n                    margin-top: 40px;\r\n                    background-color: #f9f9f9;\r\n                    padding: 25px;\r\n                    border-radius: 12px;\r\n                    box-shadow: inset 0 2px 8px rgba(0, 0, 0, 0.05);\r\n                    border: 1px solid #eee;\r\n                }\r\n\r\n                .tax-summary-output h3 {\r\n                    color: #2c3e50;\r\n                    margin-bottom: 25px;\r\n                    text-align: center;\r\n                    font-size: 2em;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .document-processing-summary-section,\r\n                .aggregated-financial-data-section,\r\n                .final-tax-computation-section,\r\n                .suggestions-output .section-box {\r\n                    margin-top: 20px;\r\n                    padding: 20px;\r\n                    background-color: #ffffff;\r\n                    border-radius: 10px;\r\n                    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);\r\n                    border: 1px solid #e9ecef;\r\n                }\r\n\r\n                .section-title {\r\n                    color: #34495e;\r\n                    font-size: 1.6em;\r\n                    margin-bottom: 20px;\r\n                    border-bottom: 2px solid #f0f2f5;\r\n                    padding-bottom: 10px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .document-status-item {\r\n                    background-color: #fdfdfd;\r\n                    padding: 15px;\r\n                    border-radius: 8px;\r\n                    margin-bottom: 15px;\r\n                    border: 1px solid #f0f0f0;\r\n                    box-shadow: 0 1px 5px rgba(0, 0, 0, 0.05);\r\n                }\r\n\r\n                .document-status-item p {\r\n                    margin: 5px 0;\r\n                    font-size: 0.95em;\r\n                    color: #444;\r\n                }\r\n\r\n                .document-status-item strong {\r\n                    color: #2c3e50;\r\n                }\r\n\r\n                .status-success {\r\n                    color: #28a745;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .status-warning {\r\n                    color: #ffc107;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .status-error {\r\n                    color: #dc3545;\r\n                    font-weight: 700;\r\n                }\r\n\r\n                .extracted-fields-preview, .extracted-raw-text-preview {\r\n                    background-color: #e9ecef;\r\n                    border: 1px solid #dee2e6;\r\n                    padding: 10px;\r\n                    border-radius: 5px;\r\n                    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;\r\n                    font-size: 0.85em;\r\n                    white-space: pre-wrap; /* Ensures text wraps */\r\n                    word-break: break-all; /* Breaks words if necessary */\r\n                    max-height: 200px; /* Limit height for long outputs */\r\n                    overflow-y: auto; /* Add scroll for overflow */\r\n                }\r\n\r\n                .income-details-section,\r\n                .deductions-section,\r\n                .taxation-summary-section {\r\n                    margin-bottom: 25px;\r\n                    padding: 15px;\r\n                    border: 1px solid #f0f0f0;\r\n                    border-radius: 8px;\r\n                    background-color: #fdfdfd;\r\n                }\r\n\r\n                .income-details-section h5,\r\n                .deductions-section h5,\r\n                .taxation-summary-section h5 {\r\n                    color: #007bff;\r\n                    font-size: 1.3em;\r\n                    margin-bottom: 15px;\r\n                    border-bottom: 1px solid #e0e0e0;\r\n                    padding-bottom: 8px;\r\n                }\r\n\r\n                .income-details-section p,\r\n                .deductions-section p,\r\n                .taxation-summary-section p {\r\n                    margin: 8px 0;\r\n                    font-size: 0.98em;\r\n                    color: #333;\r\n                }\r\n\r\n                .computation-detail {\r\n                    margin-bottom: 10px;\r\n                    padding-bottom: 5px;\r\n                    border-bottom: 1px dashed #e9ecef;\r\n                }\r\n\r\n                .computation-detail:last-child {\r\n                    border-bottom: none;\r\n                }\r\n\r\n                .computation-detail strong {\r\n                    color: #2c3e50;\r\n                }\r\n\r\n                .final-amount-box {\r\n                    margin-top: 20px;\r\n                    padding: 15px;\r\n                    border-radius: 8px;\r\n                    background-color: #e9f7ef; /* Light green for positive outcome */\r\n                    border: 1px solid #c3e6cb;\r\n                    text-align: center;\r\n                    font-size: 1.1em;\r\n                    font-weight: 600;\r\n                }\r\n\r\n                .final-amount-box .tax-due-amount {\r\n                    background-color: #f8d7da; /* Light red for tax due */\r\n                    color: #721c24;\r\n                    border: 1px solid #f5c6cb;\r\n                    padding: 10px;\r\n                    border-radius: 5px;\r\n                    margin-top: 10px;\r\n                }\r\n\r\n                .final-amount-box .refund-amount {\r\n                    background-color: #d4edda; /* Light green for refund */\r\n                    color: #155724;\r\n                    border: 1px solid #c3e6cb;\r\n                    padding: 10px;\r\n                    border-radius: 5px;\r\n                    margin-top: 10px;\r\n                }\r\n\r\n                .computation-notes {\r\n                    margin-top: 20px;\r\n                    padding: 10px;\r\n                    background-color: #f0f8ff;\r\n                    border: 1px solid #d1e7fd;\r\n                    border-radius: 8px;\r\n                    font-size: 0.9em;\r\n                    color: #444;\r\n                    font-style: italic;\r\n                }\r\n\r\n                .highlight-regime {\r\n                    font-weight: bold;\r\n                    color: #007bff;\r\n                }\r\n\r\n                /* Suggestions specific styling */\r\n                .suggestions-list {\r\n                    list-style-type: disc;\r\n                    margin-left: 20px;\r\n                    padding-left: 0;\r\n                }\r\n\r\n                .suggestions-list li {\r\n                    margin-bottom: 8px;\r\n                    color: #333;\r\n                }\r\n\r\n                .gemini-regime-analysis {\r\n                    margin-top: 20px;\r\n                    padding: 15px;\r\n                    background-color: #e6f7ff;\r\n                    border: 1px solid #91d5ff;\r\n                    border-radius: 8px;\r\n                }\r\n\r\n                .gemini-regime-analysis h4 {\r\n                    color: #0056b3;\r\n                    margin-bottom: 10px;\r\n                }\r\n\r\n                /* Responsive Adjustments */\r\n                @media (max-width: 768px) {\r\n                    .tax-uploader-container {\r\n                        margin: 20px 10px;\r\n                        padding: 20px;\r\n                    }\r\n\r\n                    .tax-uploader-title {\r\n                        font-size: 1.8em;\r\n                    }\r\n\r\n                    .tax-uploader-button {\r\n                        padding: 12px 15px;\r\n                        font-size: 1em;\r\n                    }\r\n\r\n                    .action-buttons-container {\r\n                        flex-direction: column;\r\n                        gap: 10px;\r\n                    }\r\n\r\n                    .action-buttons-container .tax-uploader-button {\r\n                        min-width: unset;\r\n                    }\r\n\r\n                    .tax-summary-output h3 {\r\n                        font-size: 1.6em;\r\n                    }\r\n\r\n                    .section-title {\r\n                        font-size: 1.4em;\r\n                    }\r\n\r\n                    .income-details-section h5,\r\n                    .deductions-section h5,\r\n                    .taxation-summary-section h5 {\r\n                        font-size: 1.1em;\r\n                    }\r\n                }\r\n\r\n                @media (max-width: 480px) {\r\n                    body {\r\n                        padding: 10px;\r\n                    }\r\n\r\n                    .tax-uploader-container {\r\n                        margin: 10px;\r\n                        padding: 15px;\r\n                    }\r\n\r\n                    .tax-uploader-title {\r\n                        font-size: 1.5em;\r\n                    }\r\n\r\n                    .tax-uploader-button {\r\n                        font-size: 0.9em;\r\n                        padding: 10px 12px;\r\n                    }\r\n\r\n                    .tax-uploader-message {\r\n                        font-size: 0.9em;\r\n                        padding: 10px;\r\n                    }\r\n                }\r\n            `}</style>\r\n            <h2 className=\"tax-uploader-title\">Upload Tax Documents</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                {/* Document Type Selection */}\r\n                <div className=\"tax-uploader-form-group\">\r\n                    <label htmlFor=\"documentType\" className=\"tax-uploader-label\">\r\n                        Specify Document Type (Optional, for better accuracy):\r\n                    </label>\r\n                    <select\r\n                        id=\"documentType\"\r\n                        value={documentTypeHint}\r\n                        onChange={handleDocumentTypeChange}\r\n                        className=\"tax-uploader-file-input\"\r\n                        disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n                    >\r\n                        {documentTypes.map(type => (\r\n                            <option key={type} value={type}>{type}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"tax-uploader-form-group\">\r\n                    <label htmlFor=\"file-input\" className=\"tax-uploader-label\">Choose Files (select multiple with Ctrl/Cmd+Click):</label>\r\n                    <input\r\n                        id=\"file-input\"\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={handleFileChange}\r\n                        className=\"tax-uploader-file-input\"\r\n                        disabled={loading || isGeneratingSuggestions || isGeneratingITR}\r\n                        accept=\".pdf,.png,.jpg,.jpeg\" // Specify accepted file types\r\n                    />\r\n                    {selectedFiles.length > 0 && (\r\n                        <p className=\"selected-files-text\">\r\n                            Selected: {selectedFiles.map(file => file.name).join(', ')}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"tax-uploader-button\"\r\n                    disabled={loading || selectedFiles.length === 0 || isGeneratingSuggestions || isGeneratingITR}\r\n                >\r\n                    {loading ? (\r\n                        <>\r\n                            <div className=\"tax-uploader-spinner\"></div>\r\n                            Processing with AI...\r\n                        </>\r\n                    ) : (\r\n                        'Upload & Process Documents'\r\n                    )}\r\n                </button>\r\n            </form>\r\n\r\n            {(loading || isGeneratingSuggestions || isGeneratingITR) && (\r\n                <div className=\"tax-uploader-loading\">\r\n                    <div className=\"tax-uploader-spinner\"></div>\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            {message && !loading && !isGeneratingSuggestions && !isGeneratingITR && (\r\n                <div className={`tax-uploader-message ${messageType}`}>\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            {/* Action buttons appear only after initial document processing is successful */}\r\n            {uploadResult && uploadResult.record_id && !loading && (\r\n                <div className=\"action-buttons-container\">\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={handleGetSuggestions}\r\n                        className=\"tax-uploader-button get-suggestions-button\"\r\n                        disabled={isGeneratingSuggestions || isGeneratingITR}\r\n                    >\r\n                        {isGeneratingSuggestions ? 'Generating Suggestions...' : 'Get AI Suggestions & ML Predictions'}\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        onClick={handleGenerateITRForm}\r\n                        className=\"tax-uploader-button generate-itr-button\"\r\n                        disabled={isGeneratingITR || isGeneratingSuggestions}\r\n                    >\r\n                        {isGeneratingITR ? 'Generating ITR...' : 'Generate ITR Form'}\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Display Document Processing Summary (from initial upload) */}\r\n            {uploadResult && uploadResult.document_processing_summary && (\r\n                <div className=\"tax-summary-output\">\r\n                    <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Document Processing Summary</h3>\r\n                    <div className=\"document-processing-summary-section section-box\">\r\n                        {uploadResult.document_processing_summary.map((doc, index) => {\r\n                            const statusClass = doc.status === 'success' ? 'status-success' :\r\n                                                doc.status === 'warning' ? 'status-warning' : 'status-error';\r\n                            return (\r\n                                <div key={index} className=\"document-status-item\">\r\n                                    <p><strong>File:</strong> {doc.filename} ({doc.stored_path && <a href={`http://127.0.0.1:5000${doc.stored_path}`} target=\"_blank\" rel=\"noopener noreferrer\">View Stored Document</a>})</p>\r\n                                    <p><strong>Status:</strong> <span className={statusClass}>{doc.status?.toUpperCase() || 'N/A'}</span></p>\r\n                                    <p><strong>Identified Type:</strong> {doc.identified_type || 'N/A'}</p>\r\n                                    <p><strong>Message:</strong> {doc.message || 'N/A'}</p>\r\n                                    {doc.extracted_fields && Object.keys(doc.extracted_fields).length > 0 && (\r\n                                        <p><strong>Extracted Fields:</strong>\r\n                                            <pre className=\"extracted-fields-preview\">\r\n                                                {renderExtractedFields(doc.extracted_fields)}\r\n                                            </pre>\r\n                                        </p>\r\n                                    )}\r\n                                    {doc.extracted_raw_text && (\r\n                                        <p><strong>Extracted Raw Text Snippet:</strong> <pre className=\"extracted-raw-text-preview\">{doc.extracted_raw_text.substring(0, 200)}...</pre></p>\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Display Aggregated Financial Data and Rule-Based Computation (from initial upload) */}\r\n            {uploadResult && uploadResult.aggregated_financial_data && uploadResult.final_tax_computation_summary && (\r\n                <div className=\"tax-summary-output\">\r\n                    <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>Aggregated & Rule-Based Computation</h3>\r\n\r\n                    <div className=\"aggregated-financial-data-section section-box\">\r\n                        <h4 className=\"section-title\">Aggregated Financial Data Summary</h4>\r\n                        <div className=\"income-details-section\">\r\n                            <h5>Income Details</h5>\r\n                            <p><strong>Financial Year:</strong> {uploadResult.aggregated_financial_data.financial_year || 'N/A'}</p>\r\n                            <p><strong>Assessment Year:</strong> {uploadResult.aggregated_financial_data.assessment_year || 'N/A'}</p>\r\n                            <p><strong>Name:</strong> {uploadResult.aggregated_financial_data.name_of_employee || 'N/A'}</p>\r\n                            <p><strong>PAN:</strong> {uploadResult.aggregated_financial_data.pan_of_employee || 'N/A'}</p>\r\n                            <p><strong>Date of Birth:</strong> {uploadResult.aggregated_financial_data.date_of_birth !== \"0000-01-01\" ? uploadResult.aggregated_financial_data.date_of_birth : 'N/A'}</p>\r\n                            <p><strong>Age:</strong> {uploadResult.aggregated_financial_data.Age || 'N/A'}</p>\r\n                            <p><strong>Gross Annual Salary:</strong> {formatCurrency(uploadResult.aggregated_financial_data.gross_salary_total)}</p>\r\n                            <p><strong>Exempt Allowances:</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_exempt_allowances)}</p>\r\n                            <p><strong>Income from House Property:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_house_property)}</p>\r\n                            <p><strong>Income from Other Sources:</strong> {formatCurrency(uploadResult.aggregated_financial_data.income_from_other_sources)}</p>\r\n                            <p><strong>Long Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_long_term)}</p>\r\n                            <p><strong>Short Term Capital Gains:</strong> {formatCurrency(uploadResult.aggregated_financial_data.capital_gains_short_term)}</p>\r\n                            <p><strong>Total Gross Income (Aggregated):</strong> {formatCurrency(uploadResult.final_tax_computation_summary.calculated_gross_income)}</p>\r\n                        </div>\r\n                        <div className=\"deductions-section\">\r\n                            <h5>Deductions Claimed</h5>\r\n                            {uploadResult.aggregated_financial_data.standard_deduction > 0 && \r\n                                <p><strong>Standard Deduction:</strong> {formatCurrency(uploadResult.aggregated_financial_data.standard_deduction)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.professional_tax > 0 &&\r\n                                <p><strong>Professional Tax:</strong> {formatCurrency(uploadResult.aggregated_financial_data.professional_tax)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.interest_on_housing_loan_24b !== 0 &&\r\n                                <p><strong>Interest on Home Loan (Section 24(b)):</strong> {formatCurrency(uploadResult.aggregated_financial_data.interest_on_housing_loan_24b)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80C > 0 &&\r\n                                <p><strong>Section 80C Investments:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80C)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80CCD1B > 0 &&\r\n                                <p><strong>Section 80CCD1B:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80CCD1B)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80D > 0 &&\r\n                                <p><strong>Section 80D (Health Insurance):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80D)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80G > 0 &&\r\n                                <p><strong>Section 80G:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80G)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80TTA > 0 &&\r\n                                <p><strong>Section 80TTA:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTA)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80TTB > 0 &&\r\n                                <p><strong>Section 80TTB:</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80TTB)}</p>\r\n                            }\r\n                            {uploadResult.aggregated_financial_data.deduction_80E > 0 &&\r\n                                <p><strong>Section 80E (Education Loan Interest):</strong> {formatCurrency(uploadResult.aggregated_financial_data.deduction_80E)}</p>\r\n                            }\r\n                            <p><strong>Total Deductions (Aggregated for Display):</strong> {formatCurrency(uploadResult.aggregated_financial_data.total_deductions)}</p>\r\n                        </div>\r\n                        <div className=\"taxation-summary-section\">\r\n                            <h5>Tax Payments & Regime</h5>\r\n                            <p><strong>Total TDS Credit:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.total_tds_credit)}</p>\r\n                            <p><strong>Advance Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.advance_tax)}</p>\r\n                            <p><strong>Self-Assessment Tax Paid:</strong> {formatCurrency(uploadResult.aggregated_financial_data.self_assessment_tax)}</p>\r\n                            <p><strong>Tax Regime Chosen (from docs):</strong> <span className=\"highlight-regime\">{uploadResult.aggregated_financial_data.tax_regime_chosen || 'Not Specified'}</span></p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"final-tax-computation-section section-box\">\r\n                        <h4 className=\"section-title\">Final Tax Computation Summary (Rule-Based)</h4>\r\n                        {uploadResult.final_tax_computation_summary.calculation_details && uploadResult.final_tax_computation_summary.calculation_details.length > 0 && (\r\n                            <div className=\"computation-details-list\">\r\n                                <h5>Calculation Steps:</h5>\r\n                                <ul style={{ listStyleType: 'decimal', marginLeft: '20px', paddingLeft: '0' }}>\r\n                                    {uploadResult.final_tax_computation_summary.calculation_details.map((detail, idx) => (\r\n                                        <li key={idx} className=\"computation-detail-item\">{detail}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </div>\r\n                        )}\r\n                        <div className=\"final-amount-box\">\r\n                            <p><strong>Computed Taxable Income:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.computed_taxable_income)}</p>\r\n                            <p><strong>Estimated Tax Payable:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.estimated_tax_payable)}</p>\r\n                            <p><strong>Tax Regime Considered for Rule-Based Calculation:</strong> <span className=\"highlight-regime\">{uploadResult.final_tax_computation_summary.regime_considered || 'N/A'}</span></p>\r\n                            {uploadResult.final_tax_computation_summary.predicted_refund_due > 0 && (\r\n                                <p className=\"refund-amount\">\r\n                                    <strong>Refund Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_refund_due)}\r\n                                </p>\r\n                            )}\r\n                            {uploadResult.final_tax_computation_summary.predicted_additional_due > 0 && (\r\n                                <p className=\"tax-due-amount\">\r\n                                    <strong>Additional Tax Due:</strong> {formatCurrency(uploadResult.final_tax_computation_summary.predicted_additional_due)}\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n                        {uploadResult.final_tax_computation_summary.notes && uploadResult.final_tax_computation_summary.notes.length > 0 && (\r\n                            <p className=\"computation-notes\">\r\n                                <strong>Note:</strong> {Array.isArray(uploadResult.final_tax_computation_summary.notes) ? uploadResult.final_tax_computation_summary.notes.join(', ') : uploadResult.final_tax_computation_summary.notes}\r\n                            </p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Display Suggestions from Gemini and ML Predictions (only after Get Suggestions is clicked) */}\r\n            {suggestionsResult && !isGeneratingSuggestions && (\r\n                <div className=\"suggestions-output tax-summary-output\">\r\n                    <h3 className=\"tax-uploader-title\" style={{ marginTop: '30px', fontSize: '1.8em' }}>AI Recommendations & Predictions</h3>\r\n                    <div className=\"section-box\">\r\n                        {suggestionsResult.suggestions_from_gemini && suggestionsResult.suggestions_from_gemini.length > 0 ? (\r\n                            <>\r\n                                <h4>Based on Gemini AI:</h4>\r\n                                <ul className=\"suggestions-list\">\r\n                                    {suggestionsResult.suggestions_from_gemini.map((suggestion, index) => (\r\n                                        <li key={index}>{suggestion}</li>\r\n                                    ))}\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <p>Gemini did not provide specific tax-saving suggestions at this moment, but your tax situation seems optimized.</p>\r\n                        )}\r\n                        {suggestionsResult.gemini_regime_analysis && (\r\n                            <div className=\"gemini-regime-analysis\">\r\n                                <h4>Gemini's Regime Analysis:</h4>\r\n                                <p>{suggestionsResult.gemini_regime_analysis}</p>\r\n                            </div>\r\n                        )}\r\n                        {suggestionsResult.ml_prediction_summary && (\r\n                            <>\r\n                                <h4>ML Model Prediction:</h4>\r\n                                {suggestionsResult.ml_prediction_summary.predicted_tax_regime && (\r\n                                    <p><strong>Predicted Tax Regime:</strong> {suggestionsResult.ml_prediction_summary.predicted_tax_regime}</p>\r\n                                )}\r\n                                <p><strong>Predicted Tax Liability:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_tax_liability)}</p>\r\n                                <p className=\"refund-amount\"><strong>Predicted Refund Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_refund_due)}</p>\r\n                                <p className=\"tax-due-amount\"><strong>Predicted Additional Tax Due:</strong> {formatCurrency(suggestionsResult.ml_prediction_summary.predicted_additional_due)}</p>\r\n                                {suggestionsResult.ml_prediction_summary.notes && (\r\n                                    <p><strong>Notes:</strong> {suggestionsResult.ml_prediction_summary.notes}</p>\r\n                                )}\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaxUploader;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}